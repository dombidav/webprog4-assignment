var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.656,1,1.429]],["body/components/AppComponent.html",[0,0.96,1,1.679,2,1.254,3,0.058,4,0.058,5,0.843,6,0.843,7,0.843,8,0.843,9,0.07,10,1.643,11,1.232,12,2.107,13,2.408,14,0.862,15,1.826,16,0.843,17,2.994,18,2.93,19,1.375,20,3.92,21,1.375,22,3.095,23,0.283,24,0.765,25,1.395,26,3.303,27,3.92,28,3.92,29,0.735,30,4.522,31,2.107,32,2.284,33,3.095,34,1.597,35,3.875,36,0.678,37,1.898,38,5.636,39,4.522,40,4.522,41,5.877,42,1.395,43,3.095,44,0.796,45,0.016,46,0.875,47,0.813,48,0.796,49,4.012,50,3.049,51,3.095,52,2.681,53,1.898,54,2.681,55,1.688,56,3.285,57,3.095,58,2.584,59,1.898,60,3.095,61,3.095,62,3.92,63,3.395,64,0.858,65,1.741,66,1.898,67,2.681,68,2.681,69,3.095,70,3.095,71,1.508,72,1.898,73,3.095,74,1.2,75,4.522,76,3.095,77,1.101,78,3.095,79,2.408,80,3.095,81,3.095,82,1.898,83,4.522,84,1.898,85,1.898,86,1.898,87,0.235,88,0.168,89,1.476,90,0.979,91,1.476,92,1.476,93,1.251,94,1.251,95,0.058,96,0.034,97,2.571,98,1.898,99,1.898,100,1.898,101,1.898,102,1.898,103,1.898,104,1.898,105,1.898,106,1.898,107,0.705,108,1.643,109,1.898,110,1.898,111,0.979,112,1.898,113,1.898,114,1.898,115,1.898,116,1.898,117,1.898,118,1.149,119,3.095,120,1.643,121,1.898,122,1.898,123,1.898,124,0.469,125,4.522,126,3.095,127,3.095,128,3.095,129,2.408,130,1.2,131,1.643,132,3.095,133,6.909,134,1.898,135,3.395,136,3.917,137,2.842,138,4.156,139,5.84,140,1.898,141,6.642,142,4.801,143,3.395,144,4.522,145,3.92,146,1.643,147,4.881,148,5.877,149,6.4,150,2.614,151,5.343,152,4.982,153,1.898,154,4.314,155,3.095,156,3.92,157,3.095,158,2.681,159,1.643,160,1.643,161,1.898,162,1.898,163,1.898,164,4.156,165,3.917,166,1.898,167,2.681,168,1.898,169,3.92,170,4.522,171,3.095,172,5.343,173,1.898,174,1.898,175,1.898,176,1.898,177,1.898,178,4.522,179,1.898,180,3.917,181,1.898,182,1.898,183,4.522,184,1.898,185,1.898,186,1.898,187,6.252,188,1.351,189,3.095,190,1.898,191,1.898,192,1.898,193,1.643,194,1.643,195,1.643,196,1.898,197,1.643,198,1.898,199,1.643,200,1.643,201,1.898,202,0.843,203,1.375,204,1.375,205,0.843,206,0.843,207,0.843,208,0.675,209,0.843,210,0.675,211,0.843,212,0.705,213,0.705,214,0.843,215,0.675,216,0.843,217,0.675,218,0.508,219,1.741,220,0.675,221,0.843,222,0.675,223,0.843,224,0.675,225,0.55,226,0.675,227,0.843,228,0.675,229,0.469,230,0.675,231,0.675,232,0.843,233,0.843,234,0.006,235,0.006]],["title/modules/AppModule.html",[236,0.914,237,2.537]],["body/modules/AppModule.html",[1,2.734,3,0.096,4,0.096,9,0.082,11,0.986,12,2.127,18,1.329,45,0.016,50,2.439,79,2.439,87,0.346,88,0.278,89,2.439,90,1.618,91,3.551,92,2.439,93,2.067,95,0.14,96,0.056,97,1.618,107,1.999,111,1.618,124,0.775,130,1.216,234,0.009,235,0.009,236,1.084,237,5.123,238,0.715,239,1.695,240,2.715,241,2.715,242,2.715,243,2.715,244,2.715,245,4.324,246,3.576,247,3.791,248,3.782,249,4.037,250,3.791,251,3.791,252,1.85,253,1.27,254,2.439,255,2.027,256,4.565,257,1.174,258,3.953,259,4.565,260,3.953,261,2.439,262,1.329,263,4.565,264,1.216,265,3.135,266,1.392,267,3.135,268,2.232,269,2.715,270,4.565,271,3.135,272,3.135,273,2.715,274,4.187,275,4.565,276,4.187,277,4.565,278,2.439,279,4.565,280,3.135,281,4.565,282,3.135,283,3.953,284,2.715,285,2.127,286,3.25,287,1.216,288,2.439,289,2.715,290,3.01,291,2.639,292,3.899,293,2.232,294,3.135,295,3.135,296,2.439,297,3.01,298,1.174,299,4.565,300,1.07,301,3.135,302,3.135,303,3.135,304,3.135,305,2.715,306,2.715,307,3.112,308,2.715,309,2.715,310,2.439,311,2.715,312,3.135,313,3.135,314,3.135,315,3.135,316,3.135,317,3.135,318,3.135,319,3.135,320,3.135,321,3.135,322,3.135,323,3.135,324,3.135,325,5.383,326,4.565,327,2.439,328,4.565,329,3.135,330,3.135,331,3.135,332,3.01,333,2.067,334,3.135,335,3.135]],["title/modules/AppRoutingModule.html",[236,0.914,245,2.537]],["body/modules/AppRoutingModule.html",[3,0.139,4,0.139,9,0.081,13,3.524,45,0.016,87,0.259,88,0.401,95,0.139,96,0.081,108,3.924,118,1.682,231,1.612,234,0.011,235,0.013,238,1.033,245,3.88,257,1.165,298,1.513,300,1.546,336,4.531,337,2.012,338,5.884,339,2.613,340,2.682,341,5.884,342,5.884,343,3.401,344,4.531,345,3.322,346,3.924,347,4.844,348,4.531,349,5.715,350,4.531,351,3.924,352,4.189,353,3.924,354,3.924,355,3.226,356,4.531,357,4.531,358,4.531,359,4.531,360,3.226,361,4.531,362,4.531,363,4.531,364,4.531,365,2.619,366,4.531,367,4.531,368,4.531,369,4.531,370,4.531,371,4.531,372,4.531,373,1.921]],["title/interceptors/AuthInterceptor.html",[293,2.74,374,3.333]],["body/interceptors/AuthInterceptor.html",[3,0.096,4,0.096,9,0.056,11,1.971,13,3.536,14,0.868,23,0.465,29,1.079,32,2.908,36,0.995,42,1.4,44,1.516,45,0.016,46,1.141,47,0.962,48,1.516,49,4.198,52,5.43,55,2.925,56,3.888,58,2.997,64,1.175,67,3.937,68,3.937,71,0.834,74,1.208,87,0.297,88,0.276,93,2.055,95,0.096,96,0.056,97,3.487,118,1.157,124,1.457,229,1.457,234,0.009,235,0.009,248,3.215,278,2.425,289,2.7,292,3.888,293,3.236,307,3.408,310,4.587,332,3.888,333,4.134,343,3.408,355,2.219,375,3.117,376,2.7,377,3.236,378,4.546,379,4.173,380,4.546,381,4.546,382,4.546,383,2.7,384,3.117,385,5.897,386,3.236,387,3.937,388,4.546,389,6.758,390,6.758,391,6.758,392,3.117,393,4.348,394,5.11,395,6.269,396,5.897,397,2.219,398,4.546,399,5.897,400,3.117,401,5.091,402,4.546,403,4.546,404,3.418,405,4.546,406,3.117,407,4.546,408,4.546,409,1.489,410,3.117,411,4.546,412,3.117,413,1.527,414,3.117,415,2.425,416,2.7,417,2.7,418,2.7,419,3.117,420,3.117,421,2.7,422,4.546,423,3.117,424,3.117,425,3.117,426,3.117,427,3.117,428,3.117,429,3.117,430,3.117,431,3.236,432,1.842,433,3.117,434,3.117,435,2.425,436,2.7,437,3.117,438,3.117,439,2.7,440,3.117,441,2.219,442,3.117,443,3.117,444,3.117,445,3.117,446,1.802]],["title/modules/AuthModule.html",[236,0.914,447,2.74]],["body/modules/AuthModule.html",[3,0.155,4,0.155,9,0.091,11,1.595,45,0.016,58,4.169,87,0.333,88,0.45,95,0.155,96,0.091,130,1.967,234,0.012,235,0.012,238,1.157,239,2.348,246,4.125,252,2.562,253,2.056,257,1.626,262,2.681,264,1.967,266,2.253,286,4.502,287,1.967,288,3.947,298,1.626,343,3.655,355,3.612,377,4.502,447,5.523,448,4.394,449,4.394,450,4.989,451,5.074,452,2.808,453,2.151]],["title/modules/AuthRoutingModule.html",[236,0.914,450,2.537]],["body/modules/AuthRoutingModule.html",[3,0.149,4,0.149,9,0.087,45,0.016,87,0.297,88,0.431,95,0.149,96,0.087,118,1.807,234,0.012,235,0.012,238,1.11,257,1.252,298,1.584,300,1.661,337,2.162,339,2.736,340,2.621,345,3.255,347,4.685,349,5.258,351,4.216,353,4.216,354,4.216,373,2.063,450,4.062,454,4.868,455,4.813,456,4.868,457,4.813,458,4.868,459,6.161,460,5.336,461,3.466,462,4.868,463,4.868,464,4.868,465,3.466,466,4.868,467,4.868,468,2.268]],["title/injectables/AuthService.html",[26,1.986,409,1.26]],["body/injectables/AuthService.html",[3,0.079,4,0.079,9,0.046,11,1.505,12,1.2,23,0.384,24,0.973,25,2.169,26,2.033,29,0.935,32,2.927,36,1.174,42,1.652,44,1.231,45,0.016,46,0.926,47,1.094,48,1.231,49,2.805,56,4.019,58,2.598,64,1.265,71,1.832,74,1.527,87,0.295,88,0.228,95,0.079,96,0.046,97,2.982,107,0.956,118,1.463,124,1.567,129,3.065,188,1.833,213,2.355,218,1.055,225,1.142,229,1.802,234,0.008,235,0.008,248,3.323,307,2.277,333,4.019,355,1.833,377,2.805,379,5.217,386,2.805,394,1.833,397,1.833,404,2.609,409,1.29,413,1.261,415,2.002,416,2.23,417,2.23,418,2.23,431,3.818,432,2.173,435,5.217,436,3.412,457,2.805,465,3.818,469,1.328,470,2.23,471,4.786,472,4.786,473,4.786,474,4.786,475,5.362,476,5.362,477,2.002,478,3.523,479,3.94,480,3.156,481,3.94,482,3.94,483,6.343,484,2.033,485,6.343,486,2.574,487,5.779,488,2.574,489,3.94,490,4.644,491,2.125,492,2.574,493,3.94,494,3.146,495,3.94,496,3.94,497,2.574,498,3.94,499,2.277,500,2.574,501,2.609,502,1.67,503,2.574,504,2.23,505,3.156,506,2.574,507,2.574,508,4.786,509,2.574,510,2.574,511,2.23,512,2.574,513,1.833,514,2.23,515,1.585,516,2.23,517,1.328,518,2.767,519,2.425,520,3.94,521,1.404,522,3.412,523,2.574,524,2.574,525,2.574,526,2.574,527,1.585,528,2.002,529,2.002,530,2.23,531,2.23,532,2.002,533,3.818,534,2.574,535,2.574,536,2.574,537,2.574,538,4.786,539,2.574,540,2.574,541,2.574,542,3.94,543,2.574,544,2.574,545,2.574,546,2.574,547,2.574,548,2.574,549,2.574,550,2.574,551,4.145,552,2.574,553,2.574,554,2.574,555,2.574,556,2.574,557,2.574,558,2.574,559,2.574,560,2.574,561,2.574]],["title/injectables/CrudService.html",[409,1.26,562,2.225]],["body/injectables/CrudService.html",[3,0.089,4,0.089,9,0.052,12,1.358,23,0.435,29,1.027,34,2.233,36,0.947,42,1.794,44,1.843,45,0.016,46,1.387,47,1.169,48,1.843,64,1.589,71,2.034,77,1.836,87,0.268,88,0.258,95,0.089,96,0.052,124,1.811,234,0.008,235,0.008,404,2.813,409,1.417,413,1.428,415,2.267,446,2.501,469,1.504,477,2.267,478,3.3,480,2.853,499,1.685,514,2.525,515,1.794,517,1.504,518,3.526,521,1.589,527,1.794,562,2.501,563,2.525,564,3.514,565,2.359,566,1.922,567,5.115,568,2.853,569,3.765,570,5.534,571,2.853,572,3.765,573,2.853,574,2.853,575,2.853,576,2.853,577,1.678,578,5.16,579,3.176,580,2.663,581,2.915,582,2.853,583,5.206,584,2.915,585,2.915,586,2.853,587,2.915,588,2.853,589,2.915,590,2.853,591,2.915,592,3.402,593,2.853,594,2.915,595,3.081,596,2.915,597,2.915,598,2.853,599,2.915,600,2.853,601,2.915,602,2.853,603,2.853,604,2.915,605,2.853,606,2.915,607,2.853,608,2.915,609,2.915,610,2.915,611,1.922,612,2.915,613,1.922,614,2.915,615,2.525,616,2.915,617,1.428,618,2.915,619,2.915,620,2.915,621,2.915,622,2.915,623,4.327,624,2.915,625,2.915,626,2.915,627,2.915,628,4.327,629,2.915,630,2.915,631,2.915,632,2.915,633,2.915,634,2.915,635,2.915,636,2.915,637,2.915]],["title/guards/GuestGuard.html",[455,2.74,638,2.994]],["body/guards/GuestGuard.html",[3,0.143,4,0.143,9,0.084,12,2.175,14,1.3,23,0.696,26,3.822,29,1.424,32,1.891,36,1.313,42,1.424,44,1.543,45,0.016,46,1.161,47,0.979,48,1.543,64,1.022,87,0.308,88,0.414,94,3.078,95,0.143,96,0.084,124,1.153,188,4.271,234,0.012,235,0.012,300,1.593,394,4.271,404,3.614,409,1.965,413,2.286,455,4.271,460,6.267,491,2.664,517,2.409,519,3.692,528,4.666,529,4.666,530,5.195,531,5.195,532,4.666,639,4.668,640,4.043,641,4.043,642,4.668,643,4.668,644,6.996,645,6.629,646,6.996,647,4.668,648,5.999,649,5.195,650,6.629,651,4.668]],["title/components/HomePage.html",[0,0.656,208,1.37]],["body/components/HomePage.html",[0,1.103,1,1.648,2,2.352,3,0.136,4,0.136,5,1.971,6,1.971,7,1.971,8,1.971,9,0.08,14,1.617,15,3.014,16,1.971,17,3.503,18,3.344,19,2.578,21,2.578,23,0.662,29,1.378,31,3.198,36,1.417,42,1.378,45,0.016,46,1.124,64,0.972,65,1.971,87,0.195,88,0.393,95,0.136,96,0.08,124,1.096,137,3.048,202,1.971,203,2.578,204,2.578,205,1.971,206,1.971,207,1.971,208,2.442,209,1.971,210,1.579,211,1.971,212,1.648,213,1.648,214,1.971,215,1.579,216,1.971,217,1.579,218,1.188,219,2.873,220,1.579,221,1.971,222,1.579,223,1.971,224,1.579,225,1.287,226,1.579,227,1.971,228,1.579,229,1.096,230,1.579,231,1.579,232,1.971,233,1.971,234,0.011,235,0.011,352,4.886,652,3.843,653,6.47,654,5.805,655,4.437,656,4.437]],["title/modules/HomePageModule.html",[236,0.914,657,2.74]],["body/modules/HomePageModule.html",[3,0.157,4,0.157,9,0.092,45,0.016,87,0.334,88,0.454,95,0.157,96,0.092,130,1.986,208,2.699,234,0.012,235,0.012,238,1.168,239,2.362,252,2.577,253,2.075,255,2.825,257,1.636,262,2.696,264,1.986,266,2.275,285,2.964,287,1.986,298,1.636,352,3.647,452,2.825,453,2.171,657,5.533,658,4.436,659,4.436,660,4.436,661,5.001,662,5.122,663,4.436]],["title/modules/HomePageRoutingModule.html",[236,0.914,661,2.537]],["body/modules/HomePageRoutingModule.html",[0,0.945,3,0.17,4,0.17,9,0.1,45,0.016,87,0.315,88,0.491,95,0.17,96,0.1,118,2.058,208,2.376,234,0.013,235,0.013,238,1.264,257,1.425,298,1.717,300,1.892,337,2.462,339,2.965,340,2.777,345,2.462,373,2.35,468,2.583,661,4.402,663,4.8,664,5.543]],["title/interfaces/ICrud.html",[665,1.116,666,1.986]],["body/interfaces/ICrud.html",[3,0.178,4,0.178,9,0.104,23,0.864,24,1.694,45,0.015,47,1.118,95,0.178,234,0.013,235,0.013,491,3.468,566,3.351,665,1.681,666,3.538,667,2.991,668,5.02,669,4.362]],["title/interfaces/IProject.html",[665,1.116,670,2.225]],["body/interfaces/IProject.html",[3,0.125,4,0.125,9,0.073,11,2.177,14,1.136,23,0.608,24,1.356,25,2.744,36,0.893,45,0.016,46,1.341,47,1.189,71,2.143,77,2.465,87,0.292,95,0.168,96,0.073,107,2.303,124,1.007,218,1.469,225,2.2,234,0.011,235,0.011,484,3.574,491,2.437,566,1.811,665,1.182,666,2.832,667,2.104,669,2.357,670,3.585,671,3.171,672,2.688,673,3.201,674,4.263,675,4.931,676,4.931,677,2.51,678,2.51,679,3.531,680,3.531,681,2.357,682,2.357,683,2.689,684,2.223,685,2.51,686,3.531,687,2.51,688,2.51,689,2.903,690,3.531,691,3.531,692,3.531,693,3.171,694,3.531,695,2.903,696,3.378,697,2.903,698,2.903,699,2.903]],["title/interfaces/IResponse.html",[515,2.369,665,1.116]],["body/interfaces/IResponse.html",[3,0.182,4,0.182,9,0.107,23,0.886,24,1.719,45,0.015,47,0.969,95,0.182,234,0.013,235,0.013,499,4.396,515,4.281,665,1.722,667,3.065,700,5.144,701,6.388]],["title/interfaces/ITask.html",[665,1.116,702,2.537]],["body/interfaces/ITask.html",[3,0.107,4,0.107,9,0.062,11,2.057,14,0.969,23,0.519,24,1.215,25,2.713,36,0.762,45,0.016,46,1.267,47,1.243,71,2.126,77,2.329,87,0.216,95,0.151,96,0.062,107,1.292,124,1.215,150,3.298,218,1.968,229,1.617,234,0.01,235,0.01,432,3.042,484,3.681,665,1.009,667,1.795,674,2.141,684,1.897,685,2.141,687,2.141,688,2.141,689,2.477,702,3.762,703,2.706,704,5.667,705,5.09,706,5.667,707,5.667,708,5.09,709,5.09,710,5.667,711,5.09,712,4.658,713,5.667,714,4.415,715,4.062,716,3.502,717,3.826,718,2.477,719,2.477,720,3.826,721,4.26,722,5.371,723,3.013,724,3.013,725,3.013,726,4.941,727,3.013,728,3.013,729,3.013,730,3.013,731,3.013,732,3.013,733,3.013,734,3.013,735,3.013,736,2.477,737,3.013,738,3.013,739,3.013]],["title/interfaces/ITeam.html",[665,1.116,740,2.537]],["body/interfaces/ITeam.html",[3,0.126,4,0.126,9,0.074,14,1.149,23,0.615,24,1.366,25,2.706,36,0.903,45,0.016,46,1.346,47,1.167,71,2.091,77,2.474,87,0.293,95,0.169,96,0.074,107,2.316,124,1.019,218,1.104,225,1.604,229,1.836,231,2.474,234,0.011,235,0.011,365,4.018,432,1.671,491,2.456,501,3.986,566,1.831,665,1.196,666,2.854,667,2.128,669,2.384,670,4.018,672,2.709,673,3.22,677,2.538,678,2.538,681,2.384,682,2.384,683,2.701,684,2.248,685,2.538,687,2.538,688,2.538,695,2.936,696,3.404,697,2.936,698,2.936,699,2.936,718,2.936,719,2.936,740,4.114,741,3.208,742,5.408,743,3.571,744,3.571,745,3.571,746,3.571,747,3.571,748,3.571,749,3.571]],["title/interfaces/ITimestamp.html",[665,1.116,673,1.986]],["body/interfaces/ITimestamp.html",[3,0.178,4,0.178,9,0.104,23,0.864,24,1.694,45,0.015,47,1.118,71,2.09,95,0.178,234,0.013,235,0.013,665,1.681,667,2.991,673,3.538,681,4.362,682,4.362,750,5.02]],["title/interfaces/IToken.html",[505,2.537,665,1.116]],["body/interfaces/IToken.html",[3,0.147,4,0.147,9,0.086,11,1.51,14,1.338,23,0.716,24,1.509,25,2.391,36,1.052,45,0.016,47,1.191,55,2.618,64,1.052,71,1.892,87,0.211,95,0.187,96,0.11,124,1.509,234,0.012,235,0.012,307,3.531,343,2.776,393,3.76,431,5.464,432,1.946,441,4.349,505,4.429,617,3.29,665,1.393,667,2.478,714,5.034,751,3.736,752,4.349,753,4.349,754,4.028,755,6.322,756,6.322,757,4.16,758,4.752,759,3.736,760,5.291,761,3.419,762,4.16,763,4.16,764,4.16,765,3.736,766,4.16,767,4.16]],["title/interfaces/IUser.html",[501,2.098,665,1.116]],["body/interfaces/IUser.html",[3,0.126,4,0.126,9,0.074,11,1.294,14,1.147,23,0.614,24,1.365,25,2.643,36,0.901,45,0.016,46,1.414,47,1.167,55,2.244,71,2.123,77,2.545,87,0.243,95,0.169,96,0.074,97,3.832,107,2.314,124,1.017,213,2.713,229,1.805,234,0.011,235,0.011,393,3.399,491,2.453,494,3.771,501,3.398,566,2.453,665,1.194,666,2.85,667,2.124,669,3.192,672,2.705,673,3.216,677,2.533,678,2.533,681,3.192,682,3.192,683,2.238,684,2.244,696,3.399,752,3.932,753,3.932,754,3.641,768,3.201,769,3.565,770,3.565,771,3.565,772,3.565,773,3.565,774,3.201,775,3.565,776,3.565,777,3.565,778,3.565,779,3.565,780,3.565]],["title/classes/JsonWebTokenEntity.html",[96,0.069,761,2.74]],["body/classes/JsonWebTokenEntity.html",[3,0.132,4,0.132,9,0.078,11,1.359,14,1.589,23,0.645,24,1.41,25,2.703,29,1.354,36,1.249,42,1.676,44,1.111,45,0.016,46,0.837,47,1.152,48,1.111,55,3.111,64,1.398,71,1.89,87,0.19,95,0.175,96,0.115,124,1.41,234,0.011,235,0.011,307,3.692,343,3.298,393,2.66,431,5.503,432,1.751,441,4.547,505,4.211,617,3.721,665,1.253,714,5.027,751,3.362,752,3.077,753,3.077,754,2.85,755,6.281,756,6.281,757,3.743,758,4.968,759,3.362,760,4.941,761,4.062,762,4.941,763,4.941,764,5.882,765,3.362,766,3.743,767,3.743,781,2.66,782,4.322,783,4.322,784,4.322,785,4.322,786,4.322,787,4.322]],["title/components/LoginPage.html",[0,0.656,210,1.37]],["body/components/LoginPage.html",[0,0.815,1,0.955,2,1.595,3,0.079,4,0.079,5,1.142,6,1.142,7,1.142,8,1.142,9,0.046,11,1.504,14,1.097,15,2.228,16,1.142,17,3.208,18,3.116,19,1.748,21,1.748,23,0.383,24,0.973,26,3.46,29,0.934,31,2.497,32,2.171,34,2.031,36,0.862,42,1.446,44,1.012,45,0.016,46,1.037,47,0.78,48,1.012,49,3.815,56,4.017,58,2.595,64,1.173,65,1.142,74,1.526,87,0.254,88,0.228,90,1.327,93,1.695,94,1.695,95,0.079,96,0.046,97,2.981,111,1.327,124,0.973,137,2.38,202,1.142,203,1.748,204,1.748,205,1.142,206,1.142,207,1.142,208,0.915,209,1.142,210,1.907,211,1.142,212,0.955,213,2.428,214,1.142,215,0.915,216,1.142,217,0.915,218,0.688,219,2.124,220,0.915,221,1.142,222,0.915,223,1.142,224,0.915,225,0.746,226,0.915,227,1.142,228,0.915,229,0.635,230,0.915,231,0.915,232,1.142,233,1.142,234,0.008,235,0.008,287,0.997,291,3.339,292,3.808,297,2.595,332,3.808,352,2.802,387,3.409,397,1.831,401,4.168,421,2.227,432,1.042,457,4.871,461,2.802,490,2.227,491,1.142,494,3.272,502,1.09,533,1.831,683,2.34,716,1.831,765,2,788,2.227,789,5.359,790,4.783,791,3.936,792,6.093,793,4.783,794,3.936,795,4.783,796,2.227,797,5.664,798,5.277,799,3.936,800,7.351,801,3.936,802,3.936,803,3.936,804,2.571,805,5.359,806,3.409,807,3.936,808,6.341,809,2.571,810,3.815,811,4.783,812,2.571,813,3.409,814,2.571,815,2.571,816,3.936,817,3.936,818,3.409,819,2.571,820,2.571,821,2.571,822,2.571,823,2.227,824,4.142,825,2.227,826,2.571,827,2.571,828,2.571,829,2.571,830,2.571,831,3.936,832,4.783,833,2.571,834,2.571,835,2.571,836,2.571,837,2.571,838,3.409,839,2.595,840,2.571,841,2.571,842,2.595,843,2.595,844,3.409,845,2.595,846,2.571,847,2.571,848,2.571,849,2.571,850,2.571,851,2.571,852,2.571,853,2.571,854,2.571,855,3.936,856,2.571,857,3.936,858,3.936,859,3.936,860,2.802,861,3.936,862,2.571]],["title/modules/LoginPageModule.html",[236,0.914,863,2.74]],["body/modules/LoginPageModule.html",[3,0.152,4,0.152,9,0.089,45,0.016,87,0.336,88,0.438,95,0.152,96,0.089,130,1.917,210,2.675,234,0.012,235,0.012,238,1.128,239,2.311,246,4.099,252,2.522,253,2.004,255,2.764,257,1.6,262,2.638,264,1.917,266,2.196,285,2.9,286,4.431,287,1.917,288,3.847,298,1.6,452,2.764,453,2.097,457,3.521,863,5.585,864,4.283,865,4.283,866,4.283,867,4.957,868,4.946,869,4.283]],["title/modules/LoginPageRoutingModule.html",[236,0.914,867,2.537]],["body/modules/LoginPageRoutingModule.html",[0,0.945,3,0.17,4,0.17,9,0.1,45,0.016,87,0.315,88,0.491,95,0.17,96,0.1,118,2.058,210,2.376,234,0.013,235,0.013,238,1.264,257,1.425,298,1.717,300,1.892,337,2.462,339,2.965,340,2.777,345,2.462,373,2.35,468,2.583,867,4.402,869,4.8,870,5.543]],["title/components/PasswordInputComponent.html",[0,0.656,212,1.429]],["body/components/PasswordInputComponent.html",[0,1.019,1,1.41,2,2.118,3,0.116,4,0.116,5,1.686,6,1.686,7,1.686,8,1.686,9,0.068,16,1.686,17,3.43,18,3.274,19,2.322,21,2.322,23,0.566,24,1.292,29,1.241,36,1.309,42,1.529,45,0.016,46,1.012,47,0.853,64,0.831,65,1.686,74,1.472,87,0.23,88,0.336,95,0.116,96,0.068,137,2.861,142,2.703,143,3.289,147,3.289,164,2.954,165,3.289,193,4.528,194,3.289,195,3.289,199,3.289,200,4.528,202,1.686,203,2.322,204,2.322,205,1.686,206,1.686,207,1.686,208,1.351,209,1.686,210,1.351,211,1.686,212,2.392,213,2.746,214,1.686,215,1.351,216,1.686,217,1.351,218,1.016,219,2.655,220,1.351,221,1.686,222,1.351,223,1.686,224,1.351,225,1.101,226,1.351,227,1.686,228,1.351,229,0.938,230,1.351,231,1.351,232,1.686,233,1.686,234,0.01,235,0.01,264,1.472,502,1.61,683,2.118,844,3.289,871,5.851,872,5.255,873,3.289,874,5.851,875,5.98,876,5.228,877,5.98,878,6.442,879,5.228,880,3.797,881,5.98,882,3.797,883,5.228,884,3.797,885,3.797,886,5.98,887,3.797,888,3.289,889,3.797,890,3.797,891,3.289,892,3.289,893,2.954,894,3.289,895,3.797,896,3.289,897,5.228,898,3.797,899,3.797]],["title/components/ProfilePage.html",[0,0.656,215,1.37]],["body/components/ProfilePage.html",[0,1.068,1,1.546,2,2.255,3,0.128,4,0.128,5,1.849,6,1.849,7,1.849,8,1.849,9,0.075,14,1.55,15,2.921,16,1.849,17,3.474,18,3.316,19,2.472,21,2.472,23,0.621,26,3.703,29,1.321,31,3.118,32,2.255,35,3.239,36,1.219,42,1.321,44,1.071,45,0.016,46,1.213,47,0.679,48,1.071,64,0.912,65,1.849,87,0.276,88,0.369,93,2.745,95,0.128,96,0.075,137,2.972,202,1.849,203,2.472,204,2.472,205,1.849,206,1.849,207,1.849,208,1.482,209,1.849,210,1.482,211,1.849,212,1.546,213,1.546,214,1.849,215,2.382,216,1.849,217,1.482,218,1.114,219,2.784,220,1.482,221,1.849,222,1.482,223,1.849,224,1.482,225,1.207,226,1.482,227,1.849,228,1.482,229,1.029,230,1.482,231,1.482,232,1.849,233,1.849,234,0.011,235,0.011,292,4.412,332,4.133,465,4.765,617,2.726,641,3.606,900,3.606,901,6.269,902,5.565,903,4.163,904,4.163,905,4.163,906,4.163]],["title/modules/ProfilePageModule.html",[236,0.914,907,2.74]],["body/modules/ProfilePageModule.html",[3,0.157,4,0.157,9,0.092,45,0.016,87,0.334,88,0.454,95,0.157,96,0.092,130,1.986,215,2.699,234,0.012,235,0.012,238,1.168,239,2.362,252,2.577,253,2.075,255,2.825,257,1.636,262,2.696,264,1.986,266,2.275,285,2.964,287,1.986,298,1.636,452,2.825,453,2.171,465,3.647,907,5.533,908,4.436,909,4.436,910,4.436,911,5.001,912,5.122,913,4.436]],["title/modules/ProfilePageRoutingModule.html",[236,0.914,911,2.537]],["body/modules/ProfilePageRoutingModule.html",[0,0.945,3,0.17,4,0.17,9,0.1,45,0.016,87,0.315,88,0.491,95,0.17,96,0.1,118,2.058,215,2.376,234,0.013,235,0.013,238,1.264,257,1.425,298,1.717,300,1.892,337,2.462,339,2.965,340,2.777,345,2.462,373,2.35,468,2.583,911,4.402,913,4.8,914,5.543]],["title/classes/Project.html",[96,0.069,218,1.03]],["body/classes/Project.html",[3,0.1,4,0.1,9,0.059,11,2.091,14,1.309,23,0.487,24,1.161,25,2.854,29,1.115,36,1.029,42,1.777,44,1.208,45,0.016,46,1.358,47,1.221,48,1.208,64,0.715,71,2.144,74,1.822,77,2.272,87,0.265,95,0.144,96,0.059,107,2.045,124,0.806,218,1.612,225,2.151,234,0.009,235,0.009,484,3.431,491,3.115,499,1.886,502,1.992,566,2.835,580,2.425,665,0.946,666,2.425,669,3.69,670,3.69,671,2.538,672,1.598,673,2.425,674,4.093,675,4.734,676,4.734,677,2.009,678,2.009,679,2.826,680,2.826,681,3.69,682,3.69,683,2.694,684,3.002,685,2.892,686,2.826,687,2.009,688,2.009,689,2.323,690,2.826,691,2.826,692,2.826,693,2.538,694,2.826,695,2.323,696,2.892,697,2.323,698,2.323,699,2.323,781,2.009,915,2.323,916,3.263,917,3.263,918,3.263,919,3.263,920,3.263,921,3.263,922,3.263,923,3.263,924,3.263,925,3.263,926,3.263,927,3.263,928,3.263]],["title/components/ProjectReadPage.html",[0,0.656,217,1.37]],["body/components/ProjectReadPage.html",[0,0.625,1,0.641,2,1.16,3,0.053,4,0.053,5,0.767,6,0.767,7,0.767,8,0.767,9,0.031,11,1.903,14,0.798,15,1.709,16,0.767,17,2.921,18,2.788,19,1.272,21,1.272,23,0.257,24,0.707,29,0.68,31,1.989,32,2.379,36,0.627,42,1.64,44,0.943,45,0.016,46,1.35,47,0.958,48,0.943,64,1.286,65,2.608,71,0.766,74,1.11,87,0.238,88,0.153,95,0.053,96,0.031,111,0.891,133,3.177,136,1.495,137,2.402,139,4.1,142,1.229,150,1.655,158,1.495,159,1.495,160,1.495,164,1.343,167,1.495,180,3.177,197,2.48,202,0.767,203,1.272,204,1.272,205,0.767,206,0.767,207,0.767,208,0.614,209,0.767,210,0.614,211,0.767,212,0.641,213,0.641,214,0.767,215,0.614,216,0.767,217,1.519,218,1.849,219,1.629,220,0.614,221,0.767,222,0.614,223,0.767,224,0.614,225,1.064,226,0.614,227,0.767,228,0.614,229,0.426,230,0.614,231,0.614,232,0.767,233,0.767,234,0.006,235,0.006,247,2.951,249,3.329,300,0.589,413,0.845,432,0.699,484,3.338,502,1.214,521,2.328,577,1.11,617,1.797,675,2.038,683,2.069,712,4.31,715,2.038,716,2.038,717,2.227,720,1.343,810,2.612,860,2.038,888,1.495,892,1.495,894,1.495,896,1.495,929,4.965,930,4.598,931,1.495,932,2.612,933,3.177,934,2.48,935,3.669,936,3.669,937,5.105,938,4.27,939,2.863,940,2.863,941,3.321,942,2.815,943,4.27,944,4.27,945,1.726,946,2.854,947,3.321,948,2.863,949,1.726,950,2.863,951,1.726,952,2.863,953,1.726,954,1.726,955,1.726,956,1.726,957,1.726,958,1.726,959,1.726,960,1.726,961,1.726,962,3.122,963,1.726,964,1.726,965,1.726,966,1.726,967,1.726,968,1.343,969,1.726,970,1.726,971,1.726,972,4.27,973,1.343,974,1.343,975,3.04,976,2.48,977,1.726,978,1.726,979,1.726,980,1.726,981,1.726,982,1.726,983,2.863,984,1.343,985,1.726,986,1.726,987,1.726,988,1.726,989,1.726,990,2.863,991,1.726,992,1.726,993,2.227,994,3.698,995,6.053,996,2.863,997,2.48,998,3.991,999,2.48,1000,3.991,1001,3.991,1002,3.991,1003,3.991,1004,3.991,1005,2.863,1006,2.863,1007,2.863,1008,6.76,1009,5.659,1010,5.659,1011,5.659,1012,5.659,1013,5.659,1014,5.659,1015,5.659,1016,5.659,1017,2.863,1018,2.863,1019,2.863,1020,1.726,1021,1.726,1022,1.726,1023,1.726,1024,1.726,1025,1.726]],["title/modules/ProjectReadPageModule.html",[236,0.914,1026,2.74]],["body/modules/ProjectReadPageModule.html",[3,0.147,4,0.147,9,0.086,45,0.016,87,0.347,88,0.426,95,0.147,96,0.086,130,1.862,217,2.655,218,1.635,234,0.012,235,0.012,238,1.095,239,2.268,252,2.475,253,1.946,255,2.713,257,1.571,262,2.59,264,1.862,266,2.133,285,2.846,287,1.862,298,1.571,452,2.713,453,2.036,577,1.862,929,3.419,930,3.167,1026,5.464,1027,4.16,1028,4.16,1029,4.16,1030,4.92,1031,3.736,1032,4.16,1033,4.752,1034,3.736,1035,6.109,1036,4.803,1037,4.752,1038,3.736,1039,4.349,1040,3.419,1041,4.349,1042,3.419,1043,4.349,1044,3.419]],["title/modules/ProjectReadPageRoutingModule.html",[236,0.914,1030,2.537]],["body/modules/ProjectReadPageRoutingModule.html",[0,0.937,3,0.169,4,0.169,9,0.099,45,0.016,87,0.314,88,0.487,95,0.169,96,0.099,118,2.042,217,2.365,218,1.472,234,0.013,235,0.013,238,1.254,257,1.415,298,1.709,300,1.877,337,2.443,339,2.951,340,2.768,345,2.443,373,2.332,468,2.563,577,2.132,929,3.916,930,3.627,1030,4.381,1032,4.764]],["title/injectables/ProjectService.html",[247,2.225,409,1.26]],["body/injectables/ProjectService.html",[3,0.105,4,0.105,9,0.061,12,1.593,23,0.51,29,1.153,34,2.507,42,1.816,44,1.884,45,0.016,46,1.434,47,1.195,48,1.884,64,1.652,71,1.933,77,1.729,87,0.248,88,0.303,95,0.105,96,0.061,124,1.396,218,1.647,234,0.009,235,0.009,247,2.808,365,1.976,404,1.864,409,1.591,446,2.808,469,1.764,517,1.764,562,4.446,564,3.478,565,2.648,566,2.157,567,5.012,568,3.203,569,3.726,571,3.203,572,3.726,573,3.203,574,3.203,575,3.203,576,3.203,577,1.883,579,3.478,580,2.916,582,2.254,583,5.139,586,2.254,588,2.254,590,2.254,592,3.726,593,2.254,595,3.458,598,2.254,600,2.254,602,2.254,603,2.254,605,2.254,607,2.254,611,2.254,613,2.254,670,1.976,672,2.379,674,2.104,676,2.434,736,2.434,968,2.659,1045,2.96,1046,5.373,1047,2.659,1048,2.434,1049,2.434,1050,2.434,1051,2.434,1052,2.434,1053,2.434,1054,2.434,1055,2.434,1056,2.434,1057,2.434,1058,2.434,1059,2.434,1060,3.418,1061,3.418,1062,2.434,1063,2.659,1064,3.418,1065,3.418]],["title/components/ProjectsPage.html",[0,0.656,220,1.37]],["body/components/ProjectsPage.html",[0,1.104,1,1.651,2,2.355,3,0.136,4,0.136,5,1.975,6,1.975,7,1.975,8,1.975,9,0.08,14,1.619,15,3.018,16,1.975,17,3.504,18,3.345,19,2.581,21,2.581,23,0.663,29,1.38,31,3.2,36,1.418,42,1.38,45,0.016,46,1.125,64,0.974,65,1.975,87,0.196,88,0.394,95,0.136,96,0.08,137,3.05,202,1.975,203,2.581,204,2.581,205,1.975,206,1.975,207,1.975,208,1.582,209,1.975,210,1.582,211,1.975,212,1.651,213,1.651,214,1.975,215,1.582,216,1.975,217,1.582,218,1.19,219,2.876,220,2.444,221,1.975,222,1.582,223,1.975,224,1.582,225,1.289,226,1.582,227,1.975,228,1.582,229,1.099,230,1.582,231,1.582,232,1.975,233,1.975,234,0.011,235,0.011,365,3.97,1066,3.851,1067,6.476,1068,5.813,1069,4.447,1070,4.447]],["title/modules/ProjectsPageModule.html",[236,0.914,1071,2.74]],["body/modules/ProjectsPageModule.html",[3,0.157,4,0.157,9,0.092,45,0.016,87,0.334,88,0.454,95,0.157,96,0.092,130,1.986,220,2.699,234,0.012,235,0.012,238,1.168,239,2.362,252,2.577,253,2.075,255,2.825,257,1.636,262,2.696,264,1.986,266,2.275,285,2.964,287,1.986,298,1.636,365,2.961,452,2.825,453,2.171,1071,5.533,1072,4.436,1073,4.436,1074,4.436,1075,5.001,1076,5.122,1077,4.436]],["title/modules/ProjectsPageRoutingModule.html",[236,0.914,1075,2.537]],["body/modules/ProjectsPageRoutingModule.html",[0,0.914,3,0.164,4,0.164,9,0.096,45,0.016,77,1.909,87,0.311,88,0.475,95,0.164,96,0.096,118,1.992,220,2.329,234,0.013,235,0.013,238,1.223,257,1.379,298,1.683,300,1.831,337,2.382,339,2.906,340,2.738,345,2.906,347,3.537,349,4.172,373,2.274,468,2.499,930,3.537,1075,4.315,1077,4.645,1078,5.364,1079,5.364,1080,5.364,1081,5.364]],["title/modules/ReadPageRoutingModule.html",[236,0.914,1082,2.537]],["body/modules/ReadPageRoutingModule.html",[0,0.937,3,0.169,4,0.169,9,0.099,45,0.016,87,0.314,88,0.487,95,0.169,96,0.099,118,2.042,228,2.365,229,1.359,234,0.013,235,0.013,238,1.254,257,1.415,298,1.709,300,1.877,337,2.443,339,2.951,340,2.768,345,2.443,373,2.332,468,2.563,577,2.132,1082,4.381,1083,3.916,1084,5.5,1085,3.916]],["title/components/RegisterPage.html",[0,0.656,222,1.37]],["body/components/RegisterPage.html",[0,0.913,1,1.154,2,1.838,3,0.095,4,0.095,5,1.38,6,1.38,7,1.38,8,1.38,9,0.056,14,1.264,15,2.496,16,1.38,17,3.323,18,3.172,19,2.014,21,2.014,23,0.464,24,1.121,29,1.077,31,2.744,32,2.386,35,2.418,36,0.993,42,1.398,44,0.799,45,0.016,46,1.307,47,0.507,48,0.799,64,0.993,65,2.014,74,1.205,87,0.288,88,0.275,90,1.604,95,0.095,96,0.056,124,0.768,137,2.615,202,1.38,203,2.014,204,2.014,205,1.38,206,1.38,207,1.38,208,1.106,209,1.38,210,1.106,211,1.38,212,1.154,213,2.507,214,1.38,215,1.106,216,1.38,217,1.106,218,0.832,219,2.379,220,1.106,221,1.38,222,2.096,223,1.38,224,1.106,225,0.901,226,1.106,227,1.38,228,1.106,229,0.768,230,1.106,231,1.106,232,1.38,233,1.38,234,0.009,235,0.009,287,1.205,291,3.404,292,3.883,332,3.532,401,4.166,461,5.106,478,3.404,480,3.532,494,3.232,502,1.318,615,2.692,617,2.884,796,2.692,797,5.663,798,4.639,818,4.639,823,3.929,824,5.994,825,3.929,838,3.929,839,2.991,842,2.991,843,2.991,1086,2.692,1087,5.356,1088,4.536,1089,5.356,1090,3.108,1091,3.108,1092,3.108,1093,6.921,1094,4.536,1095,3.929,1096,4.166,1097,3.108,1098,3.108,1099,3.108,1100,3.108,1101,3.108,1102,3.108,1103,3.229,1104,3.108,1105,2.418,1106,3.108,1107,3.108,1108,3.108,1109,3.108,1110,3.528]],["title/modules/RegisterPageModule.html",[236,0.914,1111,2.74]],["body/modules/RegisterPageModule.html",[3,0.156,4,0.156,9,0.092,45,0.016,87,0.333,88,0.452,95,0.156,96,0.092,130,1.976,222,2.696,234,0.012,235,0.012,238,1.162,239,2.355,252,2.57,253,2.065,255,2.817,257,1.631,262,2.689,264,1.976,266,2.264,285,2.955,286,4.515,287,1.976,298,1.631,452,2.817,453,2.161,461,3.629,1111,5.528,1112,4.415,1113,4.415,1114,4.415,1115,4.995,1116,5.098,1117,4.415]],["title/modules/RegisterPageRoutingModule.html",[236,0.914,1115,2.537]],["body/modules/RegisterPageRoutingModule.html",[0,0.945,3,0.17,4,0.17,9,0.1,45,0.016,87,0.315,88,0.491,95,0.17,96,0.1,118,2.058,222,2.376,234,0.013,235,0.013,238,1.264,257,1.425,298,1.717,300,1.892,337,2.462,339,2.965,340,2.777,345,2.462,373,2.35,468,2.583,1115,4.402,1117,4.8,1118,5.543]],["title/injectables/RestService.html",[409,1.26,478,2.225]],["body/injectables/RestService.html",[3,0.069,4,0.069,9,0.041,11,1.97,12,1.053,23,0.337,24,0.88,29,0.845,32,1.442,36,0.779,42,1.435,44,1.994,45,0.016,46,1.17,47,0.942,48,1.133,55,1.941,56,3.296,64,0.779,71,1.902,74,2.24,87,0.22,88,0.2,95,0.069,96,0.041,97,3.813,107,0.839,111,2.273,124,1.088,129,1.757,135,1.956,154,5.237,229,0.88,234,0.007,235,0.007,248,2.725,268,1.608,269,1.956,276,3.888,278,1.757,307,3.495,333,3.809,343,2.058,377,3.559,386,2.534,393,4.64,409,1.166,439,6.625,441,1.608,446,2.058,469,1.166,478,2.058,480,4.925,491,1.956,499,2.058,502,2.449,504,3.083,511,1.956,517,1.166,565,2.965,579,4.677,683,1.442,754,4.925,1119,1.956,1120,4.999,1121,5.439,1122,5.439,1123,3.56,1124,3.56,1125,2.259,1126,2.259,1127,3.56,1128,3.56,1129,3.56,1130,5.439,1131,2.259,1132,4.999,1133,7.538,1134,4.999,1135,3.56,1136,2.259,1137,6.843,1138,5.716,1139,2.259,1140,6.265,1141,2.259,1142,2.259,1143,6.843,1144,2.259,1145,2.259,1146,4.999,1147,4.999,1148,2.259,1149,2.259,1150,2.259,1151,2.259,1152,2.259,1153,3.56,1154,1.608,1155,2.259,1156,2.259,1157,2.259,1158,2.259,1159,2.259,1160,2.259,1161,2.259,1162,2.259]],["title/modules/SharedModule.html",[236,0.914,246,2.098]],["body/modules/SharedModule.html",[2,2.558,3,0.155,4,0.155,9,0.091,11,1.591,45,0.016,87,0.317,88,0.449,95,0.155,96,0.091,130,1.962,212,2.954,234,0.012,235,0.012,236,1.499,238,1.154,239,2.345,246,4.182,252,2.558,253,2.051,255,2.804,257,1.302,262,2.677,264,1.962,298,1.624,373,2.677,452,2.804,453,2.146,872,3.937,1163,4.384,1164,4.384,1165,4.384,1166,5.062,1167,6.314,1168,6.314,1169,5.062,1170,5.062]],["title/injectables/StorageService.html",[248,2.098,409,1.26]],["body/injectables/StorageService.html",[3,0.091,4,0.091,9,0.053,11,1.38,12,1.384,23,0.443,24,1.084,25,2.592,29,1.042,32,2.491,34,2.265,36,0.961,42,1.684,44,1.655,45,0.016,46,1.116,47,1.115,48,1.482,64,1.346,71,1.867,74,1.701,87,0.193,88,0.263,95,0.091,96,0.053,97,3.173,107,1.103,111,1.533,120,6.146,124,1.424,188,2.115,234,0.008,235,0.008,237,2.894,248,2.393,296,2.311,297,1.959,333,5.142,343,2.537,346,3.801,379,5.819,383,2.573,386,3.124,394,2.115,397,2.115,409,1.437,432,2.491,435,5.427,469,1.533,491,2.559,502,3.051,517,1.533,528,2.311,529,2.311,649,4.991,683,1.778,701,3.801,806,4.991,813,3.801,998,2.894,1138,3.801,1171,2.573,1172,3.124,1173,5.218,1174,3.801,1175,5.763,1176,5.763,1177,5.218,1178,4.389,1179,5.763,1180,4.389,1181,2.971,1182,4.389,1183,5.763,1184,4.389,1185,2.971,1186,4.389,1187,4.389,1188,4.389,1189,2.971,1190,2.971,1191,4.389,1192,4.389,1193,5.218,1194,5.218,1195,4.389,1196,2.971,1197,2.971,1198,2.971,1199,2.971,1200,2.971,1201,2.971,1202,4.389,1203,2.971,1204,4.389,1205,5.218,1206,2.971,1207,2.971,1208,2.971,1209,2.971,1210,2.971,1211,2.971,1212,2.971,1213,2.971,1214,2.971,1215,2.971]],["title/classes/Task.html",[96,0.069,484,1.986]],["body/classes/Task.html",[3,0.086,4,0.086,9,0.05,11,1.977,14,1.167,23,0.416,24,1.035,25,2.85,29,0.994,34,2.161,36,0.917,42,1.781,44,1.077,45,0.016,46,1.298,47,1.216,48,1.077,64,0.611,71,2.113,77,2.131,87,0.184,95,0.128,96,0.05,107,1.036,124,1.035,150,3.23,218,1.924,229,1.611,234,0.008,235,0.008,432,3.137,484,3.71,499,1.613,580,2.161,665,0.809,674,3.095,684,2.741,685,2.578,687,1.718,688,1.718,689,1.987,702,3.948,703,2.171,704,5.446,705,4.891,706,5.446,707,5.446,708,4.891,709,4.891,710,5.446,711,4.891,712,4.477,713,5.446,714,4.263,715,3.978,716,3.58,717,3.911,718,1.987,719,1.987,720,3.258,721,3.627,722,4.839,723,2.417,724,2.417,725,2.417,726,4.354,727,2.417,728,2.417,729,2.417,730,2.417,731,2.417,732,2.417,733,2.417,734,2.417,735,2.417,736,1.987,737,2.417,738,2.417,739,2.417,781,1.718,915,1.987,1216,2.791,1217,2.791,1218,2.791,1219,2.791,1220,2.791,1221,2.791,1222,2.791,1223,2.791,1224,2.791,1225,2.791,1226,2.791,1227,2.791,1228,2.791,1229,2.791,1230,2.791,1231,2.791,1232,2.791,1233,2.791]],["title/injectables/TaskService.html",[249,2.369,409,1.26]],["body/injectables/TaskService.html",[3,0.102,4,0.102,9,0.06,11,1.504,12,1.558,23,0.499,29,1.135,34,2.468,42,1.81,44,1.875,45,0.016,46,1.443,47,1.189,48,1.875,64,1.646,71,1.951,77,1.702,87,0.245,88,0.296,95,0.102,96,0.06,124,1.379,234,0.009,235,0.009,249,2.944,404,1.823,409,1.566,446,2.764,469,1.726,484,3.144,517,1.726,562,4.432,564,3.436,565,2.607,566,2.124,567,4.994,568,3.153,569,3.681,571,3.153,572,3.681,573,3.153,574,3.153,575,3.153,576,3.153,577,1.854,579,3.436,580,2.881,582,2.205,583,5.125,586,2.205,588,2.205,590,2.205,592,3.681,593,2.205,595,3.405,598,2.205,600,2.205,602,2.205,603,2.205,605,2.205,607,2.205,611,2.205,613,2.205,672,2.342,675,2.381,702,2.205,705,3.72,708,3.72,709,3.72,711,3.72,712,3.405,1046,5.353,1047,2.601,1048,2.381,1049,2.381,1050,2.381,1051,2.381,1052,2.381,1053,2.381,1054,2.381,1055,2.381,1056,2.381,1057,2.381,1058,2.381,1059,2.381,1062,2.381,1063,2.601,1234,2.896,1235,3.344,1236,3.344,1237,3.344,1238,3.344,1239,3.344,1240,3.344,1241,3.344,1242,3.344,1243,3.344,1244,3.344]],["title/classes/Team.html",[96,0.069,225,1.116]],["body/classes/Team.html",[3,0.102,4,0.102,9,0.06,14,1.326,23,0.496,24,1.176,25,2.842,29,1.13,36,1.043,42,1.767,44,1.224,45,0.016,46,1.364,47,1.215,48,1.224,64,0.728,71,2.106,74,1.846,77,2.288,87,0.267,95,0.146,96,0.06,107,2.066,124,0.821,218,0.89,225,1.762,229,1.882,231,2.381,234,0.009,235,0.009,365,3.867,432,1.347,491,3.13,499,1.921,501,3.033,502,2.018,566,2.856,580,2.457,665,0.964,666,2.457,669,3.717,670,3.867,672,1.628,673,2.457,677,2.046,678,2.046,681,3.717,682,3.717,683,2.711,684,3.033,685,2.931,687,2.046,688,2.046,695,2.366,696,2.931,697,2.366,698,2.366,699,2.366,718,2.366,719,2.366,740,4.24,741,2.585,742,5.204,743,2.878,744,2.878,745,2.878,746,2.878,747,2.878,748,2.878,749,2.878,781,2.046,915,2.366,1245,3.324,1246,3.324,1247,3.324,1248,3.324,1249,3.324,1250,3.324,1251,3.324,1252,3.324,1253,3.324,1254,3.324,1255,3.324,1256,3.324]],["title/components/TeamReadPage.html",[0,0.656,224,1.37]],["body/components/TeamReadPage.html",[0,0.605,1,0.612,2,1.117,3,0.051,4,0.051,5,0.733,6,0.733,7,0.733,8,0.733,9,0.03,14,0.768,15,1.655,16,0.733,17,2.884,18,2.753,19,1.224,21,1.224,23,0.246,24,0.681,25,1.264,29,0.654,31,1.934,32,2.741,36,0.604,42,1.68,44,1.067,45,0.016,46,1.379,47,0.998,48,1.067,64,1.34,65,2.717,71,1.418,74,1.79,87,0.244,88,0.146,90,0.851,95,0.051,96,0.03,111,2.383,131,1.429,137,1.843,142,1.174,146,1.429,202,0.733,203,1.224,204,1.224,205,0.733,206,0.733,207,0.733,208,0.587,209,0.733,210,0.587,211,0.733,212,0.612,213,0.612,214,0.733,215,0.587,216,0.733,217,0.587,218,1.919,219,1.577,220,0.587,221,0.733,222,0.587,223,0.733,224,1.477,225,2.02,226,0.587,227,0.733,228,0.587,229,0.408,230,0.587,231,0.587,232,0.733,233,0.733,234,0.005,235,0.005,247,3.062,250,3.062,290,2.737,291,2.399,300,0.563,365,1.594,413,0.808,432,1.439,494,2.734,502,1.957,518,2.885,519,1.015,521,2.517,527,2.186,551,2.388,577,2.796,617,2.261,674,1.015,676,2.529,683,2.338,736,2.955,810,2.529,839,3.044,842,3.044,843,3.927,845,3.044,860,3.554,874,3.076,932,2.529,933,3.076,934,2.388,941,3.228,942,2.737,946,2.145,947,3.228,962,3.493,968,1.283,973,1.283,974,2.145,975,2.529,976,4.323,984,2.763,993,2.145,994,2.388,997,2.388,998,2.737,999,2.388,1000,3.662,1001,3.662,1002,3.662,1003,3.662,1004,3.662,1103,3.287,1105,2.145,1110,2.763,1154,1.963,1172,2.955,1174,2.388,1257,5.073,1258,4.698,1259,1.283,1260,3.076,1261,3.552,1262,4.323,1263,2.388,1264,2.757,1265,4.15,1266,4.15,1267,4.15,1268,4.15,1269,2.757,1270,1.429,1271,2.757,1272,1.65,1273,1.65,1274,1.65,1275,1.65,1276,2.757,1277,1.65,1278,2.757,1279,1.65,1280,1.65,1281,1.65,1282,1.65,1283,1.65,1284,2.757,1285,1.65,1286,1.65,1287,1.65,1288,1.65,1289,1.65,1290,1.65,1291,1.429,1292,1.65,1293,1.429,1294,1.65,1295,1.283,1296,1.429,1297,1.65,1298,4.617,1299,4.991,1300,1.65,1301,2.757,1302,2.145,1303,2.145,1304,3.552,1305,1.65,1306,1.65,1307,4.617,1308,2.757,1309,1.65,1310,1.65,1311,1.65,1312,2.757,1313,2.757,1314,1.65,1315,2.388,1316,1.65,1317,3.552,1318,1.65,1319,1.65,1320,1.65,1321,1.65,1322,1.65,1323,1.65,1324,1.65,1325,1.65,1326,1.65,1327,1.65,1328,1.174,1329,1.65,1330,1.65,1331,1.65,1332,2.757,1333,2.757,1334,2.757,1335,2.757,1336,4.15,1337,4.15,1338,2.757,1339,2.757,1340,2.757,1341,2.757,1342,2.757,1343,4.991,1344,1.65,1345,1.65,1346,1.65]],["title/modules/TeamReadPageModule.html",[236,0.914,1347,2.74]],["body/modules/TeamReadPageModule.html",[3,0.145,4,0.145,9,0.085,45,0.016,87,0.345,88,0.419,95,0.145,96,0.085,130,1.833,224,2.645,225,1.754,234,0.012,235,0.012,238,1.078,239,2.246,252,2.451,253,1.916,255,2.686,257,1.556,262,2.564,264,1.833,266,2.1,285,2.819,287,1.833,298,1.556,452,2.686,453,2.005,577,2.345,1031,3.679,1033,4.705,1034,3.679,1037,4.705,1038,3.679,1039,4.307,1040,3.367,1041,4.307,1042,3.367,1043,4.307,1044,3.367,1085,3.367,1257,3.367,1258,3.118,1347,5.447,1348,4.096,1349,4.096,1350,4.096,1351,4.9]],["title/modules/TeamReadRoutingModule.html",[236,0.914,1351,2.537]],["body/modules/TeamReadRoutingModule.html",[0,0.935,3,0.168,4,0.168,9,0.098,45,0.016,87,0.314,88,0.486,95,0.168,96,0.098,118,2.037,224,2.361,225,1.591,234,0.013,235,0.013,238,1.251,257,1.411,298,1.706,300,1.873,337,2.436,339,2.946,340,2.765,345,2.436,373,2.326,468,2.556,577,2.572,1085,3.906,1257,3.906,1258,3.617,1351,4.375]],["title/injectables/TeamService.html",[250,2.225,409,1.26]],["body/injectables/TeamService.html",[3,0.089,4,0.089,9,0.052,12,1.347,23,0.431,24,1.063,29,1.021,34,2.22,36,0.942,42,1.81,44,1.882,45,0.016,46,1.43,47,1.194,48,1.882,64,1.618,71,2.067,74,1.121,77,1.531,87,0.267,88,0.256,95,0.089,96,0.052,124,1.405,225,1.649,234,0.008,235,0.008,250,2.486,360,2.059,404,1.577,409,1.409,446,2.486,469,1.492,477,2.249,478,3.287,480,2.836,494,3.638,502,1.226,515,1.78,516,2.504,517,1.492,518,2.968,521,1.577,527,1.78,562,4.335,564,3.161,565,2.345,566,1.91,567,4.871,568,2.836,569,3.386,570,3.725,571,4.008,572,3.386,573,2.836,574,2.836,575,2.836,576,2.836,577,1.667,579,3.161,580,2.65,582,1.907,583,5.073,586,1.907,588,1.907,590,1.907,592,3.75,593,1.907,595,2.059,598,1.907,600,1.907,602,1.907,603,1.907,605,1.907,607,1.907,611,1.907,613,1.907,672,2.107,693,2.249,740,1.907,742,2.249,1046,5.212,1048,2.059,1049,2.059,1050,2.059,1051,2.059,1052,2.059,1053,2.059,1054,2.059,1055,2.059,1056,2.059,1057,2.059,1058,2.059,1059,2.059,1062,2.059,1063,2.249,1262,4.925,1263,3.725,1295,2.249,1352,2.504,1353,4.301,1354,2.892,1355,4.301,1356,2.892,1357,4.301,1358,2.892,1359,2.892,1360,2.892,1361,2.892,1362,2.892,1363,2.892,1364,2.892,1365,2.892,1366,2.892,1367,2.892,1368,2.892]],["title/components/TeamsPage.html",[0,0.656,226,1.37]],["body/components/TeamsPage.html",[0,0.754,1,0.844,2,1.449,3,0.07,4,0.07,5,1.01,6,1.01,7,1.01,8,1.01,9,0.041,14,0.997,15,2.061,16,1.01,17,3.126,18,2.984,19,1.589,21,1.589,23,0.339,24,0.884,25,1.574,26,3.412,29,0.849,31,2.337,32,2.347,36,0.783,42,1.72,44,1.137,45,0.016,46,1.305,47,1.024,48,1.137,64,1.414,65,2.869,74,1.387,87,0.267,88,0.201,90,1.173,94,1.499,95,0.07,96,0.041,107,0.844,111,2.283,137,2.228,138,5.331,150,2.068,202,1.01,203,1.589,204,1.589,205,1.01,206,1.01,207,1.01,208,0.809,209,1.01,210,0.809,211,1.01,212,0.844,213,0.844,214,1.01,215,0.809,216,1.01,217,0.809,218,0.608,219,1.964,220,0.809,221,1.01,222,0.809,223,1.01,224,0.809,225,1.987,226,1.785,227,1.01,228,0.809,229,0.562,230,0.809,231,0.809,232,1.01,233,1.01,234,0.007,235,0.007,250,2.899,290,3.996,291,3.503,360,4.47,413,1.113,432,1.792,502,1.517,518,2.899,519,1.399,521,2.974,527,1.399,533,1.619,565,1.95,617,2.837,683,2.679,810,3.149,839,3.307,842,3.307,843,4.14,845,2.359,860,2.547,893,5.025,932,3.149,941,3.902,942,3.307,962,2.916,975,2.547,984,3.902,998,2.916,1000,2.359,1001,2.359,1002,2.359,1003,2.359,1004,2.359,1103,3.571,1154,2.547,1172,2.547,1260,3.831,1295,1.768,1296,1.969,1302,2.783,1303,2.783,1315,4.724,1328,1.619,1369,1.969,1370,4.423,1371,3.577,1372,3.831,1373,3.098,1374,4.344,1375,3.577,1376,5.016,1377,5.016,1378,1.969,1379,3.577,1380,3.098,1381,3.098,1382,2.273,1383,2.273,1384,2.273,1385,2.273,1386,2.273,1387,2.273,1388,3.577,1389,2.273,1390,2.273,1391,2.273,1392,2.273,1393,2.273,1394,2.273,1395,2.273,1396,2.273,1397,2.273,1398,3.098,1399,3.098,1400,4.344,1401,1.969,1402,3.577,1403,2.273,1404,2.273,1405,3.098,1406,1.969,1407,1.969,1408,2.273,1409,3.098,1410,1.969,1411,1.969,1412,4.344,1413,3.098,1414,1.969,1415,2.273,1416,2.273,1417,2.273,1418,2.273,1419,3.098,1420,3.577,1421,3.098,1422,3.577,1423,3.098,1424,3.098,1425,3.098,1426,1.969]],["title/modules/TeamsPageModule.html",[236,0.914,1427,2.74]],["body/modules/TeamsPageModule.html",[3,0.141,4,0.141,9,0.083,45,0.016,87,0.348,88,0.407,95,0.141,96,0.083,130,1.783,226,2.625,234,0.011,235,0.011,238,1.048,239,2.206,252,2.407,253,1.863,255,2.638,257,1.528,262,2.518,264,1.783,266,2.042,283,5.145,284,3.982,285,2.768,287,1.783,298,1.528,360,3.274,452,2.638,453,1.949,1039,4.23,1040,3.274,1041,4.23,1042,3.274,1043,4.23,1044,3.274,1427,5.416,1428,3.982,1429,3.982,1430,3.982,1431,4.864,1432,4.598,1433,3.982,1434,5.941,1435,4.598,1436,5.145,1437,3.982,1438,5.145,1439,3.982,1440,5.145,1441,3.982]],["title/modules/TeamsPageRoutingModule.html",[236,0.914,1431,2.537]],["body/modules/TeamsPageRoutingModule.html",[0,0.916,3,0.165,4,0.165,9,0.097,45,0.016,77,1.914,87,0.311,88,0.476,95,0.165,96,0.097,118,1.997,226,2.332,234,0.013,235,0.013,238,1.226,257,1.383,298,1.685,300,1.835,337,2.388,339,2.911,340,2.741,345,2.911,347,3.545,373,2.279,468,2.505,1258,3.545,1431,4.321,1433,4.657,1442,5.377,1443,5.377,1444,4.657,1445,5.377]],["title/classes/User.html",[96,0.069,229,0.951]],["body/classes/User.html",[3,0.102,4,0.102,9,0.06,11,1.504,14,1.332,23,0.499,24,1.182,25,2.809,29,1.135,36,1.047,42,1.731,44,1.23,45,0.016,46,1.443,47,1.204,48,1.23,55,2.607,64,0.732,71,2.131,77,2.386,87,0.21,95,0.147,96,0.06,97,3.643,107,2.073,124,0.826,213,2.707,229,1.921,234,0.009,235,0.009,393,2.058,491,3.135,494,3.762,501,3.514,566,2.977,580,2.468,665,0.97,666,2.468,669,3.875,672,1.638,673,2.468,677,2.058,678,2.058,681,3.875,682,3.875,683,1.938,684,3.044,696,2.944,752,2.381,753,2.381,754,2.205,768,2.601,769,4.142,770,4.835,771,4.142,772,2.896,773,2.896,774,2.601,775,2.896,776,2.896,777,2.896,778,2.896,779,2.896,780,2.896,781,2.058,915,2.381,1446,3.344,1447,3.344,1448,3.344,1449,3.344,1450,3.344,1451,3.344,1452,3.344,1453,3.344,1454,3.344,1455,3.344]],["title/components/UserReadPage.html",[0,0.656,228,1.37]],["body/components/UserReadPage.html",[0,0.899,1,1.125,2,1.804,3,0.093,4,0.093,5,1.345,6,1.345,7,1.345,8,1.345,9,0.054,14,1.24,15,2.459,16,1.345,17,3.308,18,3.158,19,1.977,21,1.977,23,0.452,24,1.1,25,1.878,29,1.057,31,2.711,32,2.992,36,0.975,42,1.59,44,0.779,45,0.016,46,1.2,47,1.011,48,0.779,64,0.975,65,1.977,71,1.192,87,0.285,88,0.268,90,1.563,95,0.093,96,0.054,137,2.583,202,1.345,203,1.977,204,1.977,205,1.345,206,1.345,207,1.345,208,1.078,209,1.345,210,1.078,211,1.345,212,1.125,213,1.125,214,1.345,215,1.078,216,1.345,217,1.078,218,0.811,219,2.344,220,1.078,221,1.345,222,1.078,223,1.345,224,1.078,225,0.879,226,1.078,227,1.345,228,2.07,229,1.888,230,1.078,231,1.078,232,1.345,233,1.345,234,0.009,235,0.009,251,3.871,290,3.836,291,3.363,300,1.034,413,1.484,494,2.297,513,2.157,518,3.051,519,1.865,521,1.652,522,3.856,577,2.91,617,2.849,774,3.463,845,3.48,942,3.836,946,3.463,947,4.525,962,4.086,973,2.357,974,2.357,993,3.463,998,2.935,1000,2.935,1001,2.935,1002,2.935,1003,2.935,1004,2.935,1083,4.892,1110,4.105,1259,2.357,1270,2.624,1291,3.856,1293,2.624,1328,2.157,1456,4.892,1457,5.278,1458,4.452,1459,6.48,1460,3.03,1461,3.03,1462,3.03,1463,3.03,1464,2.624,1465,4.452,1466,3.03,1467,3.03,1468,3.03,1469,4.452,1470,4.452,1471,4.452]],["title/modules/UserReadPageModule.html",[236,0.914,1472,2.74]],["body/modules/UserReadPageModule.html",[3,0.153,4,0.153,9,0.09,45,0.016,87,0.336,88,0.443,95,0.153,96,0.09,130,1.94,228,2.683,229,1.236,234,0.012,235,0.012,238,1.141,239,2.328,252,2.54,253,2.027,255,2.784,257,1.612,262,2.657,264,1.94,266,2.222,285,2.921,287,1.94,298,1.612,452,2.784,453,2.121,577,2.43,1031,3.892,1033,4.876,1034,3.892,1082,4.971,1083,3.562,1085,3.562,1456,3.562,1472,5.508,1473,4.333,1474,4.333,1475,4.333]],["title/injectables/UserService.html",[251,2.225,409,1.26]],["body/injectables/UserService.html",[3,0.105,4,0.105,9,0.062,12,1.603,23,0.513,29,1.158,34,2.518,42,1.817,44,1.886,45,0.016,46,1.42,47,1.197,48,1.886,64,1.654,71,1.963,77,1.737,87,0.249,88,0.305,95,0.105,96,0.062,124,1.401,229,1.525,231,1.224,234,0.009,235,0.009,251,2.821,404,1.876,409,1.598,446,2.821,469,1.775,501,1.876,513,2.449,517,1.775,532,2.676,562,4.45,564,3.491,565,2.66,566,2.167,567,5.017,568,3.217,569,3.739,571,3.217,572,3.739,573,3.217,574,3.217,575,3.217,576,3.217,577,1.892,579,3.491,580,2.926,582,2.268,583,5.143,586,2.268,588,2.268,590,2.268,592,3.217,593,2.268,598,2.268,600,2.268,602,2.268,603,2.268,605,2.268,607,2.268,611,2.268,613,2.268,672,2.39,1046,5.379,1047,2.676,1048,2.449,1049,2.449,1050,2.449,1051,2.449,1052,2.449,1053,2.449,1054,2.449,1055,2.449,1056,2.449,1057,2.449,1058,2.449,1059,2.449,1062,2.449,1476,2.979,1477,4.88,1478,3.44,1479,3.44,1480,3.44,1481,3.44]],["title/components/UsersPage.html",[0,0.656,230,1.37]],["body/components/UsersPage.html",[0,0.843,1,1.009,2,1.663,3,0.083,4,0.083,5,1.207,6,1.207,7,1.207,8,1.207,9,0.049,14,1.143,15,2.305,16,1.207,17,3.243,18,3.095,19,1.823,21,1.823,23,0.405,24,1.014,25,1.761,26,3.582,29,0.974,31,2.569,32,2.522,36,0.899,42,1.648,44,1.056,45,0.016,46,1.205,47,1.015,48,1.056,64,1.296,65,2.628,87,0.284,88,0.241,90,1.402,94,1.791,95,0.083,96,0.049,137,2.448,138,4.604,150,2.373,202,1.207,203,1.823,204,1.823,205,1.207,206,1.207,207,1.207,208,0.967,209,1.207,210,0.967,211,1.207,212,1.009,213,1.009,214,1.207,215,0.967,216,1.207,217,0.967,218,0.727,219,2.197,220,0.967,221,1.207,222,0.967,223,1.207,224,0.967,225,0.788,226,0.967,227,1.207,228,0.967,229,1.597,230,1.962,231,2.424,232,1.207,233,1.207,234,0.008,235,0.008,251,3.186,290,4.261,291,3.736,413,1.331,494,2.118,513,1.934,518,3.186,519,1.672,521,3.227,527,1.672,533,1.934,565,2.238,617,3.049,839,2.706,842,2.706,843,3.635,845,2.706,893,5.298,932,3.522,942,3.635,962,3.262,975,1.934,1000,2.706,1001,2.706,1002,2.706,1003,2.706,1004,2.706,1103,2.922,1105,3.193,1154,2.922,1172,2.922,1302,3.193,1303,3.193,1328,1.934,1372,4.285,1373,3.555,1374,4.774,1378,2.353,1380,3.555,1381,3.555,1398,3.555,1399,3.555,1400,4.774,1401,2.353,1405,3.555,1406,2.353,1407,2.353,1409,3.555,1410,2.353,1411,2.353,1412,3.555,1413,3.555,1414,3.555,1419,3.555,1421,3.555,1423,3.555,1424,3.555,1425,3.555,1426,2.353,1464,2.353,1482,2.353,1483,4.947,1484,4.105,1485,4.105,1486,2.717,1487,2.717,1488,2.717,1489,2.717,1490,2.717,1491,2.717,1492,2.717,1493,2.717,1494,4.105]],["title/modules/UsersPageModule.html",[236,0.914,1495,2.74]],["body/modules/UsersPageModule.html",[3,0.139,4,0.139,9,0.081,45,0.016,87,0.348,88,0.401,90,2.338,95,0.139,96,0.081,130,1.756,230,2.615,231,1.612,234,0.011,235,0.011,238,1.033,239,2.185,246,4.006,252,2.384,253,1.836,255,2.613,257,1.513,262,2.494,264,1.756,266,2.012,285,2.742,287,1.756,298,1.513,452,2.613,453,1.921,1037,4.577,1038,3.524,1039,4.189,1040,3.226,1041,4.189,1042,3.226,1043,4.189,1044,3.226,1436,5.096,1437,3.924,1438,5.096,1439,3.924,1440,5.096,1441,3.924,1495,5.505,1496,3.924,1497,3.924,1498,3.924,1499,4.844,1500,4.531,1501,3.924]],["title/modules/UsersPageRoutingModule.html",[236,0.914,1499,2.537]],["body/modules/UsersPageRoutingModule.html",[0,0.916,3,0.165,4,0.165,9,0.097,45,0.016,77,1.914,87,0.311,88,0.476,95,0.165,96,0.097,118,1.997,230,2.332,234,0.013,235,0.013,238,1.226,257,1.383,298,1.685,300,1.835,337,2.388,339,2.911,340,2.741,345,2.911,347,3.545,373,2.279,468,2.505,1444,4.657,1456,3.828,1499,4.321,1501,4.657,1502,5.377,1503,5.377,1504,5.377]],["title/coverage.html",[1505,4.57]],["body/coverage.html",[0,1.282,1,1.309,9,0.063,10,3.052,26,1.819,45,0.016,47,0.575,96,0.118,107,1.309,150,4.614,208,1.254,210,1.254,212,1.309,215,1.254,217,1.254,218,0.943,220,1.254,222,1.254,224,1.254,225,1.022,226,1.254,228,1.254,229,0.871,230,1.254,234,0.01,235,0.01,247,2.037,248,1.922,249,2.169,250,2.037,251,2.037,254,2.741,268,3.534,293,2.509,310,3.861,327,2.741,374,3.052,376,3.052,409,2.344,455,2.509,470,3.052,478,2.037,484,1.819,501,1.922,505,2.324,515,2.169,562,2.037,563,3.052,577,1.924,638,2.741,640,3.052,652,3.052,665,2.075,666,1.819,668,3.052,670,2.037,671,3.861,673,1.819,700,3.052,702,2.324,703,3.861,740,2.324,741,3.861,750,3.052,751,3.861,761,2.509,768,3.861,788,3.052,871,3.052,872,2.741,873,3.052,891,5.694,900,3.052,929,2.509,930,2.324,931,3.052,1045,3.052,1066,3.052,1083,2.509,1086,3.052,1096,2.741,1119,3.052,1171,3.052,1234,3.052,1257,2.509,1258,2.324,1259,3.861,1352,3.052,1369,3.052,1456,2.509,1476,3.052,1482,3.052,1505,3.052,1506,3.524,1507,3.524,1508,3.524,1509,3.524,1510,3.524,1511,6.575,1512,4.964,1513,6.821,1514,3.524,1515,4.964,1516,3.524,1517,3.052,1518,3.524,1519,6.238,1520,4.964,1521,3.524,1522,3.524,1523,3.524,1524,3.524,1525,3.524,1526,3.524,1527,3.524,1528,3.524,1529,3.524,1530,3.524,1531,3.524,1532,4.964,1533,3.524,1534,3.524,1535,4.964,1536,3.524,1537,3.524,1538,4.964,1539,4.964,1540,3.052,1541,3.052,1542,6.575,1543,4.964,1544,3.052,1545,3.052,1546,3.052,1547,3.052,1548,3.052,1549,3.052,1550,3.052,1551,3.052,1552,3.524,1553,3.524]],["title/dependencies.html",[239,1.721,1554,3.202]],["body/dependencies.html",[45,0.016,50,3.883,88,0.442,89,3.883,91,4.869,92,3.883,234,0.012,235,0.012,239,1.853,258,4.323,260,5.421,261,4.869,264,1.935,273,4.323,274,3.883,287,1.935,296,3.883,297,3.291,300,1.704,413,2.445,453,2.116,758,3.883,759,3.883,1555,4.992,1556,6.26,1557,4.992,1558,4.992,1559,7.647,1560,4.992,1561,4.992,1562,4.992,1563,4.992,1564,6.26,1565,4.992,1566,4.992,1567,4.992,1568,6.26,1569,4.992,1570,4.992,1571,4.992,1572,4.992,1573,4.992,1574,4.992,1575,4.992,1576,4.992,1577,4.992,1578,4.992,1579,4.992,1580,4.992,1581,4.992,1582,4.992,1583,4.992,1584,4.992,1585,4.992,1586,4.992,1587,4.992]],["title/miscellaneous/functions.html",[1588,2.28,1589,4.014]],["body/miscellaneous/functions.html",[9,0.103,11,1.803,23,0.855,44,1.475,45,0.015,46,1.11,47,0.935,48,1.475,64,1.256,79,4.46,107,2.129,234,0.013,235,0.013,254,4.46,274,4.46,276,5.299,297,3.781,305,4.966,306,4.966,307,4.201,308,4.966,309,4.966,311,4.966,327,5.299,1544,4.966,1545,6.295,1588,4.083,1589,4.966,1590,5.734,1591,5.734,1592,4.966]],["title/index.html",[23,0.574,1593,3.333]],["body/index.html",[1,2.582,2,1.389,45,0.016,130,1.329,208,2.014,210,2.014,212,2.582,215,2.014,217,2.014,220,2.014,222,2.014,224,2.014,226,2.014,228,2.014,230,2.014,234,0.009,235,0.009,237,5.141,238,0.782,239,1.808,240,2.97,241,2.97,242,2.97,243,2.97,244,2.97,245,3.732,246,3.941,247,3.272,248,3.086,249,3.484,250,3.272,251,3.272,252,1.973,253,1.389,340,1.329,447,4.813,448,2.97,449,2.97,450,3.732,469,1.77,638,2.667,657,4.813,658,2.97,659,2.97,660,2.97,661,3.732,667,1.77,715,2.441,781,2.111,863,5.059,864,2.97,865,2.97,866,2.97,867,3.732,907,4.813,908,2.97,909,2.97,910,2.97,911,3.732,1026,4.813,1027,2.97,1028,2.97,1029,2.97,1030,3.732,1071,4.813,1072,2.97,1073,2.97,1074,2.97,1075,3.732,1082,3.732,1111,4.813,1112,2.97,1113,2.97,1114,2.97,1115,3.732,1163,2.97,1164,2.97,1165,2.97,1347,4.813,1348,2.97,1349,2.97,1350,2.97,1351,3.732,1427,4.813,1428,2.97,1429,2.97,1430,2.97,1431,3.732,1472,4.813,1473,2.97,1474,2.97,1475,2.97,1495,5.059,1496,2.97,1497,2.97,1498,2.97,1499,3.732,1517,2.97,1593,2.97,1594,3.429,1595,4.869,1596,3.429,1597,3.429]],["title/modules.html",[238,1.203]],["body/modules.html",[45,0.012,63,6.831,234,0.012,235,0.012,237,3.132,238,1.083,245,3.132,246,2.59,261,6.163,447,3.382,450,3.132,564,5.011,657,3.382,661,3.132,863,3.382,867,3.132,907,3.382,911,3.132,1026,3.382,1030,3.132,1071,3.382,1075,3.132,1082,3.132,1111,3.382,1115,3.132,1347,3.382,1351,3.132,1427,3.382,1431,3.132,1472,3.382,1495,3.382,1499,3.132,1598,7.924,1599,7.924,1600,7.887]],["title/routes.html",[340,2.046]],["body/routes.html",[45,0.014,234,0.014,235,0.014,340,2.451]],["title/miscellaneous/variables.html",[1588,2.28,1601,4.014]],["body/miscellaneous/variables.html",[9,0.083,23,0.692,45,0.016,47,1.178,54,5.174,55,3.805,74,2.8,111,2.393,118,2.218,124,1.146,213,2.218,234,0.012,235,0.012,268,5.264,432,2.42,502,3.061,683,2.42,1095,4.017,1096,4.647,1540,4.017,1541,5.174,1546,4.017,1547,5.723,1548,4.017,1549,4.017,1550,6.044,1551,4.017,1588,3.302,1592,4.017,1601,4.017,1602,4.638,1603,4.638,1604,4.638,1605,4.638,1606,4.638,1607,7.222,1608,5.974,1609,4.638,1610,4.638,1611,4.638,1612,4.638,1613,4.638,1614,4.638,1615,4.638,1616,4.638,1617,5.974,1618,4.638,1619,4.638,1620,4.638,1621,4.638,1622,4.638,1623,4.638,1624,4.638,1625,4.638,1626,4.638,1627,4.638,1628,4.638]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ITask.html":{},"components/ProjectReadPage.html":{},"classes/Task.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["0.14",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5rem",{"_index":896,"title":{},"body":{"components/PasswordInputComponent.html":{},"components/ProjectReadPage.html":{}}}],["0/1",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["0|1|2|3",{"_index":720,"title":{},"body":{"interfaces/ITask.html":{},"components/ProjectReadPage.html":{},"classes/Task.html":{}}}],["1",{"_index":715,"title":{},"body":{"interfaces/ITask.html":{},"components/ProjectReadPage.html":{},"classes/Task.html":{},"index.html":{}}}],["1.0.6",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":899,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["1/1",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":891,"title":{},"body":{"components/PasswordInputComponent.html":{},"coverage.html":{}}}],["10px",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["12",{"_index":1594,"title":{},"body":{"index.html":{}}}],["12.1.1",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["12.2.2",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["13.0.0",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["13.0.3",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["150",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["16px",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["18px",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["2",{"_index":716,"title":{},"body":{"interfaces/ITask.html":{},"components/LoginPage.html":{},"components/ProjectReadPage.html":{},"classes/Task.html":{}}}],["2.10.2",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["22px",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["24px",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":1517,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["250",{"_index":1215,"title":{},"body":{"injectables/StorageService.html":{}}}],["26px",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":717,"title":{},"body":{"interfaces/ITask.html":{},"components/ProjectReadPage.html":{},"classes/Task.html":{}}}],["3.0.6",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["33",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":423,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["403",{"_index":850,"title":{},"body":{"components/LoginPage.html":{}}}],["40px",{"_index":1345,"title":{},"body":{"components/TeamReadPage.html":{}}}],["422",{"_index":427,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["45",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["48",{"_index":1597,"title":{},"body":{"index.html":{}}}],["4px",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":1596,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["50px",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["6.0.0",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["616e7e",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["62",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["73849a",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["757575",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":1595,"title":{},"body":{"index.html":{}}}],["80",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["__entity",{"_index":1478,"title":{},"body":{"injectables/UserService.html":{}}}],["_route",{"_index":648,"title":{},"body":{"guards/GuestGuard.html":{}}}],["_state",{"_index":645,"title":{},"body":{"guards/GuestGuard.html":{}}}],["ability",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["abstract",{"_index":570,"title":{},"body":{"injectables/CrudService.html":{},"injectables/TeamService.html":{}}}],["abstractcontrol",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":1154,"title":{},"body":{"injectables/RestService.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["accessors",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/CrudService.html":{},"components/LoginPage.html":{},"injectables/ProjectService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["account",{"_index":857,"title":{},"body":{"components/LoginPage.html":{}}}],["activatedroute",{"_index":947,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["activatedroutesnapshot",{"_index":644,"title":{},"body":{"guards/GuestGuard.html":{}}}],["activeuser",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["actual_component",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["add",{"_index":446,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["add(tclass",{"_index":582,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["added",{"_index":1312,"title":{},"body":{"components/TeamReadPage.html":{}}}],["addmember",{"_index":1353,"title":{},"body":{"injectables/TeamService.html":{}}}],["addmember(teamid",{"_index":1355,"title":{},"body":{"injectables/TeamService.html":{}}}],["again",{"_index":853,"title":{},"body":{"components/LoginPage.html":{}}}],["align",{"_index":892,"title":{},"body":{"components/PasswordInputComponent.html":{},"components/ProjectReadPage.html":{}}}],["angular",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPage.html":{},"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["angular/animations",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/RestService.html":{}}}],["angular/core",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"injectables/TaskService.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"guards/GuestGuard.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/TeamReadPage.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserReadPage.html":{},"modules/UsersPageRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["api",{"_index":754,"title":{},"body":{"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"injectables/RestService.html":{},"classes/User.html":{}}}],["apiurl",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["app.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["application",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["application/json",{"_index":1153,"title":{},"body":{"injectables/RestService.html":{}}}],["appmeta",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["appmeta')?.split(',').includes('no",{"_index":434,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["appmodule",{"_index":237,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/StorageService.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":245,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["assets/i18n",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["assigned",{"_index":1013,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["assignee",{"_index":704,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["assignee_id",{"_index":705,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["async",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/StorageService.html":{}}}],["async)?.email",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["auth",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["authentication",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["authinterceptor",{"_index":293,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["authinterceptor(storage",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":447,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"index.html":{},"modules.html":{}}}],["authorization",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/RestService.html":{}}}],["authreq",{"_index":437,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authroutingmodule",{"_index":450,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["authservice",{"_index":26,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{},"coverage.html":{}}}],["authservice?.activeuser?.email",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice?.activeuser?.name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["available",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["await",{"_index":435,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/StorageService.html":{}}}],["background",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["bar",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["base",{"_index":618,"title":{},"body":{"injectables/CrudService.html":{}}}],["bearer",{"_index":441,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"injectables/RestService.html":{}}}],["bearer'|'http",{"_index":760,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["block",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["bodies",{"_index":627,"title":{},"body":{"injectables/CrudService.html":{}}}],["body",{"_index":1143,"title":{},"body":{"injectables/RestService.html":{}}}],["bold",{"_index":1025,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["boolean",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"components/LoginPage.html":{},"classes/Project.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["both",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":426,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["browse",{"_index":564,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{},"modules.html":{}}}],["browser",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["builder",{"_index":801,"title":{},"body":{"components/LoginPage.html":{}}}],["buildheaders",{"_index":1123,"title":{},"body":{"injectables/RestService.html":{}}}],["buildheaders(from",{"_index":1129,"title":{},"body":{"injectables/RestService.html":{}}}],["builds",{"_index":1132,"title":{},"body":{"injectables/RestService.html":{}}}],["builduri",{"_index":1124,"title":{},"body":{"injectables/RestService.html":{}}}],["builduri(uri",{"_index":1135,"title":{},"body":{"injectables/RestService.html":{}}}],["buttonmodule",{"_index":1037,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/UsersPageModule.html":{}}}],["call",{"_index":408,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["called",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["calls",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["can(ability",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["canactivate",{"_index":460,"title":{},"body":{"modules/AuthRoutingModule.html":{},"guards/GuestGuard.html":{}}}],["canactivate(_route",{"_index":643,"title":{},"body":{"guards/GuestGuard.html":{}}}],["capacitor/android",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["cardmodule",{"_index":1033,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/UserReadPageModule.html":{}}}],["case",{"_index":422,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catch(err",{"_index":847,"title":{},"body":{"components/LoginPage.html":{}}}],["catch(error",{"_index":767,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["catcherror",{"_index":414,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["center",{"_index":894,"title":{},"body":{"components/PasswordInputComponent.html":{},"components/ProjectReadPage.html":{}}}],["checks",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["checkserviceworkerupdate",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":96,"title":{"classes/JsonWebTokenEntity.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{}}}],["classes",{"_index":781,"title":{},"body":{"classes/JsonWebTokenEntity.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{},"index.html":{}}}],["classes/crudservice.generic",{"_index":1062,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["classes/iresponse.generic",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TeamService.html":{}}}],["classes/jsonwebtoken.entity",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["classes/project.entity",{"_index":968,"title":{},"body":{"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/TeamReadPage.html":{}}}],["classes/task.entity",{"_index":1237,"title":{},"body":{"injectables/TaskService.html":{}}}],["classes/team.entity",{"_index":1295,"title":{},"body":{"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{}}}],["classes/user.entity",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{}}}],["client",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["cluster_appmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_authmodule",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_authmodule_imports",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":658,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":659,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":660,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule",{"_index":864,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":865,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_loginpagemodule_imports",{"_index":866,"title":{},"body":{"modules/LoginPageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule",{"_index":908,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":909,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_profilepagemodule_imports",{"_index":910,"title":{},"body":{"modules/ProfilePageModule.html":{},"index.html":{}}}],["cluster_projectreadpagemodule",{"_index":1027,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"index.html":{}}}],["cluster_projectreadpagemodule_declarations",{"_index":1028,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"index.html":{}}}],["cluster_projectreadpagemodule_imports",{"_index":1029,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"index.html":{}}}],["cluster_projectspagemodule",{"_index":1072,"title":{},"body":{"modules/ProjectsPageModule.html":{},"index.html":{}}}],["cluster_projectspagemodule_declarations",{"_index":1074,"title":{},"body":{"modules/ProjectsPageModule.html":{},"index.html":{}}}],["cluster_projectspagemodule_imports",{"_index":1073,"title":{},"body":{"modules/ProjectsPageModule.html":{},"index.html":{}}}],["cluster_registerpagemodule",{"_index":1112,"title":{},"body":{"modules/RegisterPageModule.html":{},"index.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":1113,"title":{},"body":{"modules/RegisterPageModule.html":{},"index.html":{}}}],["cluster_registerpagemodule_imports",{"_index":1114,"title":{},"body":{"modules/RegisterPageModule.html":{},"index.html":{}}}],["cluster_sharedmodule",{"_index":1163,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1164,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":1165,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_teamreadpagemodule",{"_index":1348,"title":{},"body":{"modules/TeamReadPageModule.html":{},"index.html":{}}}],["cluster_teamreadpagemodule_declarations",{"_index":1350,"title":{},"body":{"modules/TeamReadPageModule.html":{},"index.html":{}}}],["cluster_teamreadpagemodule_imports",{"_index":1349,"title":{},"body":{"modules/TeamReadPageModule.html":{},"index.html":{}}}],["cluster_teamspagemodule",{"_index":1428,"title":{},"body":{"modules/TeamsPageModule.html":{},"index.html":{}}}],["cluster_teamspagemodule_declarations",{"_index":1430,"title":{},"body":{"modules/TeamsPageModule.html":{},"index.html":{}}}],["cluster_teamspagemodule_imports",{"_index":1429,"title":{},"body":{"modules/TeamsPageModule.html":{},"index.html":{}}}],["cluster_userreadpagemodule",{"_index":1473,"title":{},"body":{"modules/UserReadPageModule.html":{},"index.html":{}}}],["cluster_userreadpagemodule_declarations",{"_index":1474,"title":{},"body":{"modules/UserReadPageModule.html":{},"index.html":{}}}],["cluster_userreadpagemodule_imports",{"_index":1475,"title":{},"body":{"modules/UserReadPageModule.html":{},"index.html":{}}}],["cluster_userspagemodule",{"_index":1496,"title":{},"body":{"modules/UsersPageModule.html":{},"index.html":{}}}],["cluster_userspagemodule_declarations",{"_index":1497,"title":{},"body":{"modules/UsersPageModule.html":{},"index.html":{}}}],["cluster_userspagemodule_imports",{"_index":1498,"title":{},"body":{"modules/UsersPageModule.html":{},"index.html":{}}}],["col",{"_index":1022,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["color",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["column",{"_index":1021,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["commonmodule",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{}}}],["compatibility",{"_index":418,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageRoutingModule.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageRoutingModule.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"components/TeamReadPage.html":{},"modules/TeamReadRoutingModule.html":{},"components/TeamsPage.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"index.html":{}}}],["components/password",{"_index":1169,"title":{},"body":{"modules/SharedModule.html":{}}}],["condition",{"_index":1211,"title":{},"body":{"injectables/StorageService.html":{}}}],["configuration",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1110,"title":{},"body":{"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["confirm('a",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["confirmationservice",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["confirmdialogmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsPageModule.html":{}}}],["confirmed.validator",{"_index":1099,"title":{},"body":{"components/RegisterPage.html":{}}}],["confirmed.validator.ts",{"_index":1541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword.touched",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword.value",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error('login",{"_index":848,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log(&#39;done&#39",{"_index":1196,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('done",{"_index":1195,"title":{},"body":{"injectables/StorageService.html":{}}}],["console.log('logged",{"_index":837,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log('loginpage::ngoninit",{"_index":820,"title":{},"body":{"components/LoginPage.html":{}}}],["console.log('tokenobject",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["constructor(authservice",{"_index":641,"title":{},"body":{"guards/GuestGuard.html":{},"components/ProfilePage.html":{}}}],["constructor(formbuilder",{"_index":796,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["constructor(http",{"_index":1125,"title":{},"body":{"injectables/RestService.html":{}}}],["constructor(id",{"_index":915,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["constructor(itemservice",{"_index":1378,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["constructor(projectservice",{"_index":945,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["constructor(rest",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/TeamService.html":{}}}],["constructor(route",{"_index":1270,"title":{},"body":{"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["constructor(storage",{"_index":383,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/StorageService.html":{}}}],["constructor(swupdate",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(token",{"_index":782,"title":{},"body":{"classes/JsonWebTokenEntity.html":{}}}],["content",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"injectables/RestService.html":{}}}],["contentchild",{"_index":885,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["contentchild(ioninput",{"_index":883,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["contrast",{"_index":1024,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["control",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.get('password",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control.get('password_confirmation",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controls",{"_index":817,"title":{},"body":{"components/LoginPage.html":{}}}],["count",{"_index":706,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["coverage",{"_index":1505,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":998,"title":{},"body":{"components/ProjectReadPage.html":{},"injectables/StorageService.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{}}}],["created_at",{"_index":681,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["createdstorage",{"_index":1203,"title":{},"body":{"injectables/StorageService.html":{}}}],["createtranslateloader",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["credentials",{"_index":851,"title":{},"body":{"components/LoginPage.html":{}}}],["crudservice",{"_index":562,"title":{"injectables/CrudService.html":{}},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["crudservice:13",{"_index":1047,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/UserService.html":{}}}],["crudservice:22",{"_index":1359,"title":{},"body":{"injectables/TeamService.html":{}}}],["crudservice:25",{"_index":1054,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:28",{"_index":1058,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:31",{"_index":1057,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:34",{"_index":1053,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:37",{"_index":1055,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:42",{"_index":1052,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:45",{"_index":1056,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:50",{"_index":1049,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:54",{"_index":1059,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:58",{"_index":1051,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:62",{"_index":1048,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["crudservice:66",{"_index":1050,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["currently",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["d7d8da",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/IResponse.html":{},"classes/Project.html":{},"injectables/RestService.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["data.assignee",{"_index":737,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.assignee_id",{"_index":731,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.count",{"_index":739,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.created_at",{"_index":695,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"classes/Team.html":{}}}],["data.del",{"_index":699,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"classes/Team.html":{}}}],["data.description",{"_index":689,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITask.html":{},"classes/Project.html":{},"classes/Task.html":{}}}],["data.edit",{"_index":698,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"classes/Team.html":{}}}],["data.id",{"_index":687,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["data.name",{"_index":688,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["data.parent",{"_index":733,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.parent_id",{"_index":728,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.project",{"_index":735,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.project_id",{"_index":729,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.projects?.map(project",{"_index":748,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["data.reporter",{"_index":738,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.reporter_id",{"_index":730,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.shortname",{"_index":690,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{}}}],["data.status",{"_index":732,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.subtasks",{"_index":734,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["data.tasks",{"_index":694,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{}}}],["data.team",{"_index":692,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{}}}],["data.team_id",{"_index":691,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{}}}],["data.updated_at",{"_index":697,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"classes/Team.html":{}}}],["data.user_id",{"_index":745,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["data.users?.map(user",{"_index":746,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["database",{"_index":1183,"title":{},"body":{"injectables/StorageService.html":{}}}],["date",{"_index":1000,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["date()).toisostring",{"_index":696,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["dd",{"_index":1003,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["declarations",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{}}}],["decode",{"_index":759,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"dependencies.html":{}}}],["decodes",{"_index":762,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["decorators",{"_index":882,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["define",{"_index":1210,"title":{},"body":{"injectables/StorageService.html":{}}}],["defined",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{}}}],["del",{"_index":669,"title":{},"body":{"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["delete",{"_index":565,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{}}}],["delete(tclass",{"_index":586,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":1413,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["deleteitem",{"_index":1373,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["deleteitem(item",{"_index":1381,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["deleteselecteditems",{"_index":1374,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["dependencies",{"_index":239,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["deps",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["destruct",{"_index":1328,"title":{},"body":{"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["detail",{"_index":1103,"title":{},"body":{"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["details",{"_index":993,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["development",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":1314,"title":{},"body":{"components/TeamReadPage.html":{}}}],["dialogmodule",{"_index":1039,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["dialogopen",{"_index":935,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["directive",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["directives",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["disable",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/StorageService.html":{}}}],["display",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["dividermodule",{"_index":1043,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["documentation",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["don't",{"_index":856,"title":{},"body":{"components/LoginPage.html":{}}}],["don\\'t",{"_index":862,"title":{},"body":{"components/LoginPage.html":{}}}],["done",{"_index":1019,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["drag",{"_index":1020,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["dragdropmodule",{"_index":1035,"title":{},"body":{"modules/ProjectReadPageModule.html":{}}}],["dragend",{"_index":938,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["draggedtask",{"_index":936,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["dragstart",{"_index":939,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["dragstart(task",{"_index":950,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["drop",{"_index":940,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["drop(status",{"_index":952,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["dynamic",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":566,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["edit(tclass",{"_index":588,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["edited",{"_index":1323,"title":{},"body":{"components/TeamReadPage.html":{}}}],["element",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["email",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["email).subscribe(res",{"_index":1306,"title":{},"body":{"components/TeamReadPage.html":{}}}],["en",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["enabled",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["endpoint",{"_index":1137,"title":{},"body":{"injectables/RestService.html":{}}}],["entity",{"_index":592,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["entity.assignee_id",{"_index":1241,"title":{},"body":{"injectables/TaskService.html":{}}}],["entity.description",{"_index":1239,"title":{},"body":{"injectables/TaskService.html":{}}}],["entity.name",{"_index":1063,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{}}}],["entity.parent_id",{"_index":1243,"title":{},"body":{"injectables/TaskService.html":{}}}],["entity.project_id",{"_index":1244,"title":{},"body":{"injectables/TaskService.html":{}}}],["entity.reporter_id",{"_index":1242,"title":{},"body":{"injectables/TaskService.html":{}}}],["entity.shortname",{"_index":1064,"title":{},"body":{"injectables/ProjectService.html":{}}}],["entity.status",{"_index":1240,"title":{},"body":{"injectables/TaskService.html":{}}}],["entity.team_id",{"_index":1065,"title":{},"body":{"injectables/ProjectService.html":{}}}],["entity.user_id",{"_index":1366,"title":{},"body":{"injectables/TeamService.html":{}}}],["entrycomponents",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"injectables/RestService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/${uri}?${object.keys(from).map(key",{"_index":1151,"title":{},"body":{"injectables/RestService.html":{}}}],["environment.production",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["environmental",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentlocal",{"_index":1547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"injectables/RestService.html":{}}}],["err",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["err.status",{"_index":421,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginPage.html":{}}}],["error",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["error.error.message",{"_index":1109,"title":{},"body":{"components/RegisterPage.html":{}}}],["errorcontrol",{"_index":795,"title":{},"body":{"components/LoginPage.html":{}}}],["errors",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["eslint",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/StorageService.html":{}}}],["eslint/no",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"guards/GuestGuard.html":{}}}],["event",{"_index":808,"title":{},"body":{"components/LoginPage.html":{}}}],["event.preventdefault",{"_index":826,"title":{},"body":{"components/LoginPage.html":{}}}],["ex",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["example",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/StorageService.html":{}}}],["expires_in",{"_index":755,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["export",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["exports",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["extends",{"_index":672,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["factory",{"_index":580,"title":{},"body":{"injectables/CrudService.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["factory(data",{"_index":685,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["factory(user",{"_index":771,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["false",{"_index":683,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["fff",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileuploadmodule",{"_index":1434,"title":{},"body":{"modules/TeamsPageModule.html":{}}}],["first",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["flex",{"_index":890,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["font",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProjectReadPage.html":{}}}],["form",{"_index":800,"title":{},"body":{"components/LoginPage.html":{}}}],["format",{"_index":859,"title":{},"body":{"components/LoginPage.html":{}}}],["formbuilder",{"_index":797,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["formgroup",{"_index":792,"title":{},"body":{"components/LoginPage.html":{}}}],["formsmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{}}}],["frompromise",{"_index":416,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{}}}],["frompromise(promise.resolve(false",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{}}}],["frompromise(promise.resolve(true",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["frompromise(this.handle(next",{"_index":419,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["full",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["function",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["functions",{"_index":1589,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(key",{"_index":1180,"title":{},"body":{"injectables/StorageService.html":{}}}],["getaddbody",{"_index":568,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getaddbody(entity",{"_index":590,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getadduri",{"_index":569,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getbody",{"_index":571,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getbody(__entity",{"_index":1477,"title":{},"body":{"injectables/UserService.html":{}}}],["getbody(entity",{"_index":595,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{}}}],["getbrowseuri",{"_index":572,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getdecodedaccesstoken",{"_index":764,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["getdeleteuri",{"_index":573,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getdeleteuri(tclass",{"_index":598,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["geteditbody",{"_index":574,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["geteditbody(entity",{"_index":600,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getedituri",{"_index":575,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getedituri(tclass",{"_index":603,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["geterrorcontrol",{"_index":814,"title":{},"body":{"components/LoginPage.html":{}}}],["getfactory",{"_index":613,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getidname",{"_index":609,"title":{},"body":{"injectables/CrudService.html":{}}}],["getisready",{"_index":1198,"title":{},"body":{"injectables/StorageService.html":{}}}],["getpages",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["getreaduri",{"_index":576,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getreaduri(id",{"_index":605,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["getshortname",{"_index":1232,"title":{},"body":{"classes/Task.html":{}}}],["geturi",{"_index":611,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["global",{"_index":724,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["graph",{"_index":1600,"title":{},"body":{"modules.html":{}}}],["group",{"_index":816,"title":{},"body":{"components/LoginPage.html":{}}}],["grouping",{"_index":1167,"title":{},"body":{"modules/SharedModule.html":{}}}],["guard",{"_index":638,"title":{"guards/GuestGuard.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guards",{"_index":639,"title":{},"body":{"guards/GuestGuard.html":{}}}],["guest",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["guestguard",{"_index":455,"title":{"guards/GuestGuard.html":{}},"body":{"modules/AuthRoutingModule.html":{},"guards/GuestGuard.html":{},"coverage.html":{}}}],["handle",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handle(next",{"_index":388,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handleerror",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handleerror(err",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["handler",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["handles",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{}}}],["handling",{"_index":385,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["head",{"_index":1023,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["header",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"injectables/RestService.html":{}}}],["header.append('authorization",{"_index":1161,"title":{},"body":{"injectables/RestService.html":{}}}],["header.append('withcredentials",{"_index":1160,"title":{},"body":{"injectables/RestService.html":{}}}],["headers",{"_index":439,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/RestService.html":{}}}],["height",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["here",{"_index":858,"title":{},"body":{"components/LoginPage.html":{}}}],["hh:mm",{"_index":1004,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["hide",{"_index":898,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["hidedialog",{"_index":941,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{}}}],["home",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{}}}],["home'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["home.page",{"_index":663,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":654,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":653,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":208,"title":{"components/HomePage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":657,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":661,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["host",{"_index":889,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["html",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["http",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"injectables/RestService.html":{},"miscellaneous/functions.html":{}}}],["http/guards/guest.guard",{"_index":456,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["http/interceptors/auth.interceptor",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:8000/api",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"injectables/RestService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpevent",{"_index":410,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":389,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":1134,"title":{},"body":{"injectables/RestService.html":{}}}],["httpinterceptor",{"_index":411,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":391,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://developer.mozilla.org/en",{"_index":1157,"title":{},"body":{"injectables/RestService.html":{}}}],["https://primefaces.org/primeng/showcase/#/setup",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["hu",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["hu.json",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["icrud",{"_index":666,"title":{"interfaces/ICrud.html":{}},"body":{"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{},"coverage.html":{}}}],["icrud.interface",{"_index":678,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["id",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/CrudService.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"modules/ProjectsPageRoutingModule.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"modules/UsersPageRoutingModule.html":{}}}],["identical",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identified",{"_index":1182,"title":{},"body":{"injectables/StorageService.html":{}}}],["identifier",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["idname",{"_index":578,"title":{},"body":{"injectables/CrudService.html":{}}}],["if(!this.activeuser",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(pages[key].guard",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.items",{"_index":1398,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["if(this.permissions.includes",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.project",{"_index":1309,"title":{},"body":{"components/TeamReadPage.html":{}}}],["if(this.project.id",{"_index":1321,"title":{},"body":{"components/TeamReadPage.html":{}}}],["if(this.project.name",{"_index":1320,"title":{},"body":{"components/TeamReadPage.html":{}}}],["if(this.task.name",{"_index":985,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["if(this.tokenobject",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["immutable",{"_index":443,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["implementations",{"_index":1365,"title":{},"body":{"injectables/TeamService.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["import",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["import('./login/login.module').then",{"_index":464,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["import('./login/login.module').then(m",{"_index":458,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["import('./pages/auth/auth.module').then",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/projects/projects.module').then",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/teams/teams.module').then",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/users/users.module').then",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./profile/profile.module').then",{"_index":466,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["import('./project",{"_index":1079,"title":{},"body":{"modules/ProjectsPageRoutingModule.html":{}}}],["import('./register/register.module').then",{"_index":462,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["import('./team",{"_index":1443,"title":{},"body":{"modules/TeamsPageRoutingModule.html":{}}}],["import('./test/test.module').then",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./user",{"_index":1503,"title":{},"body":{"modules/UsersPageRoutingModule.html":{}}}],["important",{"_index":1346,"title":{},"body":{"components/TeamReadPage.html":{}}}],["imported",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":813,"title":{},"body":{"components/LoginPage.html":{},"injectables/StorageService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["inherited",{"_index":1046,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["init",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["initialize",{"_index":821,"title":{},"body":{"components/LoginPage.html":{}}}],["initialized",{"_index":806,"title":{},"body":{"components/LoginPage.html":{},"injectables/StorageService.html":{}}}],["initializes",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["initiated",{"_index":396,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["initiates",{"_index":1140,"title":{},"body":{"injectables/RestService.html":{}}}],["injectable",{"_index":409,"title":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["inline",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["input",{"_index":874,"title":{},"body":{"components/PasswordInputComponent.html":{},"components/TeamReadPage.html":{}}}],["input'},{'name",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["input.component",{"_index":1170,"title":{},"body":{"modules/SharedModule.html":{}}}],["input.component.html",{"_index":876,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["input.component.scss",{"_index":875,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["input.component.ts",{"_index":873,"title":{},"body":{"components/PasswordInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:10",{"_index":884,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["input.component.ts:11",{"_index":879,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["input.component.ts:15",{"_index":880,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["input/password",{"_index":872,"title":{},"body":{"components/PasswordInputComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["inputtextmodule",{"_index":1041,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["instance",{"_index":802,"title":{},"body":{"components/LoginPage.html":{}}}],["intercept",{"_index":382,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":405,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":374,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":665,"title":{"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{}},"body":{"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":667,"title":{},"body":{"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"index.html":{}}}],["invalid",{"_index":830,"title":{},"body":{"components/LoginPage.html":{}}}],["ion",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["ionic/angular",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"components/PasswordInputComponent.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{}}}],["ionicmodule.forroot",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":881,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["iproject",{"_index":670,"title":{"interfaces/IProject.html":{}},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/Team.html":{},"coverage.html":{}}}],["iproject|any",{"_index":686,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{}}}],["iresponse",{"_index":515,"title":{"interfaces/IResponse.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/IResponse.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["iresponse.generic",{"_index":616,"title":{},"body":{"injectables/CrudService.html":{}}}],["isready",{"_index":1177,"title":{},"body":{"injectables/StorageService.html":{}}}],["issubmitted",{"_index":793,"title":{},"body":{"components/LoginPage.html":{}}}],["itask",{"_index":702,"title":{"interfaces/ITask.html":{}},"body":{"interfaces/ITask.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["itask|any",{"_index":727,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["iteam",{"_index":740,"title":{"interfaces/ITeam.html":{}},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["iteam|any",{"_index":743,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["item",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["item.created_at",{"_index":1423,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["item.email",{"_index":1494,"title":{},"body":{"components/UsersPage.html":{}}}],["item.name",{"_index":1421,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["item.selected",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["item.user.name",{"_index":1422,"title":{},"body":{"components/TeamsPage.html":{}}}],["itemdialog",{"_index":1260,"title":{},"body":{"components/TeamReadPage.html":{},"components/TeamsPage.html":{}}}],["items",{"_index":893,"title":{},"body":{"components/PasswordInputComponent.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["items.length",{"_index":1425,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["itemservice",{"_index":1380,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["itimestamp",{"_index":673,"title":{"interfaces/ITimestamp.html":{}},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{},"coverage.html":{}}}],["itimestamp.interface",{"_index":677,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["itoken",{"_index":505,"title":{"interfaces/IToken.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"coverage.html":{}}}],["iuser",{"_index":501,"title":{"interfaces/IUser.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Team.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["iuser|any",{"_index":772,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["json",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["json.stringify(err",{"_index":849,"title":{},"body":{"components/LoginPage.html":{}}}],["jsonwebtokenentity",{"_index":761,"title":{"classes/JsonWebTokenEntity.html":{}},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"coverage.html":{}}}],["jwt",{"_index":758,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":757,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["jwtdecode(this.token",{"_index":766,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["key",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"injectables/StorageService.html":{}}}],["key}=${encodeuricomponent(from[key])}`).join",{"_index":1152,"title":{},"body":{"injectables/RestService.html":{}}}],["label",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["lang",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["later",{"_index":854,"title":{},"body":{"components/LoginPage.html":{}}}],["lazy",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leader",{"_index":1335,"title":{},"body":{"components/TeamReadPage.html":{}}}],["left",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["level",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["line",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/StorageService.html":{}}}],["link",{"_index":1200,"title":{},"body":{"injectables/StorageService.html":{}}}],["list",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["list#inbox",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["list#labels",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["literal",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RestService.html":{}}}],["load",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["loadchildren",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["loader",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["loadprofile",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["local",{"_index":386,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{}}}],["log",{"_index":840,"title":{},"body":{"components/LoginPage.html":{}}}],["logged",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/RestService.html":{}}}],["logic",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["login",{"_index":457,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{}}}],["login'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["login(email",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.page",{"_index":869,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":791,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":790,"title":{},"body":{"components/LoginPage.html":{}}}],["login2",{"_index":833,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":210,"title":{"components/LoginPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["loginpagemodule",{"_index":863,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"index.html":{},"modules.html":{}}}],["loginpageroutingmodule",{"_index":867,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["logs",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["loop",{"_index":1212,"title":{},"body":{"injectables/StorageService.html":{}}}],["m",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{}}}],["m.authmodule",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":459,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":467,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["m.projectreadpagemodule",{"_index":1081,"title":{},"body":{"modules/ProjectsPageRoutingModule.html":{}}}],["m.projectspagemodule",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":463,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["m.teamreadpagemodule",{"_index":1445,"title":{},"body":{"modules/TeamsPageRoutingModule.html":{}}}],["m.teamspagemodule",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.testpagemodule",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.userreadpagemodule",{"_index":1504,"title":{},"body":{"modules/UsersPageRoutingModule.html":{}}}],["m.userspagemodule",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["making",{"_index":753,"title":{},"body":{"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"classes/User.html":{}}}],["manage",{"_index":1419,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["map",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{}}}],["map(res",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["margin",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["medium",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["member",{"_index":1304,"title":{},"body":{"components/TeamReadPage.html":{}}}],["member.created_at",{"_index":1342,"title":{},"body":{"components/TeamReadPage.html":{}}}],["member.email",{"_index":1341,"title":{},"body":{"components/TeamReadPage.html":{}}}],["member.name",{"_index":1340,"title":{},"body":{"components/TeamReadPage.html":{}}}],["members",{"_index":1338,"title":{},"body":{"components/TeamReadPage.html":{}}}],["menu",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.ios",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.md",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":845,"title":{},"body":{"components/LoginPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["messages",{"_index":803,"title":{},"body":{"components/LoginPage.html":{}}}],["messageservice",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["methods",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{}}}],["min",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":1588,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":1002,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["model",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["modelid",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["module",{"_index":236,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["modules",{"_index":238,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["multi",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"miscellaneous/functions.html":{}}}],["nbsp;&nbsp",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/TeamReadPage.html":{}}}],["need",{"_index":1155,"title":{},"body":{"injectables/RestService.html":{}}}],["never",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["newer",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["next",{"_index":394,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/StorageService.html":{}}}],["next.handle(authreq).pipe(catcherror(x",{"_index":444,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ngmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["ngondestroy",{"_index":942,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["ngx",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["noauth",{"_index":1130,"title":{},"body":{"injectables/RestService.html":{}}}],["note",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["null",{"_index":432,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/ProjectReadPage.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":714,"title":{},"body":{"interfaces/ITask.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"classes/Task.html":{}}}],["object",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"injectables/RestService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["observable(observer",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["observer",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["observer.next(null",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["of(err.message",{"_index":430,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ondestroy",{"_index":932,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["openaddtaskdialog",{"_index":943,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["openeditdialog",{"_index":1375,"title":{},"body":{"components/TeamsPage.html":{}}}],["openeditdialog(item",{"_index":1388,"title":{},"body":{"components/TeamsPage.html":{}}}],["opennewdialog",{"_index":1376,"title":{},"body":{"components/TeamsPage.html":{}}}],["operations",{"_index":1172,"title":{},"body":{"injectables/StorageService.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["option",{"_index":897,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["optional",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"index.html":{}}}],["outside",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1593,"title":{"index.html":{}},"body":{"index.html":{}}}],["owner",{"_index":1420,"title":{},"body":{"components/TeamsPage.html":{}}}],["p.title",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1554,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{},"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{}}}],["page",{"_index":789,"title":{},"body":{"components/LoginPage.html":{}}}],["page.component",{"_index":1085,"title":{},"body":{"modules/ReadPageRoutingModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/UserReadPageModule.html":{}}}],["page.component.html",{"_index":1458,"title":{},"body":{"components/UserReadPage.html":{}}}],["page.component.scss",{"_index":1457,"title":{},"body":{"components/UserReadPage.html":{}}}],["page.component.ts",{"_index":1259,"title":{},"body":{"components/TeamReadPage.html":{},"components/UserReadPage.html":{},"coverage.html":{}}}],["page.component.ts:110",{"_index":1281,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:132",{"_index":1274,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:15",{"_index":1463,"title":{},"body":{"components/UserReadPage.html":{}}}],["page.component.ts:16",{"_index":1462,"title":{},"body":{"components/UserReadPage.html":{}}}],["page.component.ts:17",{"_index":1293,"title":{},"body":{"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["page.component.ts:18",{"_index":1291,"title":{},"body":{"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["page.component.ts:19",{"_index":1294,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:20",{"_index":1292,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:21",{"_index":1289,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:22",{"_index":1287,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:23",{"_index":1286,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:24",{"_index":1288,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:25",{"_index":1290,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:26",{"_index":1271,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:30",{"_index":1461,"title":{},"body":{"components/UserReadPage.html":{}}}],["page.component.ts:35",{"_index":1460,"title":{},"body":{"components/UserReadPage.html":{}}}],["page.component.ts:42",{"_index":1275,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:46",{"_index":1273,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:51",{"_index":1277,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:63",{"_index":1280,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:75",{"_index":1283,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:80",{"_index":1272,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:85",{"_index":1282,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:90",{"_index":1285,"title":{},"body":{"components/TeamReadPage.html":{}}}],["page.component.ts:98",{"_index":1279,"title":{},"body":{"components/TeamReadPage.html":{}}}],["pages",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["pages/projects/project.service",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/tasks/task.service",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/teams/team.service",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/users/user.service",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["pages[key].guard(this.authservice",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"components/LoginPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/User.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"miscellaneous/functions.html":{}}}],["params.id",{"_index":974,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["parent",{"_index":707,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["parent_id",{"_index":708,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["password",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/IUser.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"miscellaneous/variables.html":{}}}],["password.touched",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password.value",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password_confirmation",{"_index":1095,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirmedvalidator",{"_index":1096,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordinputcomponent",{"_index":212,"title":{"components/PasswordInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["passwordvalidator",{"_index":1545,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["pathmatch",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["permissions",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipe",{"_index":395,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["pipe(map(res",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["please",{"_index":855,"title":{},"body":{"components/LoginPage.html":{}}}],["popperjs/core",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["post",{"_index":1121,"title":{},"body":{"injectables/RestService.html":{}}}],["preloadallmodules",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloading",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prevent",{"_index":827,"title":{},"body":{"components/LoginPage.html":{}}}],["primary",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["primeconfig",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["primeicons",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{}}}],["primeng/button",{"_index":1038,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/UsersPageModule.html":{}}}],["primeng/card",{"_index":1034,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/UserReadPageModule.html":{}}}],["primeng/confirmdialog",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"modules/TeamsPageModule.html":{}}}],["primeng/dialog",{"_index":1040,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["primeng/divider",{"_index":1044,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["primeng/dragdrop",{"_index":1036,"title":{},"body":{"modules/ProjectReadPageModule.html":{}}}],["primeng/fileupload",{"_index":1435,"title":{},"body":{"modules/TeamsPageModule.html":{}}}],["primeng/inputtext",{"_index":1042,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["primeng/ripple",{"_index":1439,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["primeng/table",{"_index":1441,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["primeng/toast",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toolbar",{"_index":1437,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["primeng]://primefaces.org/primeng/showcase/#/setuphttps",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng]{@link",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["primengconfig",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["proceed",{"_index":831,"title":{},"body":{"components/LoginPage.html":{}}}],["production",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":465,"title":{},"body":{"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{}}}],["profile'},{'name",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["profile.page",{"_index":913,"title":{},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":902,"title":{},"body":{"components/ProfilePage.html":{}}}],["profile.page.scss",{"_index":901,"title":{},"body":{"components/ProfilePage.html":{}}}],["profilepage",{"_index":215,"title":{"components/ProfilePage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["profilepagemodule",{"_index":907,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"index.html":{},"modules.html":{}}}],["profilepageroutingmodule",{"_index":911,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["progress",{"_index":1017,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["project",{"_index":218,"title":{"classes/Project.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{}}}],["project.created_at",{"_index":999,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{}}}],["project.description",{"_index":1005,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["project.entity",{"_index":718,"title":{},"body":{"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["project.factory",{"_index":736,"title":{},"body":{"interfaces/ITask.html":{},"injectables/ProjectService.html":{},"classes/Task.html":{},"components/TeamReadPage.html":{}}}],["project.factory(project",{"_index":749,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["project.id",{"_index":996,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["project.name",{"_index":994,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{}}}],["project.service",{"_index":969,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["project.shortname",{"_index":997,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{}}}],["project.team.name",{"_index":1006,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["project_id",{"_index":709,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["projectdialog",{"_index":1261,"title":{},"body":{"components/TeamReadPage.html":{}}}],["projectid",{"_index":937,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["projectreadpage",{"_index":217,"title":{"components/ProjectReadPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["projectreadpagemodule",{"_index":1026,"title":{"modules/ProjectReadPageModule.html":{}},"body":{"modules/ProjectReadPageModule.html":{},"index.html":{},"modules.html":{}}}],["projectreadpageroutingmodule",{"_index":1030,"title":{"modules/ProjectReadPageRoutingModule.html":{}},"body":{"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["projects",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ITeam.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{}}}],["projects'},{'name",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["projects.page",{"_index":1077,"title":{},"body":{"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{}}}],["projects.page.html",{"_index":1068,"title":{},"body":{"components/ProjectsPage.html":{}}}],["projects.page.scss",{"_index":1067,"title":{},"body":{"components/ProjectsPage.html":{}}}],["projects/project.service",{"_index":1297,"title":{},"body":{"components/TeamReadPage.html":{}}}],["projectservice",{"_index":247,"title":{"injectables/ProjectService.html":{}},"body":{"modules/AppModule.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/TeamReadPage.html":{},"coverage.html":{},"index.html":{}}}],["projectspage",{"_index":220,"title":{"components/ProjectsPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["projectspagemodule",{"_index":1071,"title":{"modules/ProjectsPageModule.html":{}},"body":{"modules/ProjectsPageModule.html":{},"index.html":{},"modules.html":{}}}],["projectspageroutingmodule",{"_index":1075,"title":{"modules/ProjectsPageRoutingModule.html":{}},"body":{"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["promise",{"_index":649,"title":{},"body":{"guards/GuestGuard.html":{},"injectables/StorageService.html":{}}}],["promise(resolve",{"_index":1213,"title":{},"body":{"injectables/StorageService.html":{}}}],["properties",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["props",{"_index":619,"title":{},"body":{"injectables/CrudService.html":{}}}],["protected",{"_index":567,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["provide",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"classes/Project.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["purge",{"_index":1186,"title":{},"body":{"injectables/StorageService.html":{}}}],["put",{"_index":1122,"title":{},"body":{"injectables/RestService.html":{}}}],["query",{"_index":1138,"title":{},"body":{"injectables/RestService.html":{},"injectables/StorageService.html":{}}}],["queryparams",{"_index":1107,"title":{},"body":{"components/RegisterPage.html":{}}}],["radius",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["raw",{"_index":763,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["reactiveformsmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginPageModule.html":{},"modules/RegisterPageModule.html":{}}}],["read",{"_index":577,"title":{},"body":{"injectables/CrudService.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"modules/ReadPageRoutingModule.html":{},"injectables/TaskService.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["read'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["read(id",{"_index":607,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["read.module').then",{"_index":1080,"title":{},"body":{"modules/ProjectsPageRoutingModule.html":{}}}],["read.module').then(m",{"_index":1444,"title":{},"body":{"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["read.module.ts",{"_index":1031,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/UserReadPageModule.html":{}}}],["read.page",{"_index":1032,"title":{},"body":{"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{}}}],["read.page.html",{"_index":934,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{}}}],["read.page.scss",{"_index":933,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{}}}],["read.page.ts",{"_index":931,"title":{},"body":{"components/ProjectReadPage.html":{},"coverage.html":{}}}],["read.page.ts:15",{"_index":965,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:16",{"_index":963,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:18",{"_index":964,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:19",{"_index":961,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:20",{"_index":967,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:21",{"_index":960,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:22",{"_index":966,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:23",{"_index":948,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:33",{"_index":957,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:37",{"_index":955,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:45",{"_index":956,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:50",{"_index":958,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:54",{"_index":954,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:59",{"_index":959,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:70",{"_index":951,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:74",{"_index":949,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read.page.ts:78",{"_index":953,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["read/project",{"_index":930,"title":{},"body":{"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"coverage.html":{}}}],["read/read",{"_index":1084,"title":{},"body":{"modules/ReadPageRoutingModule.html":{}}}],["read/team",{"_index":1258,"title":{},"body":{"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"coverage.html":{}}}],["read/user",{"_index":1456,"title":{},"body":{"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{}}}],["readonly",{"_index":617,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["readpageroutingmodule",{"_index":1082,"title":{"modules/ReadPageRoutingModule.html":{}},"body":{"modules/ReadPageRoutingModule.html":{},"modules/UserReadPageModule.html":{},"index.html":{},"modules.html":{}}}],["ready",{"_index":1173,"title":{},"body":{"injectables/StorageService.html":{}}}],["record",{"_index":1187,"title":{},"body":{"injectables/StorageService.html":{}}}],["redirect",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["redirects",{"_index":387,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginPage.html":{}}}],["redirectservice",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{},"components/RegisterPage.html":{}}}],["redirectto",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["register",{"_index":461,"title":{},"body":{"modules/AuthRoutingModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{}}}],["register'},{'name",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["register.page",{"_index":1117,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":1088,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":1087,"title":{},"body":{"components/RegisterPage.html":{}}}],["registered",{"_index":1105,"title":{},"body":{"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/UsersPage.html":{}}}],["registerform",{"_index":1089,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerpage",{"_index":222,"title":{"components/RegisterPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["registerpagemodule",{"_index":1111,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"index.html":{},"modules.html":{}}}],["registerpageroutingmodule",{"_index":1115,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["registerwhenstable:30000",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["remember",{"_index":861,"title":{},"body":{"components/LoginPage.html":{}}}],["remembered",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["rememberme",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["remove",{"_index":1174,"title":{},"body":{"injectables/StorageService.html":{},"components/TeamReadPage.html":{}}}],["remove(key",{"_index":1184,"title":{},"body":{"injectables/StorageService.html":{}}}],["removed",{"_index":1308,"title":{},"body":{"components/TeamReadPage.html":{}}}],["removemember",{"_index":1263,"title":{},"body":{"components/TeamReadPage.html":{},"injectables/TeamService.html":{}}}],["removemember(email",{"_index":1276,"title":{},"body":{"components/TeamReadPage.html":{}}}],["removemember(teamid",{"_index":1357,"title":{},"body":{"injectables/TeamService.html":{}}}],["removeproject",{"_index":1264,"title":{},"body":{"components/TeamReadPage.html":{}}}],["removeproject(project",{"_index":1278,"title":{},"body":{"components/TeamReadPage.html":{}}}],["report",{"_index":1015,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["reporter",{"_index":710,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["reporter_id",{"_index":711,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["represents",{"_index":769,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["req",{"_index":390,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone(token",{"_index":438,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('x",{"_index":433,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":440,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":393,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"injectables/RestService.html":{},"classes/User.html":{}}}],["requests",{"_index":1120,"title":{},"body":{"injectables/RestService.html":{}}}],["required",{"_index":860,"title":{},"body":{"components/LoginPage.html":{},"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{}}}],["res",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["res.data",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"components/TeamReadPage.html":{}}}],["res.data.map(this.factory",{"_index":630,"title":{},"body":{"injectables/CrudService.html":{}}}],["res.token",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"index.html":{}}}],["responses",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["responsible",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"injectables/RestService.html":{}}}],["rest",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/TeamService.html":{}}}],["rest.service",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["restservice",{"_index":478,"title":{"injectables/RestService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["result",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["result.push(pages[key",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["results",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":1128,"title":{},"body":{"injectables/RestService.html":{}}}],["return",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"injectables/TeamService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":1018,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["rgb",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(var",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["ripplemodule",{"_index":1438,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["route",{"_index":946,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["routereusestrategy",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":468,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":646,"title":{},"body":{"guards/GuestGuard.html":{}}}],["routes",{"_index":340,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{}}}],["routing.module.ts",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/TeamReadRoutingModule.html":{},"modules/TeamsPageRoutingModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["runs",{"_index":805,"title":{},"body":{"components/LoginPage.html":{}}}],["rxjs",{"_index":413,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"dependencies.html":{}}}],["rxjs/internal",{"_index":417,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{}}}],["rxjs/operators",{"_index":415,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{}}}],["saveitem",{"_index":1377,"title":{},"body":{"components/TeamsPage.html":{}}}],["savemember",{"_index":1265,"title":{},"body":{"components/TeamReadPage.html":{}}}],["saveproject",{"_index":1266,"title":{},"body":{"components/TeamReadPage.html":{}}}],["savetask",{"_index":944,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["section",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CrudService.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["see",{"_index":1156,"title":{},"body":{"injectables/RestService.html":{}}}],["selected",{"_index":1406,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["selecteditems",{"_index":1372,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["sent",{"_index":1133,"title":{},"body":{"injectables/RestService.html":{}}}],["server",{"_index":852,"title":{},"body":{"components/LoginPage.html":{}}}],["service",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["serviceworkermodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":1175,"title":{},"body":{"injectables/StorageService.html":{}}}],["set(key",{"_index":1188,"title":{},"body":{"injectables/StorageService.html":{}}}],["sets",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["settimeout(resolve",{"_index":1214,"title":{},"body":{"injectables/StorageService.html":{}}}],["settings",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["severity",{"_index":842,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["shade",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["shared",{"_index":1168,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/services/auth.service",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"guards/GuestGuard.html":{},"components/LoginPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["shared/services/redirect.service",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginPage.html":{},"components/ProfilePage.html":{}}}],["shared/services/rest.service",{"_index":615,"title":{},"body":{"injectables/CrudService.html":{},"components/RegisterPage.html":{}}}],["shared/services/storage.service",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["shared/shared.module",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginPageModule.html":{}}}],["shared/validators/password",{"_index":1098,"title":{},"body":{"components/RegisterPage.html":{}}}],["sharedenv",{"_index":1550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule",{"_index":246,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginPageModule.html":{},"modules/SharedModule.html":{},"modules/UsersPageModule.html":{},"index.html":{},"modules.html":{}}}],["short",{"_index":1343,"title":{},"body":{"components/TeamReadPage.html":{}}}],["shortname",{"_index":674,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITask.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/Task.html":{},"components/TeamReadPage.html":{}}}],["show",{"_index":844,"title":{},"body":{"components/LoginPage.html":{},"components/PasswordInputComponent.html":{}}}],["showaddprojectdialog",{"_index":1267,"title":{},"body":{"components/TeamReadPage.html":{}}}],["showdialog",{"_index":1268,"title":{},"body":{"components/TeamReadPage.html":{}}}],["showeditprojectdialog",{"_index":1269,"title":{},"body":{"components/TeamReadPage.html":{}}}],["showeditprojectdialog(project",{"_index":1284,"title":{},"body":{"components/TeamReadPage.html":{}}}],["showpassword",{"_index":877,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["sidebar",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["singleton",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["size",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["solid",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"injectables/ProjectService.html":{},"components/ProjectsPage.html":{},"modules/ProjectsPageModule.html":{},"modules/ProjectsPageRoutingModule.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"injectables/RestService.html":{},"modules/SharedModule.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["src/.../app.module.ts",{"_index":1590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.local.ts",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.shared.ts",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password.validator.ts",{"_index":1591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/classes/crudservice.generic.ts",{"_index":563,"title":{},"body":{"injectables/CrudService.html":{},"coverage.html":{}}}],["src/app/classes/crudservice.generic.ts:10",{"_index":581,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:17",{"_index":610,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:20",{"_index":612,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:21",{"_index":614,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:22",{"_index":596,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:25",{"_index":597,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:28",{"_index":606,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:31",{"_index":604,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:34",{"_index":594,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:37",{"_index":599,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:42",{"_index":591,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:45",{"_index":601,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:50",{"_index":585,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:54",{"_index":608,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:58",{"_index":589,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:62",{"_index":584,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/crudservice.generic.ts:66",{"_index":587,"title":{},"body":{"injectables/CrudService.html":{}}}],["src/app/classes/icrud.interface.ts",{"_index":668,"title":{},"body":{"interfaces/ICrud.html":{},"coverage.html":{}}}],["src/app/classes/iresponse.generic.ts",{"_index":700,"title":{},"body":{"interfaces/IResponse.html":{},"coverage.html":{}}}],["src/app/classes/itimestamp.interface.ts",{"_index":750,"title":{},"body":{"interfaces/ITimestamp.html":{},"coverage.html":{}}}],["src/app/classes/jsonwebtoken.entity.ts",{"_index":751,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"coverage.html":{}}}],["src/app/classes/jsonwebtoken.entity.ts:13",{"_index":783,"title":{},"body":{"classes/JsonWebTokenEntity.html":{}}}],["src/app/classes/jsonwebtoken.entity.ts:16",{"_index":785,"title":{},"body":{"classes/JsonWebTokenEntity.html":{}}}],["src/app/classes/jsonwebtoken.entity.ts:17",{"_index":786,"title":{},"body":{"classes/JsonWebTokenEntity.html":{}}}],["src/app/classes/jsonwebtoken.entity.ts:18",{"_index":784,"title":{},"body":{"classes/JsonWebTokenEntity.html":{}}}],["src/app/classes/jsonwebtoken.entity.ts:22",{"_index":787,"title":{},"body":{"classes/JsonWebTokenEntity.html":{}}}],["src/app/classes/project.entity.ts",{"_index":671,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{},"coverage.html":{}}}],["src/app/classes/project.entity.ts:16",{"_index":916,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:18",{"_index":921,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:19",{"_index":922,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:20",{"_index":919,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:21",{"_index":923,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:22",{"_index":926,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:23",{"_index":925,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:24",{"_index":924,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:25",{"_index":917,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:26",{"_index":927,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:27",{"_index":920,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:28",{"_index":918,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/project.entity.ts:31",{"_index":928,"title":{},"body":{"classes/Project.html":{}}}],["src/app/classes/task.entity",{"_index":970,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["src/app/classes/task.entity.ts",{"_index":703,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{},"coverage.html":{}}}],["src/app/classes/task.entity.ts:22",{"_index":1233,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:24",{"_index":1216,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:26",{"_index":1221,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:27",{"_index":1222,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:28",{"_index":1220,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:29",{"_index":1224,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:30",{"_index":1226,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:31",{"_index":1228,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:32",{"_index":1218,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:33",{"_index":1229,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:34",{"_index":1223,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:35",{"_index":1230,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:36",{"_index":1225,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:37",{"_index":1217,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:38",{"_index":1227,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:39",{"_index":1219,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/task.entity.ts:42",{"_index":1231,"title":{},"body":{"classes/Task.html":{}}}],["src/app/classes/team.entity.ts",{"_index":741,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{},"coverage.html":{}}}],["src/app/classes/team.entity.ts:15",{"_index":1245,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:17",{"_index":1249,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:18",{"_index":1250,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:19",{"_index":1253,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:20",{"_index":1254,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:21",{"_index":1255,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:22",{"_index":1246,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:23",{"_index":1252,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:24",{"_index":1251,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:25",{"_index":1248,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:26",{"_index":1247,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/team.entity.ts:29",{"_index":1256,"title":{},"body":{"classes/Team.html":{}}}],["src/app/classes/user.entity.ts",{"_index":768,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"coverage.html":{}}}],["src/app/classes/user.entity.ts:13",{"_index":1446,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:26",{"_index":1451,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:27",{"_index":1452,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:28",{"_index":1450,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:29",{"_index":1453,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:30",{"_index":1447,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:31",{"_index":1454,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:32",{"_index":1449,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:33",{"_index":1448,"title":{},"body":{"classes/User.html":{}}}],["src/app/classes/user.entity.ts:37",{"_index":1455,"title":{},"body":{"classes/User.html":{}}}],["src/app/http/guards/guest.guard.ts",{"_index":640,"title":{},"body":{"guards/GuestGuard.html":{},"coverage.html":{}}}],["src/app/http/guards/guest.guard.ts:14",{"_index":647,"title":{},"body":{"guards/GuestGuard.html":{}}}],["src/app/http/guards/guest.guard.ts:9",{"_index":642,"title":{},"body":{"guards/GuestGuard.html":{}}}],["src/app/http/interceptors/auth.interceptor.ts",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/http/interceptors/auth.interceptor.ts:11",{"_index":384,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/http/interceptors/auth.interceptor.ts:27",{"_index":406,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/http/interceptors/auth.interceptor.ts:37",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/http/interceptors/auth.interceptor.ts:58",{"_index":392,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/pages/auth/auth",{"_index":454,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/pages/auth/auth.module.ts",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/pages/auth/login/login",{"_index":870,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/pages/auth/login/login.module.ts",{"_index":868,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/auth/login/login.page.ts",{"_index":788,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/auth/login/login.page.ts:15",{"_index":812,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/auth/login/login.page.ts:17",{"_index":799,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/auth/login/login.page.ts:33",{"_index":815,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/auth/login/login.page.ts:38",{"_index":804,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/auth/login/login.page.ts:52",{"_index":809,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/auth/profile/profile",{"_index":914,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/pages/auth/profile/profile.module.ts",{"_index":912,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/pages/auth/profile/profile.page.ts",{"_index":900,"title":{},"body":{"components/ProfilePage.html":{},"coverage.html":{}}}],["src/app/pages/auth/profile/profile.page.ts:10",{"_index":903,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/auth/profile/profile.page.ts:17",{"_index":904,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/pages/auth/register/register",{"_index":1118,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/pages/auth/register/register.module.ts",{"_index":1116,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/pages/auth/register/register.page.ts",{"_index":1086,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/pages/auth/register/register.page.ts:14",{"_index":1097,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/auth/register/register.page.ts:19",{"_index":1090,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/auth/register/register.page.ts:28",{"_index":1091,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/auth/register/register.page.ts:32",{"_index":1092,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/home/home",{"_index":664,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":662,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":652,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:12",{"_index":656,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:8",{"_index":655,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/projects/project",{"_index":929,"title":{},"body":{"components/ProjectReadPage.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectReadPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/projects/project.service.ts",{"_index":1045,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/app/pages/projects/project.service.ts:21",{"_index":1061,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/pages/projects/project.service.ts:9",{"_index":1060,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/pages/projects/projects",{"_index":1078,"title":{},"body":{"modules/ProjectsPageRoutingModule.html":{}}}],["src/app/pages/projects/projects.module.ts",{"_index":1076,"title":{},"body":{"modules/ProjectsPageModule.html":{}}}],["src/app/pages/projects/projects.page.ts",{"_index":1066,"title":{},"body":{"components/ProjectsPage.html":{},"coverage.html":{}}}],["src/app/pages/projects/projects.page.ts:12",{"_index":1070,"title":{},"body":{"components/ProjectsPage.html":{}}}],["src/app/pages/projects/projects.page.ts:8",{"_index":1069,"title":{},"body":{"components/ProjectsPage.html":{}}}],["src/app/pages/tasks/task.service.ts",{"_index":1234,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/app/pages/tasks/task.service.ts:25",{"_index":1236,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/pages/tasks/task.service.ts:9",{"_index":1235,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/app/pages/teams/team",{"_index":1257,"title":{},"body":{"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/teams/team.service.ts",{"_index":1352,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/pages/teams/team.service.ts:10",{"_index":1354,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/pages/teams/team.service.ts:17",{"_index":1361,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/pages/teams/team.service.ts:22",{"_index":1360,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/pages/teams/team.service.ts:27",{"_index":1362,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/pages/teams/team.service.ts:32",{"_index":1356,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/pages/teams/team.service.ts:39",{"_index":1358,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/pages/teams/teams",{"_index":1442,"title":{},"body":{"modules/TeamsPageRoutingModule.html":{}}}],["src/app/pages/teams/teams.module.ts",{"_index":1432,"title":{},"body":{"modules/TeamsPageModule.html":{}}}],["src/app/pages/teams/teams.page.ts",{"_index":1369,"title":{},"body":{"components/TeamsPage.html":{},"coverage.html":{}}}],["src/app/pages/teams/teams.page.ts:103",{"_index":1386,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:15",{"_index":1396,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:16",{"_index":1395,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:17",{"_index":1394,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:18",{"_index":1393,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:19",{"_index":1397,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:20",{"_index":1379,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:27",{"_index":1392,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:30",{"_index":1387,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:34",{"_index":1385,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:42",{"_index":1390,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:49",{"_index":1383,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:63",{"_index":1389,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:69",{"_index":1382,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:81",{"_index":1384,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/teams/teams.page.ts:86",{"_index":1391,"title":{},"body":{"components/TeamsPage.html":{}}}],["src/app/pages/users/user",{"_index":1083,"title":{},"body":{"modules/ReadPageRoutingModule.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"coverage.html":{}}}],["src/app/pages/users/user.service.ts",{"_index":1476,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/pages/users/user.service.ts:17",{"_index":1480,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/users/user.service.ts:9",{"_index":1479,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/pages/users/users",{"_index":1502,"title":{},"body":{"modules/UsersPageRoutingModule.html":{}}}],["src/app/pages/users/users.module.ts",{"_index":1500,"title":{},"body":{"modules/UsersPageModule.html":{}}}],["src/app/pages/users/users.page.ts",{"_index":1482,"title":{},"body":{"components/UsersPage.html":{},"coverage.html":{}}}],["src/app/pages/users/users.page.ts:15",{"_index":1493,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:16",{"_index":1492,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:17",{"_index":1485,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:24",{"_index":1491,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:27",{"_index":1490,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:31",{"_index":1488,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:39",{"_index":1487,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:53",{"_index":1486,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/pages/users/users.page.ts:66",{"_index":1489,"title":{},"body":{"components/UsersPage.html":{}}}],["src/app/shared/components/password",{"_index":871,"title":{},"body":{"components/PasswordInputComponent.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service",{"_index":905,"title":{},"body":{"components/ProfilePage.html":{}}}],["src/app/shared/services/auth.service.ts",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service.ts:18",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:19",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:20",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:21",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:22",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:48",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:57",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:65",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:80",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:96",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/redirect.service",{"_index":1100,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/shared/services/rest.service",{"_index":1363,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared/services/rest.service.ts",{"_index":1119,"title":{},"body":{"injectables/RestService.html":{},"coverage.html":{}}}],["src/app/shared/services/rest.service.ts:11",{"_index":1126,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/shared/services/rest.service.ts:28",{"_index":1141,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/shared/services/rest.service.ts:40",{"_index":1142,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/shared/services/rest.service.ts:54",{"_index":1144,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/shared/services/rest.service.ts:67",{"_index":1139,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/shared/services/rest.service.ts:78",{"_index":1136,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/shared/services/rest.service.ts:87",{"_index":1131,"title":{},"body":{"injectables/RestService.html":{}}}],["src/app/shared/services/storage.service.ts",{"_index":1171,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/shared/services/storage.service.ts:10",{"_index":1197,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:12",{"_index":1178,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:27",{"_index":1199,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:37",{"_index":1189,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:47",{"_index":1181,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:57",{"_index":1185,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/services/storage.service.ts:71",{"_index":1190,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1166,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/validators/password",{"_index":1540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/validators/password.validator.ts",{"_index":1544,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.local.ts",{"_index":1546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.shared.ts",{"_index":1549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/theme/crud_table",{"_index":1426,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["start",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["starts",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["statements",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":684,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["status",{"_index":712,"title":{},"body":{"interfaces/ITask.html":{},"components/ProjectReadPage.html":{},"classes/Task.html":{},"injectables/TaskService.html":{}}}],["step",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["storage",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{}}}],["storage.service",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RestService.html":{}}}],["storage.waitforstorage",{"_index":1194,"title":{},"body":{"injectables/StorageService.html":{}}}],["storageservice",{"_index":248,"title":{"injectables/StorageService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{}}}],["storing",{"_index":1127,"title":{},"body":{"injectables/RestService.html":{}}}],["strategies",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["strategy",{"_index":1179,"title":{},"body":{"injectables/StorageService.html":{}}}],["string",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{}}}],["string|null",{"_index":726,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["submit",{"_index":811,"title":{},"body":{"components/LoginPage.html":{}}}],["submitform",{"_index":794,"title":{},"body":{"components/LoginPage.html":{}}}],["submitform(event",{"_index":807,"title":{},"body":{"components/LoginPage.html":{}}}],["submitted",{"_index":810,"title":{},"body":{"components/LoginPage.html":{},"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{}}}],["subscribe",{"_index":1327,"title":{},"body":{"components/TeamReadPage.html":{}}}],["subscribe(project",{"_index":978,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["subscriber",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscription",{"_index":962,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["subtasks",{"_index":713,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["success",{"_index":843,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["successful",{"_index":841,"title":{},"body":{"components/LoginPage.html":{}}}],["successfully",{"_index":1104,"title":{},"body":{"components/RegisterPage.html":{}}}],["summary",{"_index":839,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["super(rest",{"_index":1364,"title":{},"body":{"injectables/TeamService.html":{}}}],["support",{"_index":1598,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1302,"title":{},"body":{"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["svg",{"_index":1599,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":420,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["swupdate",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["t",{"_index":701,"title":{},"body":{"interfaces/IResponse.html":{},"injectables/StorageService.html":{}}}],["table",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["tablemodule",{"_index":1440,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":484,"title":{"classes/Task.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IProject.html":{},"interfaces/ITask.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["task'|'project'|'user'|'team",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["task.assignee?.name",{"_index":1014,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["task.created_at",{"_index":1010,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["task.description",{"_index":1011,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["task.entity",{"_index":680,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{}}}],["task.factory",{"_index":1238,"title":{},"body":{"injectables/TaskService.html":{}}}],["task.factory({projectid",{"_index":980,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["task.id",{"_index":1009,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["task.name",{"_index":1008,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["task.reporter?.name",{"_index":1016,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["task.status",{"_index":1012,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["tasks",{"_index":675,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/TaskService.html":{}}}],["tasks/task.service",{"_index":971,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["taskservice",{"_index":249,"title":{"injectables/TaskService.html":{}},"body":{"modules/AppModule.html":{},"components/ProjectReadPage.html":{},"injectables/TaskService.html":{},"coverage.html":{},"index.html":{}}}],["task|null",{"_index":721,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["tclass",{"_index":583,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["td",{"_index":1344,"title":{},"body":{"components/TeamReadPage.html":{}}}],["team",{"_index":225,"title":{"classes/Team.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{}}}],["team(null",{"_index":1403,"title":{},"body":{"components/TeamsPage.html":{}}}],["team.created_at",{"_index":1334,"title":{},"body":{"components/TeamReadPage.html":{}}}],["team.entity",{"_index":679,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{}}}],["team.factory",{"_index":693,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{},"injectables/TeamService.html":{}}}],["team.name",{"_index":1333,"title":{},"body":{"components/TeamReadPage.html":{}}}],["team.service",{"_index":1296,"title":{},"body":{"components/TeamReadPage.html":{},"components/TeamsPage.html":{}}}],["team.user?.created_at",{"_index":1339,"title":{},"body":{"components/TeamReadPage.html":{}}}],["team.user?.email",{"_index":1337,"title":{},"body":{"components/TeamReadPage.html":{}}}],["team.user?.name",{"_index":1336,"title":{},"body":{"components/TeamReadPage.html":{}}}],["team?.name",{"_index":1332,"title":{},"body":{"components/TeamReadPage.html":{}}}],["team_id",{"_index":676,"title":{},"body":{"interfaces/IProject.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"components/TeamReadPage.html":{}}}],["teamid",{"_index":1262,"title":{},"body":{"components/TeamReadPage.html":{},"injectables/TeamService.html":{}}}],["teamreadpage",{"_index":224,"title":{"components/TeamReadPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["teamreadpagemodule",{"_index":1347,"title":{"modules/TeamReadPageModule.html":{}},"body":{"modules/TeamReadPageModule.html":{},"index.html":{},"modules.html":{}}}],["teamreadroutingmodule",{"_index":1351,"title":{"modules/TeamReadRoutingModule.html":{}},"body":{"modules/TeamReadPageModule.html":{},"modules/TeamReadRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["teams",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{}}}],["teams'},{'name",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["teams.page",{"_index":1433,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{}}}],["teams.page.html",{"_index":1371,"title":{},"body":{"components/TeamsPage.html":{}}}],["teams.page.scss",{"_index":1370,"title":{},"body":{"components/TeamsPage.html":{}}}],["teamservice",{"_index":250,"title":{"injectables/TeamService.html":{}},"body":{"modules/AppModule.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"coverage.html":{},"index.html":{}}}],["teamspage",{"_index":226,"title":{"components/TeamsPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["teamspagemodule",{"_index":1427,"title":{"modules/TeamsPageModule.html":{}},"body":{"modules/TeamsPageModule.html":{},"index.html":{},"modules.html":{}}}],["teamspageroutingmodule",{"_index":1431,"title":{"modules/TeamsPageRoutingModule.html":{}},"body":{"modules/TeamsPageModule.html":{},"modules/TeamsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["test",{"_index":1193,"title":{},"body":{"injectables/StorageService.html":{}}}],["text",{"_index":888,"title":{},"body":{"components/PasswordInputComponent.html":{},"components/ProjectReadPage.html":{}}}],["this.#ready",{"_index":1204,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.#storage",{"_index":1202,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.#storage?.get(key",{"_index":1207,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.#storage?.remove(key",{"_index":1208,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.#storage?.set(key",{"_index":1206,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.activeuser",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.activeuser.email",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.activeuser",{"_index":651,"title":{},"body":{"guards/GuestGuard.html":{}}}],["this.authservice.activeuser.id",{"_index":1404,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.authservice.login(this.formgroup.value.email",{"_index":834,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authservice.trylogin",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.user",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.buildheaders(headers",{"_index":1147,"title":{},"body":{"injectables/RestService.html":{}}}],["this.builduri(uri",{"_index":1146,"title":{},"body":{"injectables/RestService.html":{}}}],["this.checkserviceworkerupdate",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["this.confirm.confirm",{"_index":1301,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.confirmationservice.confirm",{"_index":1405,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.count",{"_index":725,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["this.dialogopen",{"_index":983,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.draggedtask",{"_index":990,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.draggedtask.status",{"_index":991,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.factory(res.data",{"_index":632,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.formbuilder.group",{"_index":823,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.formgroup",{"_index":822,"title":{},"body":{"components/LoginPage.html":{}}}],["this.formgroup.controls",{"_index":819,"title":{},"body":{"components/LoginPage.html":{}}}],["this.formgroup.valid",{"_index":829,"title":{},"body":{"components/LoginPage.html":{}}}],["this.formgroup.value.password",{"_index":835,"title":{},"body":{"components/LoginPage.html":{}}}],["this.formgroup.value.rememberme).then(res",{"_index":836,"title":{},"body":{"components/LoginPage.html":{}}}],["this.getaddbody(tclass",{"_index":636,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.getbody(entity",{"_index":628,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.geteditbody(tclass",{"_index":634,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.handleerror(x))).topromise",{"_index":445,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.hidedialog",{"_index":1313,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.http.delete",{"_index":1150,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get",{"_index":1145,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.post",{"_index":1148,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.put",{"_index":1149,"title":{},"body":{"injectables/RestService.html":{}}}],["this.init",{"_index":975,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.input",{"_index":1316,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.input).subscribe(res",{"_index":1311,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.input.type",{"_index":887,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["this.isready",{"_index":1209,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.issubmitted",{"_index":828,"title":{},"body":{"components/LoginPage.html":{}}}],["this.item",{"_index":1402,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.item.id",{"_index":1415,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.itemdialog",{"_index":1315,"title":{},"body":{"components/TeamReadPage.html":{},"components/TeamsPage.html":{}}}],["this.items",{"_index":1400,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.items$.unsubscribe",{"_index":1399,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.items.filter(i",{"_index":1409,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.itemservice.add(this.item).subscribe",{"_index":1418,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.itemservice.browse().subscribe(res",{"_index":1401,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.itemservice.delete(item).subscribe",{"_index":1414,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.itemservice.delete(item.id).subscribe",{"_index":1408,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.itemservice.edit(this.item).subscribe",{"_index":1416,"title":{},"body":{"components/TeamsPage.html":{}}}],["this.loadprofile",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.message.add",{"_index":1307,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.messageservice.add",{"_index":1412,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.permissions.push",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.primeconfig.ripple",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["this.primeconfig.settranslation(res",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["this.profile().pipe",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.project",{"_index":976,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{}}}],["this.project$.unsubscribe",{"_index":982,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.project$?.unsubscribe",{"_index":1331,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.project.name",{"_index":1325,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.project.shortname",{"_index":1326,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.project.team_id",{"_index":1318,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.project?.shortname",{"_index":723,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["this.projectdialog",{"_index":1317,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.projectid",{"_index":972,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.projectid$.unsubscribe",{"_index":981,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.projectservice.add(project.factory",{"_index":1324,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.projectservice.delete(project).subscribe",{"_index":1319,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.projectservice.edit(this.project).subscribe",{"_index":1322,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.projectservice.read(this.projectid",{"_index":977,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.redirect.intendedor(home",{"_index":846,"title":{},"body":{"components/LoginPage.html":{}}}],["this.redirect.push(window.location.href",{"_index":424,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.redirect.to('/login2",{"_index":425,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.redirect.to(`${pages.users.url}/${this.authservice.activeuser?.id",{"_index":906,"title":{},"body":{"components/ProfilePage.html":{}}}],["this.redirect.to(pages.login.url",{"_index":1106,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value).subscribe",{"_index":1102,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.email",{"_index":1108,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.rest.delete(this.getdeleteuri(tclass[this.idname",{"_index":637,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.rest.delete>('teams/membership",{"_index":1368,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.rest.get>('profile",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rest.get>(this.getbrowseuri()).pipe(map(res",{"_index":629,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.rest.get>(this.getreaduri(id)).pipe(map(res",{"_index":631,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.rest.post('login",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rest.post('register",{"_index":1101,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.rest.post(this.getadduri",{"_index":635,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.rest.post>('can",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rest.post>('teams/membership",{"_index":1367,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.rest.put(this.getedituri(tclass",{"_index":633,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.route.params.subscribe(params",{"_index":973,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/UserReadPage.html":{}}}],["this.selecteditems",{"_index":1411,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.selecteditems.foreach(item",{"_index":1407,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.selecteditems.includes(i",{"_index":1410,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["this.showpassword",{"_index":886,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["this.storage.create().then(createdstorage",{"_index":1201,"title":{},"body":{"injectables/StorageService.html":{}}}],["this.storage.get('token",{"_index":436,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{}}}],["this.storage.get('tokenobject",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.set('token",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.set('tokenobject",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.waitforstorage",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage?.get('user')?.then(user",{"_index":1159,"title":{},"body":{"injectables/RestService.html":{}}}],["this.submitted",{"_index":984,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{}}}],["this.swupdate.available?.subscribe",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["this.task",{"_index":979,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.task.id",{"_index":986,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.task.project_id",{"_index":988,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.taskservice.add(this.task).subscribe",{"_index":989,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.taskservice.edit(this.draggedtask).subscribe",{"_index":992,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.taskservice.edit(this.task).subscribe",{"_index":987,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["this.team",{"_index":1299,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.team$?.unsubscribe",{"_index":1330,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.teamid",{"_index":1298,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.teamid$?.unsubscribe",{"_index":1329,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.teamservice.addmember(this.teamid",{"_index":1310,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.teamservice.read(this.teamid).subscribe(team",{"_index":1300,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.teamservice.removemember(this.teamid",{"_index":1305,"title":{},"body":{"components/TeamReadPage.html":{}}}],["this.toast.add",{"_index":838,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.tokenobject",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenobject?.token",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.translate('hu",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.get('primeng').subscribe(res",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(lang",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["this.uri",{"_index":623,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.uri}/${id",{"_index":624,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.uri}/${tclass",{"_index":626,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.uri}/${tclass[this.idname",{"_index":625,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.user",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"components/UserReadPage.html":{}}}],["this.user$?.unsubscribe",{"_index":1468,"title":{},"body":{"components/UserReadPage.html":{}}}],["this.useremail",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userid",{"_index":1465,"title":{},"body":{"components/UserReadPage.html":{}}}],["this.userid$?.unsubscribe",{"_index":1467,"title":{},"body":{"components/UserReadPage.html":{}}}],["this.username",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userobserver",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userobserver.next(this.activeuser",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.read(this.userid).subscribe(user",{"_index":1466,"title":{},"body":{"components/UserReadPage.html":{}}}],["this.waitforstorage",{"_index":1205,"title":{},"body":{"injectables/StorageService.html":{}}}],["through",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["throwerror",{"_index":412,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["throwerror(err",{"_index":429,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["time",{"_index":407,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tinterface|any",{"_index":620,"title":{},"body":{"injectables/CrudService.html":{}}}],["toast",{"_index":798,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["toastmodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["todo",{"_index":1007,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["toggle",{"_index":895,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["toggleshow",{"_index":878,"title":{},"body":{"components/PasswordInputComponent.html":{}}}],["token",{"_index":431,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["token.tostring",{"_index":442,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["token_type",{"_index":756,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{}}}],["tokenobject",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["toolbarmodule",{"_index":1436,"title":{},"body":{"modules/TeamsPageModule.html":{},"modules/UsersPageModule.html":{}}}],["top",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/TeamReadPage.html":{}}}],["topromise",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1424,"title":{},"body":{"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["tpost",{"_index":593,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["tpost&tput",{"_index":621,"title":{},"body":{"injectables/CrudService.html":{}}}],["tput",{"_index":602,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["translate",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["translate(lang",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["translation",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["true",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginPage.html":{},"components/ProjectReadPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":765,"title":{},"body":{"interfaces/IToken.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{}}}],["trylogin",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["tslib",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"guards/GuestGuard.html":{},"interfaces/ICrud.html":{},"interfaces/IProject.html":{},"interfaces/IResponse.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"injectables/ProjectService.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Task.html":{},"injectables/TaskService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"guards/GuestGuard.html":{}}}],["undefined",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{},"injectables/StorageService.html":{}}}],["until",{"_index":1192,"title":{},"body":{"injectables/StorageService.html":{}}}],["unused",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"injectables/UserService.html":{}}}],["update",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["updated",{"_index":1417,"title":{},"body":{"components/TeamsPage.html":{}}}],["updated_at",{"_index":682,"title":{},"body":{"interfaces/IProject.html":{},"interfaces/ITeam.html":{},"interfaces/ITimestamp.html":{},"interfaces/IUser.html":{},"classes/Project.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["uri",{"_index":579,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ProjectService.html":{},"injectables/RestService.html":{},"injectables/TaskService.html":{},"injectables/TeamService.html":{},"injectables/UserService.html":{}}}],["uris",{"_index":622,"title":{},"body":{"injectables/CrudService.html":{}}}],["urltree",{"_index":650,"title":{},"body":{"guards/GuestGuard.html":{}}}],["us/docs/web/http/headers/authorization",{"_index":1158,"title":{},"body":{"injectables/RestService.html":{}}}],["useclass",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":752,"title":{},"body":{"interfaces/IToken.html":{},"interfaces/IUser.html":{},"classes/JsonWebTokenEntity.html":{},"classes/User.html":{}}}],["usefactory",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":229,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HomePage.html":{},"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"interfaces/IUser.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"classes/Task.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"classes/User.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"coverage.html":{}}}],["user.created_at",{"_index":1471,"title":{},"body":{"components/UserReadPage.html":{}}}],["user.email",{"_index":1470,"title":{},"body":{"components/UserReadPage.html":{}}}],["user.entity",{"_index":719,"title":{},"body":{"interfaces/ITask.html":{},"interfaces/ITeam.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["user.factory",{"_index":1481,"title":{},"body":{"injectables/UserService.html":{}}}],["user.factory(data.user",{"_index":744,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["user.factory(user",{"_index":747,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{}}}],["user.name",{"_index":1469,"title":{},"body":{"components/UserReadPage.html":{}}}],["user.service",{"_index":1464,"title":{},"body":{"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["user.token",{"_index":1162,"title":{},"body":{"injectables/RestService.html":{}}}],["user?.created_at",{"_index":777,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["user?.del",{"_index":780,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["user?.edit",{"_index":779,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["user?.email",{"_index":775,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["user?.id",{"_index":773,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["user?.name",{"_index":774,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{},"components/UserReadPage.html":{}}}],["user?.password",{"_index":776,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["user?.updated_at",{"_index":778,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["user_id",{"_index":742,"title":{},"body":{"interfaces/ITeam.html":{},"classes/Team.html":{},"injectables/TeamService.html":{}}}],["useremail",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["userid",{"_index":1459,"title":{},"body":{"components/UserReadPage.html":{}}}],["username",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["userobserver",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["userreadpage",{"_index":228,"title":{"components/UserReadPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"modules/ReadPageRoutingModule.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"modules/UserReadPageModule.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["userreadpagemodule",{"_index":1472,"title":{"modules/UserReadPageModule.html":{}},"body":{"modules/UserReadPageModule.html":{},"index.html":{},"modules.html":{}}}],["users",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"interfaces/ITeam.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{}}}],["users.page",{"_index":1501,"title":{},"body":{"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{}}}],["users.page.html",{"_index":1484,"title":{},"body":{"components/UsersPage.html":{}}}],["users.page.scss",{"_index":1483,"title":{},"body":{"components/UsersPage.html":{}}}],["userservice",{"_index":251,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/UserReadPage.html":{},"injectables/UserService.html":{},"components/UsersPage.html":{},"coverage.html":{},"index.html":{}}}],["userspage",{"_index":230,"title":{"components/UsersPage.html":{}},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{},"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["userspagemodule",{"_index":1495,"title":{"modules/UsersPageModule.html":{}},"body":{"modules/UsersPageModule.html":{},"index.html":{},"modules.html":{}}}],["userspageroutingmodule",{"_index":1499,"title":{"modules/UsersPageRoutingModule.html":{}},"body":{"modules/UsersPageModule.html":{},"modules/UsersPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["user|null",{"_index":722,"title":{},"body":{"interfaces/ITask.html":{},"classes/Task.html":{}}}],["uuid",{"_index":995,"title":{},"body":{"components/ProjectReadPage.html":{}}}],["uuidv4",{"_index":770,"title":{},"body":{"interfaces/IUser.html":{},"classes/User.html":{}}}],["valid",{"_index":832,"title":{},"body":{"components/LoginPage.html":{}}}],["validation",{"_index":428,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["validationerrors",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorfn",{"_index":1592,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validators",{"_index":818,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["validators.compose",{"_index":1093,"title":{},"body":{"components/RegisterPage.html":{}}}],["validators.email",{"_index":825,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["validators.minlength(3",{"_index":1094,"title":{},"body":{"components/RegisterPage.html":{}}}],["validators.required",{"_index":824,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["value",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"classes/Project.html":{},"components/ProjectReadPage.html":{},"components/RegisterPage.html":{},"injectables/RestService.html":{},"injectables/StorageService.html":{},"classes/Team.html":{},"components/TeamReadPage.html":{},"injectables/TeamService.html":{},"components/TeamsPage.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["variable",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1601,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"guards/GuestGuard.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["version",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{},"components/LoginPage.html":{},"components/PasswordInputComponent.html":{},"components/ProfilePage.html":{},"components/ProjectReadPage.html":{},"components/ProjectsPage.html":{},"components/RegisterPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["wait",{"_index":1191,"title":{},"body":{"injectables/StorageService.html":{}}}],["waitforstorage",{"_index":1176,"title":{},"body":{"injectables/StorageService.html":{}}}],["want",{"_index":1303,"title":{},"body":{"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UsersPage.html":{}}}],["weight",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ProjectReadPage.html":{}}}],["whether",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["width",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/PasswordInputComponent.html":{}}}],["window.location.reload",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["worker",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["x",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["yyyy",{"_index":1001,"title":{},"body":{"components/ProjectReadPage.html":{},"components/TeamReadPage.html":{},"components/TeamsPage.html":{},"components/UserReadPage.html":{},"components/UsersPage.html":{}}}],["zone.js",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProjectReadPageModule.html":{},"modules/ProjectsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/TeamReadPageModule.html":{},"modules/TeamsPageModule.html":{},"modules/UserReadPageModule.html":{},"modules/UsersPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                userEmail\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkServiceWorkerUpdate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pages\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(swUpdate: SwUpdate, primeConfig: PrimeNGConfig, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        swUpdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service Worker update Handler\n\n                                                        \n                                                \n                                                \n                                                        primeConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                [PrimeNG]://primefaces.org/primeng/showcase/#/setuphttps Configuration Object\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service responsible for translations\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service responsible for authentication\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkServiceWorkerUpdate\n                        \n                    \n                \n            \n            \n                \ncheckServiceWorkerUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n                    Checks if a newer version of this app is available\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:45\n                \n            \n\n\n            \n                \n                    Called when this component starts loading\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        translate\n                        \n                    \n                \n            \n            \n                \n                    \n                    translate(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:56\n                \n            \n\n\n            \n                \n                    Sets default language\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        language id ex. If the translation file is hu.json this should be 'hu'\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Service responsible for authentication\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pages\n                    \n                \n\n                \n                    \n                        getpages()\n                    \n                \n                            \n                                \n                                    Defined in src/app/app.component.ts:62\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { SwUpdate } from '@angular/service-worker'\nimport { PrimeNGConfig } from 'primeng/api'\nimport { TranslateService } from '@ngx-translate/core'\nimport { PAGES } from './shared/services/redirect.service'\nimport { AuthService } from './shared/services/auth.service'\n\n/** Root component of the application */\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: [ 'app.component.scss' ],\n})\nexport class AppComponent implements OnInit {\n  userName: string | undefined\n  userEmail: string | undefined\n\n\n  /**\n   * @param swUpdate Service Worker update Handler\n   * @param primeConfig [PrimeNG]{@link https://primefaces.org/primeng/showcase/#/setup} Configuration Object\n   * @param translateService Service responsible for translations\n   * @param authService Service responsible for authentication\n   */\n  constructor(\n    private swUpdate: SwUpdate,\n    private primeConfig: PrimeNGConfig,\n    private translateService: TranslateService,\n    public authService: AuthService,\n  ) {\n    this.checkServiceWorkerUpdate()\n    this.userName = authService?.activeUser?.name\n    this.userEmail = authService?.activeUser?.email\n  }\n\n  /** Checks if a newer version of this app is available */\n  checkServiceWorkerUpdate() {\n    this.swUpdate.available?.subscribe(() => {\n      if (confirm('A new version is available. Load it?'))\n        window.location.reload()\n    })\n  }\n\n  /** Called when this component starts loading */\n  ngOnInit() {\n    this.primeConfig.ripple = true\n    this.translate('hu')\n    this.authService.tryLogin()\n  }\n\n  /**\n   * Sets default language\n   * @param lang language id ex. If the translation file is `hu.json` this should be 'hu'\n   * @private\n   */\n  private translate(lang: string) {\n    this.translateService.setDefaultLang('en')\n    this.translateService.use(lang)\n    this.translateService.get('primeng').subscribe(res => this.primeConfig.setTranslation(res))\n  }\n\n  get pages() {\n    const result = []\n    for (const key in PAGES) {\n      if(PAGES[key].guard && PAGES[key].guard(this.authService))\n        result.push(PAGES[key])\n    }\n    return result\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ (this.authService.user$ | async)?.name ?? 'Guest' }}\n          {{ (this.authService.user$ | async)?.email ?? 'Logged out' }}\n          \n            \n              \n-->\n                 &nbsp;&nbsp;{{ p.title }}\n              \n            \n          \n        \n      \n    \n    \n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                ion-menu ion-content {\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n}\n\nion-menu.md ion-content {\n  --padding-start: 8px;\n  --padding-end: 8px;\n  --padding-top: 20px;\n  --padding-bottom: 20px;\n}\n\nion-menu.md ion-list {\n  padding: 20px 0;\n}\n\nion-menu.md ion-note {\n  margin-bottom: 30px;\n}\n\nion-menu.md ion-list-header,\nion-menu.md ion-note {\n  padding-left: 10px;\n}\n\nion-menu.md ion-list#inbox-list {\n  border-bottom: 1px solid var(--ion-color-step-150, #d7d8da);\n}\n\nion-menu.md ion-list#inbox-list ion-list-header {\n  font-size: 22px;\n  font-weight: 600;\n\n  min-height: 20px;\n}\n\nion-menu.md ion-list#labels-list ion-list-header {\n  font-size: 16px;\n\n  margin-bottom: 18px;\n\n  color: #757575;\n\n  min-height: 26px;\n}\n\nion-menu.md ion-item {\n  --padding-start: 10px;\n  --padding-end: 10px;\n  border-radius: 4px;\n}\n\nion-menu.md ion-item.selected {\n  --background: rgba(var(--ion-color-primary-rgb), 0.14);\n}\n\nion-menu.md ion-item.selected ion-icon {\n  color: var(--ion-color-primary);\n}\n\nion-menu.md ion-item ion-icon {\n  color: #616e7e;\n}\n\nion-menu.md ion-item ion-label {\n  font-weight: 500;\n}\n\nion-menu.ios ion-content {\n  --padding-bottom: 20px;\n}\n\nion-menu.ios ion-list {\n  padding: 20px 0 0 0;\n}\n\nion-menu.ios ion-note {\n  line-height: 24px;\n  margin-bottom: 20px;\n}\n\nion-menu.ios ion-item {\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --min-height: 50px;\n}\n\nion-menu.ios ion-item.selected ion-icon {\n  color: var(--ion-color-primary);\n}\n\nion-menu.ios ion-item ion-icon {\n  font-size: 24px;\n  color: #73849a;\n}\n\nion-menu.ios ion-list#labels-list ion-list-header {\n  margin-bottom: 8px;\n}\n\nion-menu.ios ion-list-header,\nion-menu.ios ion-note {\n  padding-left: 16px;\n  padding-right: 16px;\n}\n\nion-menu.ios ion-note {\n  margin-bottom: 8px;\n}\n\nion-note {\n  display: inline-block;\n  font-size: 16px;\n\n  color: var(--ion-color-medium-shade);\n}\n\nion-item.selected {\n  --color: var(--ion-color-primary);\n}\n\n.sidebar {\n  max-width: 200px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ (this.authService.user$ | async)?.name ?? \\'Guest\\' }}          {{ (this.authService.user$ | async)?.email ?? \\'Logged out\\' }}                                    -->                   {{ p.title }}                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nAppModule -->\n\nProjectService->AppModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nAppModule -->\n\nStorageService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\nTeamService\n\nTeamService\n\nAppModule -->\n\nTeamService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Root module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ProjectService\n                        \n                        \n                            StorageService\n                        \n                        \n                            TaskService\n                        \n                        \n                            TeamService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser'\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular'\nimport { AppComponent } from './app.component'\nimport { AppRoutingModule } from './app-routing.module'\nimport { ServiceWorkerModule } from '@angular/service-worker'\nimport { environment } from '../environments/environment'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader'\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http'\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core'\nimport { ToastModule } from 'primeng/toast'\nimport { ConfirmDialogModule } from 'primeng/confirmdialog'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { SharedModule } from './shared/shared.module'\nimport { StorageService } from './shared/services/storage.service'\nimport { ConfirmationService, MessageService } from 'primeng/api'\nimport { RedirectService } from './shared/services/redirect.service'\nimport { AuthInterceptor } from './http/interceptors/auth.interceptor'\nimport { IonicStorageModule } from '@ionic/storage-angular'\nimport { NgModule } from '@angular/core'\nimport { RouteReuseStrategy } from '@angular/router'\nimport { TeamService } from './pages/teams/team.service'\nimport { UserService } from './pages/users/user.service'\nimport { ProjectService } from './pages/projects/project.service'\nimport {TaskService} from \"./pages/tasks/task.service\";\n\n/**\n * Initializes a new translation file loader through http\n * @param http Angular HTTP Client singleton\n */\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json')\n}\n\n/** Root module */\n@NgModule({\n  declarations: [ AppComponent ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    IonicStorageModule.forRoot(),\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [ HttpClient ]\n      },\n      defaultLanguage: 'en'\n    }),\n    ToastModule,\n    ConfirmDialogModule\n  ],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    StorageService,\n    MessageService,\n    ConfirmationService,\n    RedirectService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useFactory: (redirect: RedirectService, storage: StorageService) => new AuthInterceptor(storage, redirect),\n      multi: true,\n      deps: [ RedirectService, StorageService ]\n    },\n    TeamService,\n    UserService,\n    ProjectService,\n    TaskService,\n  ],\n  bootstrap: [ AppComponent ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\n\n/**\n * First level routes in the application. Handles lazy load and path matching.\n * @example\n * loadChildren: () => import('./test/test.module').then( m => m.TestPageModule)\n */\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./pages/auth/auth.module').then( m => m.AuthModule)\",\n  },\n  {\n    path: 'home',\n    loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\"\n  },\n  {\n    path: 'teams',\n    loadChildren: () => \"import('./pages/teams/teams.module').then( m => m.TeamsPageModule)\"\n  },\n  {\n    path: 'users',\n    loadChildren: () => \"import('./pages/users/users.module').then( m => m.UsersPageModule)\"\n  },\n  {\n    path: 'projects',\n    loadChildren: () => \"import('./pages/projects/projects.module').then( m => m.ProjectsPageModule)\"\n  },\n]\n\n/** Handles first level routing and preloading strategies */\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/http/interceptors/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles Authorization and authentication errors\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                handle\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: StorageService, redirect: RedirectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/http/interceptors/auth.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service responsible for handling local storage\n\n                                                        \n                                                \n                                                \n                                                        redirect\n                                                  \n                                                        \n                                                                    RedirectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service responsible for handling redirects\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handle\n                        \n                    \n                \n            \n            \n                \n                    \n                    handle(next: HttpHandler, req: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http/interceptors/auth.interceptor.ts:58\n                \n            \n\n\n            \n                \n                    Request handler function\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next handler in pipe\n\n                                    \n                                \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request initiated by the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(err: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http/interceptors/auth.interceptor.ts:37\n                \n            \n\n\n            \n                \n                    Handles error responses\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HTTP Error object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http/interceptors/auth.interceptor.ts:27\n                \n            \n\n\n            \n                \n                    Called every time an HTTP request starts from the application\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request initiated by the user\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Next function in call pipe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Observable, of, throwError } from 'rxjs'\nimport { catchError } from 'rxjs/operators'\nimport { StorageService } from '../../shared/services/storage.service'\nimport { fromPromise } from 'rxjs/internal-compatibility'\nimport { RedirectService } from '../../shared/services/redirect.service'\n\n/** Handles Authorization and authentication errors */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  /**\n   * @param storage Service responsible for handling local storage\n   * @param redirect Service responsible for handling redirects\n   */\n  constructor(\n    private storage: StorageService,\n    private redirect: RedirectService,\n  ) {}\n\n  /**\n   * Called every time an HTTP request starts from the application\n   *\n   * @param req Request initiated by the user\n   * @param next Next function in call pipe\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return fromPromise(this.handle(next, req))\n  }\n\n  /**\n   * Handles error responses\n   *\n   * @param err HTTP Error object\n   * @private\n   */\n  private handleError(err: HttpErrorResponse): Observable {\n    switch (err.status) {\n      case 401:\n        this.redirect.push(window.location.href)\n        this.redirect.to('/login2')\n        break\n      case 422: //Validation Error\n      default:\n        return throwError(err)\n    }\n\n    return of(err.message)\n  }\n\n  /**\n   * Request handler function\n   *\n   * @param next Next handler in pipe\n   * @param req Request initiated by the user\n   * @private\n   */\n  private async handle(next: HttpHandler, req: HttpRequest) {\n    let token: string = null\n    if (!req.headers.get('X-AppMeta')?.split(',').includes('NO-AUTH'))\n      token = await this.storage.get('token') ?? null\n\n    const authReq = req.clone(token ? { headers: req.headers.set('Authorization', `Bearer ${token.toString()}`) } : {}) //Request object are immutable\n\n    return next.handle(authReq).pipe(catchError(x => this.handleError(x))).toPromise() //Add the error handler to the pipe\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Handles Authentication and authorization\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { AuthRoutingModule } from './auth-routing.module'\nimport { SharedModule } from '../../shared/shared.module'\nimport { IonicModule } from '@ionic/angular'\nimport { ReactiveFormsModule } from '@angular/forms'\n\n/** Handles Authentication and authorization*/\n@NgModule({\n    imports: [\n        CommonModule,\n        AuthRoutingModule,\n        SharedModule,\n        IonicModule,\n        ReactiveFormsModule\n    ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { GuestGuard } from '../../http/guards/guest.guard'\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then(m => m.LoginPageModule)\",\n    canActivate: [ GuestGuard ]\n  },\n  {\n    path: 'register',\n    loadChildren: () => \"import('./register/register.module').then( m => m.RegisterPageModule)\",\n    canActivate: [ GuestGuard ]\n  },\n  {\n    path: 'login',\n    loadChildren: () => \"import('./login/login.module').then( m => m.LoginPageModule)\"\n  },\n  {\n    path: 'profile',\n    loadChildren: () => \"import('./profile/profile.module').then( m => m.ProfilePageModule)\"\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for Authorization and authentication\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeUser\n                            \n                            \n                                    Private\n                                permissions\n                            \n                            \n                                    Private\n                                tokenObject\n                            \n                            \n                                    Public\n                                user$\n                            \n                            \n                                    Private\n                                userObserver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                can\n                            \n                            \n                                    Async\n                                loadProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Private\n                                profile\n                            \n                            \n                                    Async\n                                tryLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                        RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                RestService Responsible for HTTP calls\n\n                                                        \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                StorageService Responsible for local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        can\n                        \n                    \n                \n            \n            \n                \ncan(ability: string, model: \"Task\" | \"Project\" | \"User\" | \"Team\", modelId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            \"Task\" | \"Project\" | \"User\" | \"Team\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    modelId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string, rememberMe: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:48\n                \n            \n\n\n            \n                \n                    Logs in the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The email of the user\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The password of the user\n\n                                    \n                                \n                                \n                                    rememberMe\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the user should be remembered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:96\n                \n            \n\n\n            \n                \n                    Get currently logged in user data\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        tryLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    tryLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tokenObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IToken\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userObserver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subscriber\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { RestService } from './rest.service'\nimport { StorageService } from './storage.service'\nimport { IToken } from '../../classes/JsonWebToken.entity'\nimport { IUser } from '../../classes/User.entity'\nimport { Observable, Subscriber } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { IResponse } from '../../classes/IResponse.generic'\nimport { fromPromise } from 'rxjs/internal-compatibility'\n\n/** Service responsible for Authorization and authentication */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // section vars\n  public user$: Observable;\n  public activeUser: IUser | null = null\n  private userObserver: Subscriber;\n  private tokenObject: IToken;\n  private permissions: { ability: string, model: 'Task'|'Project'|'User'|'Team', modelId }[] = []\n\n  // section init\n  /**\n   * Constructor\n   * @param rest RestService Responsible for HTTP calls\n   * @param storage StorageService Responsible for local storage\n   */\n  constructor(\n    private rest: RestService,\n    private storage: StorageService\n  ) {\n    this.user$ = new Observable(observer => {\n      this.userObserver = observer\n      observer.next(null)\n    })\n  }\n\n  // section logic\n  /**\n   * Logs in the user\n   * @param email The email of the user\n   * @param password The password of the user\n   * @param rememberMe Whether the user should be remembered\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async login(email: string, password: string, rememberMe: boolean) {\n    const res = await this.rest.post('login', { email, password }, {}, { 'X-AppMeta': 'NO-AUTH' }).toPromise()\n    this.tokenObject = res\n    await this.storage.set('token', res.token)\n    await this.storage.set('tokenObject', res)\n    await this.loadProfile()\n    return res\n  }\n\n  async tryLogin() {\n    const token = await this.storage.get('token')\n    if (token) {\n      this.tokenObject = await this.storage.get('tokenObject')\n      await this.loadProfile()\n    }\n  }\n\n  async loadProfile() {\n    await this.storage.waitForStorage()\n    if(this.tokenObject) console.log('tokenObject', this.tokenObject)\n    let token = this.tokenObject?.token ?? await this.storage.get('token')\n    if (token) {\n      this.user$ = this.profile().pipe(\n        map(res => {\n          this.activeUser = res.data\n          this.userObserver.next(this.activeUser)\n          return res.data\n        })\n      )\n    }\n  }\n\n  can(ability: string, model: 'Task'|'Project'|'User'|'Team', modelId) {\n    if(!this.activeUser) return fromPromise(Promise.resolve(false))\n    if(this.permissions.includes({ ability, model, modelId })) return fromPromise(Promise.resolve(true))\n\n    return this.rest.post>('can', {\n      email: this.activeUser.email,\n      ability,\n      model,\n      modelId\n    }).pipe(map(res => {\n      this.permissions.push({ ability, model, modelId })\n      return res.data\n    }))\n  }\n\n  /** Get currently logged in user data */\n  private profile() {\n    return this.rest.get>('profile')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/CrudService.generic.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                browse\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                    Protected\n                                getAddBody\n                            \n                            \n                                    Protected\n                                getAddUri\n                            \n                            \n                                    Abstract\n                                getBody\n                            \n                            \n                                    Protected\n                                getBrowseUri\n                            \n                            \n                                    Protected\n                                getDeleteUri\n                            \n                            \n                                    Protected\n                                getEditBody\n                            \n                            \n                                    Protected\n                                getEditUri\n                            \n                            \n                                    Protected\n                                getReadUri\n                            \n                            \n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    idName\n                                \n                                \n                                    uri\n                                \n                                \n                                    factory\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/CrudService.generic.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                        RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browse\n                        \n                    \n                \n            \n            \n                \nbrowse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPost\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddUri()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBrowseUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBrowseUri()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getDeleteUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeleteUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPut\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getReadUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReadUri(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/CrudService.generic.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        idName\n                    \n                \n\n                \n                    \n                        getidName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/CrudService.generic.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        uri\n                    \n                \n\n                \n                    \n                        geturi()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/CrudService.generic.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        factory\n                    \n                \n\n                \n                    \n                        getfactory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/CrudService.generic.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { RestService } from '../shared/services/rest.service'\nimport { Observable } from 'rxjs'\nimport { IResponse } from './IResponse.generic'\nimport { map } from 'rxjs/operators'\nimport { Injectable } from '@angular/core'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class CrudService {\n  // section init\n  constructor(\n    protected readonly rest: RestService\n  ) { }\n\n  // section base props\n  protected get idName(): string {\n    return 'id'\n  }\n  abstract get uri(): string;\n  abstract get factory(): (data: TInterface|any) => TClass;\n  abstract getBody(entity: TClass): TPost&TPut;\n\n  // section uris\n  protected getBrowseUri(): string {\n    return this.uri\n  }\n  protected getReadUri(id: string): string {\n    return `${this.uri}/${id}`\n  }\n  protected getEditUri(tClass: TClass): string {\n    return `${this.uri}/${tClass[this.idName]}`\n  }\n  protected getAddUri(): string {\n    return this.uri\n  }\n  protected getDeleteUri(tClass: TClass): string {\n    return `${this.uri}/${tClass}`\n  }\n\n  // section bodies\n  protected getAddBody(entity: TClass): TPost {\n    return this.getBody(entity)\n  }\n  protected getEditBody(entity: TClass): TPut {\n    return this.getBody(entity)\n  }\n\n  // section logic\n  browse(): Observable {\n    return this.rest.get>(this.getBrowseUri()).pipe(map(res => res.data.map(this.factory)))\n  }\n\n  read(id: string) {\n    return this.rest.get>(this.getReadUri(id)).pipe(map(res => this.factory(res.data)))\n  }\n\n  edit(tClass: TClass) {\n    return this.rest.put(this.getEditUri(tClass), this.getEditBody(tClass))\n  }\n\n  add(tClass: TClass) {\n    return this.rest.post(this.getAddUri(), this.getAddBody(tClass))\n  }\n\n  delete(tClass: TClass) {\n    return this.rest.delete(this.getDeleteUri(tClass[this.idName]))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GuestGuard.html":{"url":"guards/GuestGuard.html","title":"guard - GuestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    GuestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/http/guards/guest.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/http/guards/guest.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/http/guards/guest.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { AuthService } from '../../shared/services/auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestGuard implements CanActivate {\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  canActivate(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _route: ActivatedRouteSnapshot,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return !this.authService.activeUser\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: [ './home.page.scss' ],\n})\nexport class HomePage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    return\n  }\n\n}\n\n    \n\n    \n        \n  \n    home\n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./home.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      home  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { HomePageRoutingModule } from './home-routing.module'\n\nimport { HomePage } from './home.page'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [ HomePage ]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { HomePage } from './home.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrud.html":{"url":"interfaces/ICrud.html","title":"interface - ICrud","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICrud\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/ICrud.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            del\n                                        \n                                \n                                \n                                        \n                                            edit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        del\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        del:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        edit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        edit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICrud {\n  edit: boolean\n  del: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProject.html":{"url":"interfaces/IProject.html","title":"interface - IProject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Project.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ITimestamp\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            shortname\n                                        \n                                \n                                \n                                        \n                                            tasks\n                                        \n                                \n                                \n                                        \n                                            team\n                                        \n                                \n                                \n                                        \n                                            team_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shortname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team:         Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITimestamp } from './ITimestamp.interface'\nimport { ICrud } from './ICrud.interface'\nimport {Team} from \"./Team.entity\";\nimport {Task} from \"./Task.entity\";\n\nexport interface IProject extends ITimestamp, ICrud{\n  id: string\n  name: string\n  description: string\n  shortname: string\n  team_id: string\n  team: Team\n  tasks: Task[]\n}\n\nexport class Project implements IProject {\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public shortname: string,\n    public team_id: string,\n    public team: Team,\n    public tasks: Task[],\n    public created_at: string,\n    public updated_at: string,\n    public edit: boolean = false,\n    public del: boolean = false\n  ) {}\n\n  public static factory(data: IProject|any) {\n    return new Project(\n      data.id ?? '',\n      data.name ?? '',\n      data.description ?? '',\n      data.shortname ?? '',\n      data.team_id ?? '',\n      data.team ?? Team.factory({}),\n      data.tasks ?? [],\n      data.created_at ?? (new Date()).toISOString(),\n      data.updated_at ?? (new Date()).toISOString(),\n      data.edit ?? false,\n      data.del ?? false\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResponse.html":{"url":"interfaces/IResponse.html","title":"interface - IResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/IResponse.generic.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IResponse {\n    data: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITask.html":{"url":"interfaces/ITask.html","title":"interface - ITask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assignee\n                                        \n                                \n                                \n                                        \n                                            assignee_id\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parent\n                                        \n                                \n                                \n                                        \n                                            parent_id\n                                        \n                                \n                                \n                                        \n                                            project\n                                        \n                                \n                                \n                                        \n                                            project_id\n                                        \n                                \n                                \n                                        \n                                            reporter\n                                        \n                                \n                                \n                                        \n                                            reporter_id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            subtasks\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assignee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assignee:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignee_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assignee_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         Task | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project:         Project\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        project_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reporter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reporter:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reporter_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reporter_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"0\" | \"1\" | \"2\" | \"3\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"0\" | \"1\" | \"2\" | \"3\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtasks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtasks:         Task[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Project} from \"./Project.entity\";\nimport {User} from \"./User.entity\";\n\nexport interface ITask {\n  id: string\n  name: string\n  description: string\n  parent_id: string\n  project_id: string\n  reporter_id: string\n  assignee_id: string\n  status: 0|1|2|3\n  parent: Task|null\n  subtasks: Task[]\n  project: Project\n  assignee: User|null\n  reporter: User|null\n  count: number\n}\n\nexport class Task implements ITask{\n  get shortName() {\n    return `${this.project?.shortname ?? 'GLOBAL'}-${this.count}`\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public parent_id: string|null,\n    public project_id: string,\n    public reporter_id: string|null,\n    public assignee_id: string|null,\n    public status: 0|1|2|3,\n    public parent: Task|null,\n    public subtasks: Task[],\n    public project: Project,\n    public assignee: User|null,\n    public reporter: User|null,\n    public count: number\n  ) {}\n\n  static factory(data: ITask|any) {\n    return new Task(\n      data.id ?? '',\n      data.name ?? '',\n      data.description ?? '',\n      data.parent_id ?? null,\n      data.project_id ?? '',\n      data.reporter_id ?? null,\n      data.assignee_id ?? null,\n      data.status ?? 0,\n      data.parent ?? null,\n      data.subtasks ?? [],\n      data.project ?? Project.factory({}),\n      data.assignee ?? null,\n      data.reporter ?? null,\n      data.count ?? 1\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeam.html":{"url":"interfaces/ITeam.html","title":"interface - ITeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Team.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ITimestamp\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            projects\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projects:         IProject[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProject[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:         IUser[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IUser[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IUser, User } from './User.entity'\nimport { ITimestamp } from './ITimestamp.interface'\nimport { ICrud } from './ICrud.interface'\nimport { IProject, Project } from './Project.entity'\n\nexport interface ITeam extends ITimestamp, ICrud{\n  id: string\n  name: string\n  user: IUser\n  user_id: string\n  users: IUser[]\n  projects: IProject[]\n}\n\nexport class Team implements ITeam {\n  constructor(\n    public id: string,\n    public name: string,\n    public user: User,\n    public user_id: string,\n    public users: User[],\n    public created_at: string,\n    public updated_at: string,\n    public projects: IProject[],\n    public edit: boolean = false,\n    public del: boolean = false\n  ) {}\n\n  static factory(data: ITeam|any) {\n    return new Team(\n      data.id ?? '',\n      data.name ?? '',\n      User.factory(data.user) ?? null,\n      data.user_id ?? '',\n      data.users?.map(user => User.factory(user)) ?? [],\n      data.created_at ?? (new Date()).toISOString(),\n      data.updated_at ?? (new Date()).toISOString(),\n      data.projects?.map(project => Project.factory(project)) ?? [],\n      data.edit ?? false,\n      data.del ?? false\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITimestamp.html":{"url":"interfaces/ITimestamp.html","title":"interface - ITimestamp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITimestamp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/ITimestamp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITimestamp {\n  created_at: string\n  updated_at: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IToken.html":{"url":"interfaces/IToken.html","title":"interface - IToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/JsonWebToken.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Used as a type when making a request to the API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:     \"bearer\" | \"http\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"bearer\" | \"http\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import jwtDecode from 'jwt-decode'\n\n/** Used as a type when making a request to the API */\nexport interface IToken {\n    token: string;\n    token_type: 'bearer'|'http';\n    expires_in: number;\n}\n\n/**\n * A class that handles the JWT token\n */\nexport class JsonWebTokenEntity implements IToken{\n\n  constructor(\n    public readonly token: string,\n    public readonly token_type: 'bearer'|'http',\n    public readonly expires_in: number\n  ) {}\n\n  /** Decodes the token and returns the raw token object */\n  getDecodedAccessToken(): any {\n    try{\n      return jwtDecode(this.token)\n    }\n    catch(Error){\n      return null\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/User.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Used as a type when making a request to the API\n\n            \n\n            \n                Extends\n            \n            \n                        ITimestamp\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ITimestamp } from './ITimestamp.interface'\nimport { ICrud } from './ICrud.interface'\n\n/** Used as a type when making a request to the API */\nexport interface IUser extends ITimestamp, ICrud{\n  id: string\n  name: string\n  email: string\n  password: string\n}\n\n/** Represents a user object  */\nexport class User implements IUser{\n\n  /**\n   * @param id The UUIDv4 of the user\n   * @param name The name of the user\n   * @param email The email of the user\n   * @param password The password of the user\n   * @param created_at\n   * @param updated_at\n   * @param edit\n   * @param del\n   */\n  constructor(\n    public id: string,\n    public name: string,\n    public email: string,\n    public password: string,\n    public created_at: string,\n    public updated_at: string,\n    public edit: boolean,\n    public del: boolean\n  ) {}\n\n\n  static factory(user: IUser|any) {\n    return new User(\n      user?.id ?? '',\n      user?.name ?? '',\n      user?.email ?? '',\n      user?.password ?? '',\n      user?.created_at ?? (new Date()).toISOString(),\n      user?.updated_at ?? (new Date()).toISOString(),\n      user?.edit ?? false,\n      user?.del ?? false\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JsonWebTokenEntity.html":{"url":"classes/JsonWebTokenEntity.html","title":"class - JsonWebTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JsonWebTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/JsonWebToken.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that handles the JWT token\n\n            \n\n\n            \n                Implements\n            \n            \n                            IToken\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                expires_in\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                token_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDecodedAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(token: string, token_type: \"bearer\" | \"http\", expires_in: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/JsonWebToken.entity.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token_type\n                                                  \n                                                        \n                                                                    \"bearer\" | \"http\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        expires_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/JsonWebToken.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/JsonWebToken.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"bearer\" | \"http\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/JsonWebToken.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDecodedAccessToken\n                        \n                    \n                \n            \n            \n                \ngetDecodedAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/JsonWebToken.entity.ts:22\n                \n            \n\n\n            \n                \n                    Decodes the token and returns the raw token object\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import jwtDecode from 'jwt-decode'\n\n/** Used as a type when making a request to the API */\nexport interface IToken {\n    token: string;\n    token_type: 'bearer'|'http';\n    expires_in: number;\n}\n\n/**\n * A class that handles the JWT token\n */\nexport class JsonWebTokenEntity implements IToken{\n\n  constructor(\n    public readonly token: string,\n    public readonly token_type: 'bearer'|'http',\n    public readonly expires_in: number\n  ) {}\n\n  /** Decodes the token and returns the raw token object */\n  getDecodedAccessToken(): any {\n    try{\n      return jwtDecode(this.token)\n    }\n    catch(Error){\n      return null\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/login/login.page.ts\n\n\n\n    \n        Description\n    \n    \n        Login page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                isSubmitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    errorControl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, toast: MessageService, redirect: RedirectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/login/login.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular form builder instance\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Responsible for authentication\n\n                                                        \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service Responsible for toast messages\n\n                                                        \n                                                \n                                                \n                                                        redirect\n                                                  \n                                                        \n                                                                    RedirectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service Responsible for in-app redirects\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/login/login.page.ts:38\n                \n            \n\n\n            \n                \n                    Runs when the page is initialized\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/login/login.page.ts:52\n                \n            \n\n\n            \n                \n                    Runs when the form is submitted\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Form submit event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.page.ts:15\n                        \n                    \n\n            \n                \n                    Login form\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/login/login.page.ts:17\n                        \n                    \n\n            \n                \n                    Indicates if the form is submitted\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        errorControl\n                    \n                \n\n                \n                    \n                        geterrorControl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/auth/login/login.page.ts:33\n                                \n                            \n                    \n                        \n                                returns the form group controls\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { AuthService } from '../../../shared/services/auth.service'\nimport { MessageService } from 'primeng/api'\nimport { HOME, RedirectService } from '../../../shared/services/redirect.service'\n\n/** Login page */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: [ './login.page.scss' ],\n})\nexport class LoginPage implements OnInit {\n  /** Login form */\n  formGroup: FormGroup\n  /** Indicates if the form is submitted */\n  isSubmitted = false\n\n  /**\n   * @param {FormBuilder} formBuilder Angular form builder instance\n   * @param {AuthService} authService Responsible for authentication\n   * @param {MessageService} toast Service Responsible for toast messages\n   * @param {RedirectService} redirect Service Responsible for in-app redirects\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private toast: MessageService,\n    private redirect: RedirectService\n  ) {}\n\n  /** returns the form group controls */\n  get errorControl() {\n    return this.formGroup.controls\n  }\n\n  /** Runs when the page is initialized */\n  ngOnInit() {\n    console.log('LoginPage::ngOnInit')\n    /** Initialize the form with validators */\n    this.formGroup = this.formBuilder.group({\n      email: [ '', [ Validators.required, Validators.email ] ],\n      password: [ '', [ Validators.required ] ],\n      rememberMe: [ false, [ Validators.required ] ],\n    })\n  }\n\n  /**\n   * Runs when the form is submitted\n   * @param event Form submit event\n   */\n  submitForm(event: Event) {\n    event.preventDefault() // Prevent default form submit\n    this.isSubmitted = true\n    if (!this.formGroup.valid) // If form is invalid we do not proceed\n      return false\n\n    /** If form is valid we proceed to login2 */\n    this.authService.login(this.formGroup.value.email, this.formGroup.value.password, this.formGroup.value.rememberMe).then(res => {\n      console.log('logged in', res)\n      this.toast.add({ summary: 'Log in successful', severity: 'success' }) // Show success message\n      this.redirect.intendedOr(HOME, false) // Redirect to home\n    }).catch(err => {\n      console.error('Login error: ', JSON.stringify(err, null, 2))\n      this.toast.add({ summary: err.status === 403 ? 'Unknown credentials' : 'Server error. Try again later...', severity: 'error' }) // Show error message\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    Login\n  \n\n\n\n  \n    \n      \n      \n      \n      \n        \n          \n            \n              \n              Please login with your email and password.\n              Don't have an account? Register here!\n              \n                \n                  \n                    \n                      Email\n                      \n                      \n                    \n                    \n                    \n                      Email is not in valid format\n                    \n                  \n                  \n                    \n                      Password\n                      \n                        \n                      \n                    \n                    \n                      Password is required\n                    \n                  \n                  \n                    \n                      Remember me\n                      \n                    \n                  \n                  \n                    \n                  \n                \n              \n            \n          \n        \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                                                                                          Please login with your email and password.              Don\\'t have an account? Register here!                                                                                          Email                                                                                                                              Email is not in valid format                                                                                                  Password                                                                                                                                  Password is required                                                                                                  Remember me                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { LoginPageRoutingModule } from './login-routing.module'\n\nimport { LoginPage } from './login.page'\nimport { SharedModule } from '../../../shared/shared.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [ LoginPage ]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { LoginPage } from './login.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordInputComponent.html":{"url":"components/PasswordInputComponent.html","title":"component - PasswordInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PasswordInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/password-input/password-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-password-input\n            \n\n            \n                styleUrls\n                ./password-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                showPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleShow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/password-input/password-input.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShow\n                        \n                    \n                \n            \n            \n                \ntoggleShow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/password-input/password-input.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IonInput\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(IonInput)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/password-input/password-input.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/password-input/password-input.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ContentChild } from '@angular/core'\nimport { IonInput } from '@ionic/angular'\n\n@Component({\n  selector: 'app-password-input',\n  templateUrl: './password-input.component.html',\n  styleUrls: [ './password-input.component.scss' ],\n})\nexport class PasswordInputComponent {\n  showPassword = false;\n  @ContentChild(IonInput) input: IonInput;\n\n  constructor() {}\n\n  toggleShow() {\n    this.showPassword = !this.showPassword\n    this.input.type = this.showPassword ? 'text' : 'password'\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n\n\n    \n\n    \n                \n                    ./password-input.component.scss\n                \n                :host {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  .type-toggle {\n    padding-inline-start: 0.5rem;\n    .show-option,\n    .hide-option {\n      max-width: 20px;\n      font-size: 1.2rem;\n      display: block;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PasswordInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilePage.html":{"url":"components/ProfilePage.html","title":"component - ProfilePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/profile/profile.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, redirect: RedirectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/profile/profile.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redirect\n                                                  \n                                                        \n                                                                    RedirectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/profile/profile.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { AuthService } from 'src/app/shared/services/auth.service'\nimport { PAGES, RedirectService } from '../../../shared/services/redirect.service'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: [ './profile.page.scss' ],\n})\nexport class ProfilePage implements OnInit {\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly redirect: RedirectService\n  ) { }\n\n  ngOnInit() {\n    this.redirect.to(`${PAGES.users.url}/${this.authService.activeUser?.id}`)\n  }\n\n}\n\n    \n\n    \n        \n  \n    profile\n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./profile.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      profile  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { ProfilePageRoutingModule } from './profile-routing.module'\n\nimport { ProfilePage } from './profile.page'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ ProfilePage ]\n})\nexport class ProfilePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { ProfilePage } from './profile.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Project.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IProject\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created_at\n                            \n                            \n                                    Public\n                                del\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                edit\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                shortname\n                            \n                            \n                                    Public\n                                tasks\n                            \n                            \n                                    Public\n                                team\n                            \n                            \n                                    Public\n                                team_id\n                            \n                            \n                                    Public\n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                factory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, description: string, shortname: string, team_id: string, team: Team, tasks: Task[], created_at: string, updated_at: string, edit: boolean, del: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/Project.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shortname\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                        Team\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasks\n                                                  \n                                                        \n                                                                        Task[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        created_at\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updated_at\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edit\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        del\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        del\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        edit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        shortname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        team_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Project.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        factory\n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: IProject | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/Project.entity.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IProject | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Project\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITimestamp } from './ITimestamp.interface'\nimport { ICrud } from './ICrud.interface'\nimport {Team} from \"./Team.entity\";\nimport {Task} from \"./Task.entity\";\n\nexport interface IProject extends ITimestamp, ICrud{\n  id: string\n  name: string\n  description: string\n  shortname: string\n  team_id: string\n  team: Team\n  tasks: Task[]\n}\n\nexport class Project implements IProject {\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public shortname: string,\n    public team_id: string,\n    public team: Team,\n    public tasks: Task[],\n    public created_at: string,\n    public updated_at: string,\n    public edit: boolean = false,\n    public del: boolean = false\n  ) {}\n\n  public static factory(data: IProject|any) {\n    return new Project(\n      data.id ?? '',\n      data.name ?? '',\n      data.description ?? '',\n      data.shortname ?? '',\n      data.team_id ?? '',\n      data.team ?? Team.factory({}),\n      data.tasks ?? [],\n      data.created_at ?? (new Date()).toISOString(),\n      data.updated_at ?? (new Date()).toISOString(),\n      data.edit ?? false,\n      data.del ?? false\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectReadPage.html":{"url":"components/ProjectReadPage.html","title":"component - ProjectReadPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectReadPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/projects/project-read/project-read.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-read\n            \n\n            \n                styleUrls\n                ./project-read.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-read.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogOpen\n                            \n                            \n                                draggedTask\n                            \n                            \n                                project\n                            \n                            \n                                    Private\n                                project$\n                            \n                            \n                                projectId\n                            \n                            \n                                    Private\n                                projectId$\n                            \n                            \n                                submitted\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragStart\n                            \n                            \n                                drop\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddTaskDialog\n                            \n                            \n                                saveTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, taskService: TaskService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskService\n                                                  \n                                                        \n                                                                        TaskService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dragEnd\n                        \n                    \n                \n            \n            \n                \ndragEnd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragStart\n                        \n                    \n                \n            \n            \n                \ndragStart(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(status: \"0\" | \"1\" | \"2\" | \"3\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                            \"0\" | \"1\" | \"2\" | \"3\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddTaskDialog\n                        \n                    \n                \n            \n            \n                \nopenAddTaskDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTask\n                        \n                    \n                \n            \n            \n                \nsaveTask()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/project-read/project-read.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dialogOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        draggedTask\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        projectId$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-read/project-read.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core'\nimport {Project} from \"../../../classes/Project.entity\";\nimport {ProjectService} from \"../project.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {Task} from 'src/app/classes/Task.entity';\nimport {TaskService} from \"../../tasks/task.service\";\n\n@Component({\n  selector: 'app-project-read',\n  templateUrl: './project-read.page.html',\n  styleUrls: [ './project-read.page.scss' ],\n})\nexport class ProjectReadPage implements OnInit, OnDestroy {\n  private projectId$: Subscription\n  private project$: Subscription\n\n  projectId: string\n  project: Project\n  task: Task\n  dialogOpen = false\n  submitted = false\n  draggedTask: Task;\n\n  constructor(\n    private readonly projectService: ProjectService,\n    private readonly taskService: TaskService,\n    private readonly route: ActivatedRoute,\n  ) {\n    this.projectId$ = this.route.params.subscribe(params => this.projectId = params.id);\n  }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init(){\n    this.project$ = this.projectService.read(this.projectId)\n      .subscribe(project => {\n        this.project = project;\n      });\n    this.task = Task.factory({projectId: this.projectId})\n  }\n\n  ngOnDestroy() {\n    this.projectId$.unsubscribe();\n    this.project$.unsubscribe();\n  }\n\n  openAddTaskDialog() {\n    this.dialogOpen = true\n  }\n\n  hideDialog() {\n    this.dialogOpen = false\n    this.submitted = false\n  }\n\n  saveTask() {\n    if(this.task.name) {\n      if (this.task.id) {\n        this.taskService.edit(this.task).subscribe(() => this.init())\n      } else {\n        this.task.project_id = this.projectId\n        this.taskService.add(this.task).subscribe(() => this.init())\n      }\n    }\n  }\n\n  dragStart(task: Task) {\n    this.draggedTask = task\n  }\n\n  dragEnd() {\n    this.draggedTask = null;\n  }\n\n  drop(status: 0|1|2|3) {\n    this.draggedTask.status = status\n    this.taskService.edit(this.draggedTask).subscribe(() => this.init())\n  }\n}\n\n    \n\n    \n        \n  \n    Details\n  \n\n\n\n  \n  \n    \n      \n        {{ project.name }}\n      \n    \n    \n      \n        \n          UUID: {{ project.id }}\n        \n        \n          Name: {{ project.name }} ({{project.shortname}})\n        \n        \n          Created: {{ project.created_at | date: 'yyyy-MM-dd hh:mm' }}\n        \n        \n          Description: {{ project.description }}\n        \n        \n          Team: {{ project.team.name }}\n        \n      \n    \n  \n\n  \n  \n    \n      \n        Tasks\n      \n    \n    \n      \n        \n        \n      \n      \n        \n        \n          TODO\n          \n            \n              \n                \n                  \n                    {{ task.name }}\n                  \n                \n                \n                  \n                    \n                      UUID: {{ task.id }}\n                    \n                    \n                      Name: {{ task.name }}\n                    \n                    \n                      Created: {{ task.created_at | date: 'yyyy-MM-dd hh:mm' }}\n                    \n                    \n                      Description: {{ task.description }}\n                    \n                    \n                      Status: {{ task.status }}\n                    \n                    \n                      Assigned To: {{ task.assignee?.name }}\n                    \n                    \n                      Report To: {{ task.reporter?.name }}\n                    \n                  \n                \n              \n              \n            \n          \n        \n        \n        \n          IN PROGRESS\n          \n            \n              \n                \n                  \n                    {{ task.name }}\n                  \n                \n                \n                  \n                    \n                      UUID: {{ task.id }}\n                    \n                    \n                      Name: {{ task.name }}\n                    \n                    \n                      Created: {{ task.created_at | date: 'yyyy-MM-dd hh:mm' }}\n                    \n                    \n                      Description: {{ task.description }}\n                    \n                    \n                      Status: {{ task.status }}\n                    \n                    \n                      Assigned To: {{ task.assignee?.name }}\n                    \n                    \n                      Report To: {{ task.reporter?.name }}\n                    \n                  \n                \n              \n              \n            \n          \n        \n        \n        \n          REVIEW\n          \n            \n              \n                \n                  \n                    {{ task.name }}\n                  \n                \n                \n                  \n                    \n                      UUID: {{ task.id }}\n                    \n                    \n                      Name: {{ task.name }}\n                    \n                    \n                      Created: {{ task.created_at | date: 'yyyy-MM-dd hh:mm' }}\n                    \n                    \n                      Description: {{ task.description }}\n                    \n                    \n                      Status: {{ task.status }}\n                    \n                    \n                      Assigned To: {{ task.assignee?.name }}\n                    \n                    \n                      Report To: {{ task.reporter?.name }}\n                    \n                  \n                \n              \n              \n            \n          \n        \n        \n        \n          DONE\n          \n            \n              \n                \n                  \n                    {{ task.name }}\n                  \n                \n                \n                  \n                    \n                      UUID: {{ task.id }}\n                    \n                    \n                      Name: {{ task.name }}\n                    \n                    \n                      Created: {{ task.created_at | date: 'yyyy-MM-dd hh:mm' }}\n                    \n                    \n                      Description: {{ task.description }}\n                    \n                    \n                      Status: {{ task.status }}\n                    \n                    \n                      Assigned To: {{ task.assignee?.name }}\n                    \n                    \n                      Report To: {{ task.reporter?.name }}\n                    \n                  \n                \n              \n              \n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        Name\n        \n        Name is required.\n      \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-read.page.scss\n                \n                .drag-column {\n  border: var(--ion-color-primary-shade) solid 1px;\n}\n\n.col-head {\n  background-color: var(--ion-color-primary-shade);\n  color: var(--ion-color-primary-contrast);\n  font-weight: bold;\n  padding: 0.5rem;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Details                        {{ project.name }}                                      UUID: {{ project.id }}                          Name: {{ project.name }} ({{project.shortname}})                          Created: {{ project.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                          Description: {{ project.description }}                          Team: {{ project.team.name }}                                          Tasks                                                                          TODO                                                                                          {{ task.name }}                                                                                                              UUID: {{ task.id }}                                                              Name: {{ task.name }}                                                              Created: {{ task.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                                                              Description: {{ task.description }}                                                              Status: {{ task.status }}                                                              Assigned To: {{ task.assignee?.name }}                                                              Report To: {{ task.reporter?.name }}                                                                                                                                          IN PROGRESS                                                                                          {{ task.name }}                                                                                                              UUID: {{ task.id }}                                                              Name: {{ task.name }}                                                              Created: {{ task.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                                                              Description: {{ task.description }}                                                              Status: {{ task.status }}                                                              Assigned To: {{ task.assignee?.name }}                                                              Report To: {{ task.reporter?.name }}                                                                                                                                          REVIEW                                                                                          {{ task.name }}                                                                                                              UUID: {{ task.id }}                                                              Name: {{ task.name }}                                                              Created: {{ task.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                                                              Description: {{ task.description }}                                                              Status: {{ task.status }}                                                              Assigned To: {{ task.assignee?.name }}                                                              Report To: {{ task.reporter?.name }}                                                                                                                                          DONE                                                                                          {{ task.name }}                                                                                                              UUID: {{ task.id }}                                                              Name: {{ task.name }}                                                              Created: {{ task.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                                                              Description: {{ task.description }}                                                              Status: {{ task.status }}                                                              Assigned To: {{ task.assignee?.name }}                                                              Report To: {{ task.reporter?.name }}                                                                                                                                                  Name                Name is required.                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectReadPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectReadPageModule.html":{"url":"modules/ProjectReadPageModule.html","title":"module - ProjectReadPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectReadPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProjectReadPageModule\n\n\n\ncluster_ProjectReadPageModule_declarations\n\n\n\ncluster_ProjectReadPageModule_imports\n\n\n\n\nProjectReadPage\n\nProjectReadPage\n\n\n\nProjectReadPageModule\n\nProjectReadPageModule\n\nProjectReadPageModule -->\n\nProjectReadPage->ProjectReadPageModule\n\n\n\n\n\nProjectReadPageRoutingModule\n\nProjectReadPageRoutingModule\n\nProjectReadPageModule -->\n\nProjectReadPageRoutingModule->ProjectReadPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/projects/project-read/project-read.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProjectReadPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProjectReadPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { ProjectReadPageRoutingModule } from './project-read-routing.module'\n\nimport { ProjectReadPage } from './project-read.page'\nimport {CardModule} from \"primeng/card\";\nimport {DragDropModule} from 'primeng/dragdrop';\nimport {ButtonModule} from \"primeng/button\";\nimport {DialogModule} from \"primeng/dialog\";\nimport {InputTextModule} from \"primeng/inputtext\";\nimport {DividerModule} from \"primeng/divider\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProjectReadPageRoutingModule,\n    CardModule,\n    DragDropModule,\n    ButtonModule,\n    DialogModule,\n    InputTextModule,\n    DividerModule\n  ],\n  declarations: [ ProjectReadPage ]\n})\nexport class ProjectReadPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectReadPageRoutingModule.html":{"url":"modules/ProjectReadPageRoutingModule.html","title":"module - ProjectReadPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectReadPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/projects/project-read/project-read-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { ProjectReadPage } from './project-read.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectReadPage\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class ProjectReadPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/projects/project.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CrudService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBody\n                            \n                            \n                                add\n                            \n                            \n                                browse\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                    Protected\n                                getAddBody\n                            \n                            \n                                    Protected\n                                getAddUri\n                            \n                            \n                                    Protected\n                                getBrowseUri\n                            \n                            \n                                    Protected\n                                getDeleteUri\n                            \n                            \n                                    Protected\n                                getEditBody\n                            \n                            \n                                    Protected\n                                getEditUri\n                            \n                            \n                                    Protected\n                                getReadUri\n                            \n                            \n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    factory\n                                \n                                \n                                    uri\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody(entity: Project)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browse\n                        \n                    \n                \n            \n            \n                \nbrowse()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPost\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBrowseUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBrowseUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getDeleteUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeleteUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPut\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getReadUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReadUri(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        factory\n                    \n                \n\n                \n                    \n                        getfactory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/projects/project.service.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        uri\n                    \n                \n\n                \n                    \n                        geturi()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/projects/project.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { CrudService } from '../../classes/CrudService.generic'\nimport { IProject, Project } from '../../classes/Project.entity'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService extends CrudService{\n  get factory() {\n    return Project.factory\n  }\n\n  getBody(entity: Project): any {\n    return {\n      name: entity.name,\n      shortname: entity.shortname,\n      team_id: entity.team_id\n    }\n  }\n\n  get uri() {\n    return 'projects'\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsPage.html":{"url":"components/ProjectsPage.html","title":"component - ProjectsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/projects/projects.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n            \n                styleUrls\n                ./projects.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./projects.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/projects/projects.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/projects/projects.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.page.html',\n  styleUrls: [ './projects.page.scss' ],\n})\nexport class ProjectsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    projects\n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./projects.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      projects  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsPageModule.html":{"url":"modules/ProjectsPageModule.html","title":"module - ProjectsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProjectsPageModule\n\n\n\ncluster_ProjectsPageModule_imports\n\n\n\ncluster_ProjectsPageModule_declarations\n\n\n\n\nProjectsPage\n\nProjectsPage\n\n\n\nProjectsPageModule\n\nProjectsPageModule\n\nProjectsPageModule -->\n\nProjectsPage->ProjectsPageModule\n\n\n\n\n\nProjectsPageRoutingModule\n\nProjectsPageRoutingModule\n\nProjectsPageModule -->\n\nProjectsPageRoutingModule->ProjectsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/projects/projects.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProjectsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProjectsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { ProjectsPageRoutingModule } from './projects-routing.module'\n\nimport { ProjectsPage } from './projects.page'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProjectsPageRoutingModule\n  ],\n  declarations: [ ProjectsPage ]\n})\nexport class ProjectsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsPageRoutingModule.html":{"url":"modules/ProjectsPageRoutingModule.html","title":"module - ProjectsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/projects/projects-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { ProjectsPage } from './projects.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectsPage\n  },\n  {\n    path: ':id',\n    loadChildren: () => \"import('./project-read/project-read.module').then( m => m.ProjectReadPageModule)\"\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class ProjectsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadPageRoutingModule.html":{"url":"modules/ReadPageRoutingModule.html","title":"module - ReadPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ReadPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users/user-read/read-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { UserReadPage } from './user-read-page.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserReadPage\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class ReadPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/register/register.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, rest: RestService, toast: MessageService, redirect: RedirectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/register/register.page.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                        RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redirect\n                                                  \n                                                        \n                                                                    RedirectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/register/register.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/register/register.page.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: [ '', Validators.compose([ Validators.required, Validators.minLength(3) ]) ],\n    email: [ '', Validators.compose([ Validators.required, Validators.email ]) ],\n    password: [ '', Validators.compose([ Validators.required, ]) ],\n    password_confirmation: [ '', Validators.compose([ Validators.required, ]) ],\n  }, { validators: [ PasswordConfirmedValidator ] })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/auth/register/register.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, Validators } from '@angular/forms'\nimport { PasswordConfirmedValidator } from '../../../shared/validators/password-confirmed.validator'\nimport { RestService } from '../../../shared/services/rest.service'\nimport { MessageService } from 'primeng/api'\nimport { PAGES, RedirectService } from 'src/app/shared/services/redirect.service'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: [ './register.page.scss' ],\n})\nexport class RegisterPage implements OnInit {\n  registerForm = this.formBuilder.group({\n    name: [ '', Validators.compose([ Validators.required, Validators.minLength(3) ]) ],\n    email: [ '', Validators.compose([ Validators.required, Validators.email ]) ],\n    password: [ '', Validators.compose([ Validators.required, ]) ],\n    password_confirmation: [ '', Validators.compose([ Validators.required, ]) ],\n  }, { validators: [ PasswordConfirmedValidator ] })\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly rest: RestService,\n    private readonly toast: MessageService,\n    private readonly redirect: RedirectService,\n  ) {}\n\n  ngOnInit() {\n    return\n  }\n\n  register() {\n    this.rest.post('register', this.registerForm.value).subscribe(\n      () => {\n        this.toast.add({ severity: 'success', summary: 'Success', detail: 'You have successfully registered' })\n        this.redirect.to(PAGES.login.url, { queryParams: { email: this.registerForm.value.email } })\n      },\n      (error) => this.toast.add({ severity: 'error', summary: 'Error', detail: error.error.message })\n    )\n  }\n}\n\n    \n\n    \n        \n  \n    register\n  \n\n\n\n  \n    \n      \n        Name\n        \n      \n      \n        Email\n        \n      \n      \n        Password\n        \n      \n      \n        Confirm Password\n        \n      \n      Register\n    \n  \n\n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      register                      Name                            Email                            Password                            Confirm Password                    Register      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { RegisterPageRoutingModule } from './register-routing.module'\n\nimport { RegisterPage } from './register.page'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [ RegisterPage ]\n})\nexport class RegisterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/auth/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { RegisterPage } from './register.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestService.html":{"url":"injectables/RestService.html","title":"injectable - RestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/rest.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles HTTP requests to the REST API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildHeaders\n                            \n                            \n                                buildUri\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/rest.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Responsible for HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Responsible for storing and retrieving data from the local storage\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildHeaders\n                        \n                    \n                \n            \n            \n                \nbuildHeaders(from: literal type, noAuth: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/rest.service.ts:87\n                \n            \n\n\n            \n                \n                    Builds the headers to be sent with the request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The headers to be sent with the request\n\n                                    \n                                \n                                \n                                    noAuth\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        If true, the Authorization header will not be sent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HttpHeaders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildUri\n                        \n                    \n                \n            \n            \n                \nbuildUri(uri, from: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/rest.service.ts:78\n                \n            \n\n\n            \n                \n                    Builds the URI of the REST API endpoint\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The URI of the REST API endpoint\n\n                                    \n                                \n                                \n                                    from\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        The parameters to be sent in the query string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/rest.service.ts:67\n                        \n                    \n\n            \n                \n                    Initiates a DELETE request to the REST API\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    uri\n                                                    \n                                                            The URI of the REST API endpoint\n\n                                                    \n                                            \n                                            \n                                                    parameters\n                                                    \n                                                            The parameters to be sent in the query string\n\n                                                    \n                                            \n                                            \n                                                    headers\n                                                    \n                                                            The headers to be sent with the request\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/rest.service.ts:28\n                        \n                    \n\n            \n                \n                    Initiates a GET request to the REST API\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    uri\n                                                    \n                                                            The URI of the REST API endpoint\n\n                                                    \n                                            \n                                            \n                                                    parameters\n                                                    \n                                                            The parameters to be sent in the query string\n\n                                                    \n                                            \n                                            \n                                                    headers\n                                                    \n                                                            The headers to be sent with the request\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        post\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/rest.service.ts:40\n                        \n                    \n\n            \n                \n                    Initiates a POST request to the REST API\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    uri\n                                                    \n                                                            The URI of the REST API endpoint\n\n                                                    \n                                            \n                                            \n                                                    parameters\n                                                    \n                                                            The parameters to be sent in the query string\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            The body of the request\n\n                                                    \n                                            \n                                            \n                                                    headers\n                                                    \n                                                            The headers to be sent with the request\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/rest.service.ts:54\n                        \n                    \n\n            \n                \n                    Initiates a PUT request to the REST API\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    uri\n                                                    \n                                                            The URI of the REST API endpoint\n\n                                                    \n                                            \n                                            \n                                                    parameters\n                                                    \n                                                            The parameters to be sent in the query string\n\n                                                    \n                                            \n                                            \n                                                    body\n                                                    \n                                                            The body of the request\n\n                                                    \n                                            \n                                            \n                                                    headers\n                                                    \n                                                            The headers to be sent with the request\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { StorageService } from './storage.service'\nimport { environment } from '../../../environments/environment'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\n\n/** Handles HTTP requests to the REST API */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  /**\n   * @param http Responsible for HTTP requests\n   * @param storage Responsible for storing and retrieving data from the local storage\n   */\n  constructor(\n    private http: HttpClient,\n    private storage: StorageService\n  ) { }\n\n  /**\n   * Initiates a GET request to the REST API\n   * @param uri The URI of the REST API endpoint\n   * @param parameters The parameters to be sent in the query string\n   * @param headers The headers to be sent with the request\n   */\n  get = (uri: string, parameters = {}, headers = {}) => this.http.get(\n    this.buildUri(uri, parameters),\n    { headers: this.buildHeaders(headers) }\n  )\n\n  /**\n   * Initiates a POST request to the REST API\n   * @param uri The URI of the REST API endpoint\n   * @param parameters The parameters to be sent in the query string\n   * @param body The body of the request\n   * @param headers The headers to be sent with the request\n   */\n  post = (uri: string, body = {}, parameters = {}, headers = {}) =>\n    this.http.post(\n      this.buildUri(uri, parameters),\n      body,\n      { headers: this.buildHeaders(headers) }\n    )\n\n  /**\n   * Initiates a PUT request to the REST API\n   * @param uri The URI of the REST API endpoint\n   * @param parameters The parameters to be sent in the query string\n   * @param body The body of the request\n   * @param headers The headers to be sent with the request\n   */\n  put = (uri: string, body = {}, parameters = {}, headers = {}) =>\n    this.http.put(\n      this.buildUri(uri, parameters),\n      body,\n      { headers: this.buildHeaders(headers) }\n    )\n\n  /**\n   * Initiates a DELETE request to the REST API\n   * @param uri The URI of the REST API endpoint\n   * @param parameters The parameters to be sent in the query string\n   * @param headers The headers to be sent with the request\n   */\n  delete = (uri: string, parameters = {}, headers = {}) =>\n    this.http.delete(\n      this.buildUri(uri, parameters),\n      { headers: this.buildHeaders(headers) }\n    )\n\n  /**\n   * Builds the URI of the REST API endpoint\n   * @param uri The URI of the REST API endpoint\n   * @param from The parameters to be sent in the query string\n   */\n  buildUri(uri, from = {}){\n    return `${environment.apiUrl}/${uri}?${Object.keys(from).map(key => `${key}=${encodeURIComponent(from[key])}`).join('&')}`\n  }\n\n  /**\n   * Builds the headers to be sent with the request\n   * @param from The headers to be sent with the request\n   * @param noAuth If true, the Authorization header will not be sent\n   */\n  buildHeaders(from: {}, noAuth: boolean = false): HttpHeaders {\n    let header = new HttpHeaders({\n      ...from,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    })\n\n    if (noAuth) return header // No need to add the Authorization header\n\n    /**\n     * If the user is logged in, add the Authorization header\n     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization\n     */\n    this.storage?.get('user')?.then(user => {\n      if (user){\n        header.append('withCredentials', 'true')\n        header.append('Authorization', `Bearer ${user.token}`)\n      }\n    })\n\n    return header\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nPasswordInputComponent\n\nPasswordInputComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nPasswordInputComponent->SharedModule\n\n\n\n\n\nPasswordInputComponent \n\nPasswordInputComponent \n\nPasswordInputComponent  -->\n\nSharedModule->PasswordInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for grouping shared components\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PasswordInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PasswordInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { IonicModule } from '@ionic/angular'\nimport { PasswordInputComponent } from './components/password-input/password-input.component'\n\n/** Module for grouping shared components */\n@NgModule({\n  declarations: [\n    PasswordInputComponent\n  ],\n  exports: [\n    PasswordInputComponent\n  ],\n  imports: [\n    CommonModule,\n    IonicModule\n  ]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles local storage operations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                #ready\n                            \n                            \n                                    Private\n                                #storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                set\n                            \n                            \n                                    Public\n                                    Async\n                                waitForStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isReady\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/storage.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Storage strategy as defined in AppModule\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/storage.service.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Query a value identified by the key from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/storage.service.ts:57\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Purge a record from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/storage.service.ts:37\n                \n            \n\n\n            \n                \n                    Set a key to a value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        waitForStorage\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/storage.service.ts:71\n                \n            \n\n\n            \n                \n                    Wait until the storage was created\nasync test() {\n            await storage.waitForStorage()\n            console.log('done')\n}\n\n\n                    \n                        Example :\n                        \n                            async test() {\n            await storage.waitForStorage()\n            console.log(&#39;done&#39;)\n}\n                        \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/storage.service.ts:12\n                        \n                    \n\n            \n                \n                    Indicates if the storage is initialized or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        #storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/storage.service.ts:10\n                        \n                    \n\n            \n                \n                    Storage strategy\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isReady\n                    \n                \n\n                \n                    \n                        getisReady()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/storage.service.ts:27\n                                \n                            \n                    \n                        \n                                Get if the storage is initialized or not\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { Storage } from '@ionic/storage-angular'\n\n/** Handles local storage operations */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  /** Storage strategy */\n  #storage: Storage | null = null\n  /** Indicates if the storage is initialized or not */\n  #ready: boolean = false\n\n  /**\n   * @param storage Storage strategy as defined in {@link AppModule}\n   */\n  constructor(\n    private storage: Storage\n  ) {\n    this.storage.create().then(createdStorage => {\n      this.#storage = createdStorage\n      this.#ready = true\n    })\n  }\n\n  /** Get if the storage is initialized or not */\n  get isReady(): boolean {\n    return this.#ready\n  }\n\n  /**\n   * Set a key to a value\n   *\n   * @param key\n   * @param value\n   */\n  public async set(key: string, value: any) {\n    await this.waitForStorage()\n    await this.#storage?.set(key, value)\n  }\n\n  /**\n   * Query a value identified by the key from the database\n   *\n   * @param key\n   */\n  public async get(key: string): Promise {\n    await this.waitForStorage()\n    return this.#storage?.get(key) ?? null\n  }\n\n  /**\n   * Purge a record from the database\n   *\n   * @param key\n   */\n  public async remove(key: string): Promise {\n    await this.waitForStorage()\n    return this.#storage?.remove(key)\n  }\n\n  /**\n   * Wait until the storage was created\n   *\n   * @example\n   * async test() {\n   *             await storage.waitForStorage()\n   *             console.log('done')\n   * }\n   */\n  public async waitForStorage() {\n    while (!this.isReady) // define the condition as you like\n      // eslint-disable-next-line no-await-in-loop\n      await new Promise(resolve => setTimeout(resolve, 250))\n    return this.#storage\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Task.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITask\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignee\n                            \n                            \n                                    Public\n                                assignee_id\n                            \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                parent\n                            \n                            \n                                    Public\n                                parent_id\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                project_id\n                            \n                            \n                                    Public\n                                reporter\n                            \n                            \n                                    Public\n                                reporter_id\n                            \n                            \n                                    Public\n                                status\n                            \n                            \n                                    Public\n                                subtasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                factory\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    shortName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, description: string, parent_id: string | null, project_id: string, reporter_id: string | null, assignee_id: string | null, status: \"0\" | \"1\" | \"2\" | \"3\", parent: Task | null, subtasks: Task[], project: Project, assignee: User | null, reporter: User | null, count: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/Task.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent_id\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        project_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reporter_id\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assignee_id\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    \"0\" | \"1\" | \"2\" | \"3\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        Task | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subtasks\n                                                  \n                                                        \n                                                                        Task[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        project\n                                                  \n                                                        \n                                                                        Project\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        assignee\n                                                  \n                                                        \n                                                                        User | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reporter\n                                                  \n                                                        \n                                                                        User | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        count\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assignee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        assignee_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parent_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reporter_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"0\" | \"1\" | \"2\" | \"3\"\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subtasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Task.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        factory\n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: ITask | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/Task.entity.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ITask | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        shortName\n                    \n                \n\n                \n                    \n                        getshortName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/classes/Task.entity.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Project} from \"./Project.entity\";\nimport {User} from \"./User.entity\";\n\nexport interface ITask {\n  id: string\n  name: string\n  description: string\n  parent_id: string\n  project_id: string\n  reporter_id: string\n  assignee_id: string\n  status: 0|1|2|3\n  parent: Task|null\n  subtasks: Task[]\n  project: Project\n  assignee: User|null\n  reporter: User|null\n  count: number\n}\n\nexport class Task implements ITask{\n  get shortName() {\n    return `${this.project?.shortname ?? 'GLOBAL'}-${this.count}`\n  }\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public parent_id: string|null,\n    public project_id: string,\n    public reporter_id: string|null,\n    public assignee_id: string|null,\n    public status: 0|1|2|3,\n    public parent: Task|null,\n    public subtasks: Task[],\n    public project: Project,\n    public assignee: User|null,\n    public reporter: User|null,\n    public count: number\n  ) {}\n\n  static factory(data: ITask|any) {\n    return new Task(\n      data.id ?? '',\n      data.name ?? '',\n      data.description ?? '',\n      data.parent_id ?? null,\n      data.project_id ?? '',\n      data.reporter_id ?? null,\n      data.assignee_id ?? null,\n      data.status ?? 0,\n      data.parent ?? null,\n      data.subtasks ?? [],\n      data.project ?? Project.factory({}),\n      data.assignee ?? null,\n      data.reporter ?? null,\n      data.count ?? 1\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/tasks/task.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CrudService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBody\n                            \n                            \n                                add\n                            \n                            \n                                browse\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                    Protected\n                                getAddBody\n                            \n                            \n                                    Protected\n                                getAddUri\n                            \n                            \n                                    Protected\n                                getBrowseUri\n                            \n                            \n                                    Protected\n                                getDeleteUri\n                            \n                            \n                                    Protected\n                                getEditBody\n                            \n                            \n                                    Protected\n                                getEditUri\n                            \n                            \n                                    Protected\n                                getReadUri\n                            \n                            \n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    factory\n                                \n                                \n                                    uri\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody(entity: Task)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { name: any; description: any; status: any; assignee_id: any; reporter_id: any; parent_id: any; project_id: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browse\n                        \n                    \n                \n            \n            \n                \nbrowse()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPost\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBrowseUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBrowseUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getDeleteUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeleteUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPut\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getReadUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReadUri(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        factory\n                    \n                \n\n                \n                    \n                        getfactory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/tasks/task.service.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        uri\n                    \n                \n\n                \n                    \n                        geturi()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/tasks/task.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {CrudService} from \"../../classes/CrudService.generic\";\nimport {ITask, Task} from \"../../classes/Task.entity\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService extends CrudService{\n  get factory() {\n    return Task.factory\n  }\n\n  getBody(entity: Task) {\n    return {\n      name: entity.name,\n      description: entity.description,\n      status: entity.status,\n      assignee_id: entity.assignee_id,\n      reporter_id: entity.reporter_id,\n      parent_id: entity.parent_id,\n      project_id: entity.project_id,\n    }\n  }\n\n  get uri(): string {\n    return 'tasks'\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/Team.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITeam\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created_at\n                            \n                            \n                                    Public\n                                del\n                            \n                            \n                                    Public\n                                edit\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                updated_at\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                user_id\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                factory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, user: User, user_id: string, users: User[], created_at: string, updated_at: string, projects: IProject[], edit: boolean, del: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/Team.entity.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user_id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        User[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        created_at\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updated_at\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projects\n                                                  \n                                                        \n                                                                        IProject[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        edit\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        del\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        del\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        edit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IProject[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/Team.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        factory\n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: ITeam | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/Team.entity.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ITeam | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Team\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUser, User } from './User.entity'\nimport { ITimestamp } from './ITimestamp.interface'\nimport { ICrud } from './ICrud.interface'\nimport { IProject, Project } from './Project.entity'\n\nexport interface ITeam extends ITimestamp, ICrud{\n  id: string\n  name: string\n  user: IUser\n  user_id: string\n  users: IUser[]\n  projects: IProject[]\n}\n\nexport class Team implements ITeam {\n  constructor(\n    public id: string,\n    public name: string,\n    public user: User,\n    public user_id: string,\n    public users: User[],\n    public created_at: string,\n    public updated_at: string,\n    public projects: IProject[],\n    public edit: boolean = false,\n    public del: boolean = false\n  ) {}\n\n  static factory(data: ITeam|any) {\n    return new Team(\n      data.id ?? '',\n      data.name ?? '',\n      User.factory(data.user) ?? null,\n      data.user_id ?? '',\n      data.users?.map(user => User.factory(user)) ?? [],\n      data.created_at ?? (new Date()).toISOString(),\n      data.updated_at ?? (new Date()).toISOString(),\n      data.projects?.map(project => Project.factory(project)) ?? [],\n      data.edit ?? false,\n      data.del ?? false\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamReadPage.html":{"url":"components/TeamReadPage.html","title":"component - TeamReadPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamReadPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/teams/team-read/team-read-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team-read\n            \n\n            \n                styleUrls\n                ./team-read.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./team-read.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                            \n                                itemDialog\n                            \n                            \n                                project\n                            \n                            \n                                    Private\n                                project$\n                            \n                            \n                                projectDialog\n                            \n                            \n                                submitted\n                            \n                            \n                                    Public\n                                team\n                            \n                            \n                                    Private\n                                team$\n                            \n                            \n                                    Private\n                                teamId\n                            \n                            \n                                    Private\n                                teamId$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMember\n                            \n                            \n                                removeProject\n                            \n                            \n                                saveMember\n                            \n                            \n                                saveProject\n                            \n                            \n                                showAddProjectDialog\n                            \n                            \n                                showDialog\n                            \n                            \n                                showEditProjectDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, teamService: TeamService, projectService: ProjectService, message: MessageService, confirm: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirm\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProject\n                        \n                    \n                \n            \n            \n                \nremoveProject(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveMember\n                        \n                    \n                \n            \n            \n                \nsaveMember()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveProject\n                        \n                    \n                \n            \n            \n                \nsaveProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddProjectDialog\n                        \n                    \n                \n            \n            \n                \nshowAddProjectDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDialog\n                        \n                    \n                \n            \n            \n                \nshowDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEditProjectDialog\n                        \n                    \n                \n            \n            \n                \nshowEditProjectDialog(project: Project)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team-read/team-read-page.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                Project\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        input\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Default value : Project.factory({})\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        team$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        teamId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        teamId$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team-read/team-read-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\nimport { ConfirmationService, MessageService } from 'primeng/api'\nimport { Subscription } from 'rxjs'\nimport { Team } from '../../../classes/Team.entity'\nimport { TeamService } from '../team.service'\nimport { Project } from '../../../classes/Project.entity'\nimport { ProjectService } from '../../projects/project.service'\n\n@Component({\n  selector: 'app-team-read',\n  templateUrl: './team-read.page.html',\n  styleUrls: [ './team-read.page.scss' ],\n})\nexport class TeamReadPage implements OnInit, OnDestroy {\n  // section vars\n  private teamId: string\n  public team: Team\n  private teamId$: Subscription\n  private team$: Subscription\n  private project$: Subscription\n  itemDialog = false\n  input: string = null\n  project: Project = Project.factory({})\n  submitted = false\n  projectDialog = false\n\n  // section init\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly teamService: TeamService,\n    private readonly projectService: ProjectService,\n    private readonly message: MessageService,\n    private readonly confirm: ConfirmationService,\n  ) {\n    this.teamId$ = this.route.params.subscribe(params => {\n      this.project = Project.factory({ team_id: params.id })\n      this.teamId = params.id\n    })\n  }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    this.team$ = this.teamService.read(this.teamId).subscribe(team => this.team = team)\n  }\n\n  //section logic\n  removeMember(email: string) {\n    this.confirm.confirm({\n      message: 'Are you sure you want to remove this member?',\n      accept: () => {\n        this.team$ = this.teamService.removeMember(this.teamId, email).subscribe(res => {\n          this.message.add({ severity: 'success', summary: 'Success', detail: 'Member removed' })\n          this.team = res.data\n        })\n      }\n    })\n  }\n\n  saveMember() {\n    this.submitted = true\n    if(this.project) {\n      this.team$ = this.teamService.addMember(this.teamId, this.input).subscribe(res => {\n        this.team = res.data\n        this.message.add({ severity: 'success', summary: 'Success', detail: 'Member added' })\n      })\n      this.hideDialog()\n    }\n  }\n\n  // section dialog-logic\n  showDialog() {\n    this.itemDialog = true\n    this.input = null\n  }\n\n  hideDialog() {\n    this.itemDialog = false\n    this.projectDialog = false\n  }\n\n  showAddProjectDialog() {\n    this.projectDialog = true\n    this.project = Project.factory({ team_id: this.teamId })\n  }\n\n  showEditProjectDialog(project: Project) {\n    this.project = project\n    this.project.team_id = this.teamId\n    this.projectDialog = true\n    this.submitted = false\n  }\n\n  // section project-logic\n  removeProject(project: Project) {\n    this.confirm.confirm({\n      message: 'Are you sure you want to remove this project?',\n      accept: () => {\n        this.project$ = this.projectService.delete(project).subscribe(() => {\n          this.message.add({ severity: 'success', summary: 'Success', detail: 'Project removed' })\n          this.init()\n        })\n      }\n    })\n  }\n\n  saveProject() {\n    this.submitted = true\n    if(this.project.name) {\n      if(this.project.id) {\n        this.project$ = this.projectService.edit(this.project).subscribe(() => {\n          this.message.add({ severity: 'success', summary: 'Success', detail: 'Project edited' })\n        })\n      } else {\n        this.project$ = this.projectService.add(Project.factory({\n          name: this.project.name,\n          shortname: this.project.shortname,\n          team_id: this.teamId\n        })).subscribe(() => {\n          this.message.add({ severity: 'success', summary: 'Success', detail: 'Project added' })\n        })\n      }\n      this.init()\n      this.hideDialog()\n    }\n  }\n\n  // section destruct\n  ngOnDestroy() {\n    this.teamId$?.unsubscribe()\n    this.team$?.unsubscribe()\n    this.project$?.unsubscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    Details\n  \n\n\n\n  \n  \n    \n      \n        {{ team?.name }}\n      \n    \n    \n      \n        \n          Name: {{ team.name }}\n        \n        \n          Created: {{ team.created_at | date: 'yyyy-MM-dd hh:mm' }}\n        \n        \n          Team leader:  {{ team.user?.name }} ({{ team.user?.email }})\n        \n      \n    \n  \n  \n  \n    \n      \n        Members\n      \n    \n    \n      \n        \n          \n          \n            Name\n            Email\n            Registered\n            Operations\n          \n          \n          \n          \n            {{ team.user?.name }}\n            {{ team.user?.email }}\n            {{ team.user?.created_at | date: 'yyyy-MM-dd hh:mm' }}\n            \n              \n            \n          \n          \n            {{ member.name }}\n            {{ member.email }}\n            {{ member.created_at | date: 'yyyy-MM-dd hh:mm' }}\n            \n              \n            \n          \n          \n        \n        \n          \n        \n      \n    \n  \n\n  \n    \n      \n        Projects\n      \n    \n    \n      \n        \n          \n          \n            Name\n            Short Name\n            Created\n            Operations\n          \n          \n          \n          \n            {{ project.name }}\n            {{project.shortname}}\n            {{ project.created_at | date: 'yyyy-MM-dd hh:mm' }}\n            \n              \n               &nbsp;&nbsp;\n              \n              \n            \n          \n          \n        \n        \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        Email\n        \n        Email is required.\n      \n      \n      \n      \n    \n  \n\n  \n  \n    \n      \n        Name\n        \n        Name is required.\n      \n      \n        Short name\n        \n        Short name is required.\n      \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./team-read.page.scss\n                \n                td {\n  padding-top: 40px !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Details                        {{ team?.name }}                                      Name: {{ team.name }}                          Created: {{ team.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                          Team leader:  {{ team.user?.name }} ({{ team.user?.email }})                                          Members                                                            Name            Email            Registered            Operations                                                    {{ team.user?.name }}            {{ team.user?.email }}            {{ team.user?.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                                                                      {{ member.name }}            {{ member.email }}            {{ member.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                                                                                                                            Projects                                                            Name            Short Name            Created            Operations                                                    {{ project.name }}            {{project.shortname}}            {{ project.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                                                                                                                                                                           Email                Email is required.                                                    Name                Name is required.                    Short name                Short name is required.                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamReadPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamReadPageModule.html":{"url":"modules/TeamReadPageModule.html","title":"module - TeamReadPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamReadPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TeamReadPageModule\n\n\n\ncluster_TeamReadPageModule_imports\n\n\n\ncluster_TeamReadPageModule_declarations\n\n\n\n\nTeamReadPage\n\nTeamReadPage\n\n\n\nTeamReadPageModule\n\nTeamReadPageModule\n\nTeamReadPageModule -->\n\nTeamReadPage->TeamReadPageModule\n\n\n\n\n\nTeamReadRoutingModule\n\nTeamReadRoutingModule\n\nTeamReadPageModule -->\n\nTeamReadRoutingModule->TeamReadPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/team-read/team-read.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamReadPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TeamReadRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { TeamReadRoutingModule } from './team-read-routing.module'\n\nimport { TeamReadPage } from './team-read-page.component'\nimport { CardModule } from 'primeng/card'\nimport { ButtonModule } from 'primeng/button'\nimport { DialogModule } from 'primeng/dialog'\nimport { DividerModule } from 'primeng/divider'\nimport { InputTextModule } from 'primeng/inputtext'\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        TeamReadRoutingModule,\n        CardModule,\n        ButtonModule,\n        DialogModule,\n        DividerModule,\n        InputTextModule\n    ],\n  declarations: [ TeamReadPage ]\n})\nexport class TeamReadPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamReadRoutingModule.html":{"url":"modules/TeamReadRoutingModule.html","title":"module - TeamReadRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamReadRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/team-read/team-read-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { TeamReadPage } from './team-read-page.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamReadPage\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class TeamReadRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/teams/team.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CrudService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getBody\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMember\n                            \n                            \n                                removeMember\n                            \n                            \n                                add\n                            \n                            \n                                browse\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                    Protected\n                                getAddBody\n                            \n                            \n                                    Protected\n                                getAddUri\n                            \n                            \n                                    Abstract\n                                getBody\n                            \n                            \n                                    Protected\n                                getBrowseUri\n                            \n                            \n                                    Protected\n                                getDeleteUri\n                            \n                            \n                                    Protected\n                                getEditBody\n                            \n                            \n                                    Protected\n                                getEditUri\n                            \n                            \n                                    Protected\n                                getReadUri\n                            \n                            \n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    factory\n                                \n                                \n                                    uri\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rest: RestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/teams/team.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rest\n                                                  \n                                                        \n                                                                        RestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMember\n                        \n                    \n                \n            \n            \n                \naddMember(teamId: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(teamId: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/team.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browse\n                        \n                    \n                \n            \n            \n                \nbrowse()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPost\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBrowseUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBrowseUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getDeleteUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeleteUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPut\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getReadUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReadUri(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/team.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        factory\n                    \n                \n\n                \n                    \n                        getfactory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/teams/team.service.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        uri\n                    \n                \n\n                \n                    \n                        geturi()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/teams/team.service.ts:27\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { RestService } from 'src/app/shared/services/rest.service'\nimport { IResponse } from '../../classes/IResponse.generic'\nimport { ITeam, Team } from '../../classes/Team.entity'\nimport { CrudService } from '../../classes/CrudService.generic'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService extends CrudService{\n\n  // section init\n  constructor(\n    rest: RestService,\n  ) { super(rest) }\n\n  get factory() {\n    return Team.factory\n  }\n\n  // section implementations\n  getBody = (entity: Team) => ({\n    name: entity.name,\n    user_id: entity.user_id\n  });\n\n  get uri(): string {\n    return 'teams'\n  }\n\n  // section logic\n  addMember(teamId: string, email: string) {\n    return this.rest.post>('teams/membership', {\n      email: email,\n      team: teamId,\n    })\n  }\n\n  removeMember(teamId: string, email: string) {\n    return this.rest.delete>('teams/membership', {\n      email: email,\n      team: teamId,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsPage.html":{"url":"components/TeamsPage.html","title":"component - TeamsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/teams/teams.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./teams.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                authService\n                            \n                            \n                                item\n                            \n                            \n                                itemDialog\n                            \n                            \n                                items\n                            \n                            \n                                    Private\n                                items$\n                            \n                            \n                                selectedItems\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                deleteSelectedItems\n                            \n                            \n                                hideDialog\n                            \n                            \n                                init\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                openNewDialog\n                            \n                            \n                                saveItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(itemService: TeamService, messageService: MessageService, confirmationService: ConfirmationService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/teams/teams.page.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItem\n                        \n                    \n                \n            \n            \n                \ndeleteItem(item: Team)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Team\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSelectedItems\n                        \n                    \n                \n            \n            \n                \ndeleteSelectedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideDialog\n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditDialog\n                        \n                    \n                \n            \n            \n                \nopenEditDialog(item: Team)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Team\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewDialog\n                        \n                    \n                \n            \n            \n                \nopenNewDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveItem\n                        \n                    \n                \n            \n            \n                \nsaveItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/teams/teams.page.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemDialog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/teams/teams.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { TeamService } from './team.service'\nimport { Team } from '../../classes/Team.entity'\nimport { ConfirmationService, MessageService } from 'primeng/api'\nimport { Subscription } from 'rxjs'\nimport { AuthService } from '../../shared/services/auth.service'\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.page.html',\n  styleUrls: [ './teams.page.scss' ],\n})\nexport class TeamsPage implements OnInit, OnDestroy {\n  // section vars\n  selectedItems: any[]\n  items: Team[]\n  itemDialog = false\n  item: Team\n  submitted = false\n  private items$: Subscription\n\n  // section init\n  constructor(\n    private readonly itemService: TeamService,\n    private readonly messageService: MessageService,\n    private readonly confirmationService: ConfirmationService,\n    public readonly authService: AuthService,\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    if(this.items$) this.items$.unsubscribe()\n    this.items$ = this.itemService.browse().subscribe(res => {\n      this.items = res\n    })\n  }\n\n  // section logic\n  openNewDialog() {\n    this.item = new Team(null, '', null, this.authService.activeUser.id, [], null, null, [])\n    this.submitted = false\n    this.itemDialog = true\n  }\n\n\n  deleteSelectedItems() {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete the selected items?',\n      accept: () => {\n        this.selectedItems.forEach(item =>\n          this.itemService.delete(item.id).subscribe(() => {\n            this.items = this.items.filter(i => !this.selectedItems.includes(i))\n            this.selectedItems = []\n            this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Item deleted' })\n          }))\n      }\n    })\n  }\n\n  openEditDialog(item: Team) {\n    this.item = item\n    this.submitted = false\n    this.itemDialog = true\n  }\n\n  deleteItem(item: Team) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete this item?',\n      accept: () => {\n        this.itemService.delete(item).subscribe(() => {\n          this.items = this.items.filter(i => i !== item)\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Item deleted' })\n        })\n      }\n    })\n  }\n\n  hideDialog() {\n    this.itemDialog = false\n    this.submitted = false\n  }\n\n  saveItem() {\n    this.submitted = true\n    if (this.item.id) {\n      this.itemService.edit(this.item).subscribe(() => {\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Item updated' })\n        this.itemDialog = false\n      })\n    } else {\n      this.itemService.add(this.item).subscribe(() => {\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Item created' })\n        this.itemDialog = false\n      })\n    }\n    this.init()\n  }\n\n  // section destruct\n  ngOnDestroy() {\n    if(this.items$) this.items$.unsubscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    Teams\n  \n\n\n\n  \n    \n      \n        \n        \n      \n\n      \n        \n      \n    \n\n    \n      \n        \n          Manage Teams\n          \n            \n            \n            \n          \n        \n      \n\n      \n        \n          \n            \n          \n          Name \n          Owner \n          Created \n           Operations \n        \n      \n\n      \n        \n          \n            \n          \n          \n            {{item.name}}\n          \n          \n            {{item.user.name}}\n          \n          \n            {{item.created_at | date: 'yyyy-MM-dd HH:mm'}}\n          \n          \n            \n            \n          \n        \n      \n\n      \n        \n          In total there are {{items ? items.length : 0 }} teams.\n        \n      \n    \n  \n\n  \n    \n      \n        Name\n        \n        Name is required.\n      \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./teams.page.scss\n                \n                @import \"src/theme/crud_table\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Teams                                                                                        Manage Teams                                                                                                                              Name           Owner           Created            Operations                                                                                   {{item.name}}                                {{item.user.name}}                                {{item.created_at | date: \\'yyyy-MM-dd HH:mm\\'}}                                                                                            In total there are {{items ? items.length : 0 }} teams.                                        Name                Name is required.                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsPageModule.html":{"url":"modules/TeamsPageModule.html","title":"module - TeamsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TeamsPageModule\n\n\n\ncluster_TeamsPageModule_imports\n\n\n\ncluster_TeamsPageModule_declarations\n\n\n\n\nTeamsPage\n\nTeamsPage\n\n\n\nTeamsPageModule\n\nTeamsPageModule\n\nTeamsPageModule -->\n\nTeamsPage->TeamsPageModule\n\n\n\n\n\nTeamsPageRoutingModule\n\nTeamsPageRoutingModule\n\nTeamsPageModule -->\n\nTeamsPageRoutingModule->TeamsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/teams.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TeamsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { TeamsPageRoutingModule } from './teams-routing.module'\n\nimport { TeamsPage } from './teams.page'\nimport { FileUploadModule } from 'primeng/fileupload'\nimport { ToolbarModule } from 'primeng/toolbar'\nimport { RippleModule } from 'primeng/ripple'\nimport { TableModule } from 'primeng/table'\nimport { InputTextModule } from 'primeng/inputtext'\nimport { DialogModule } from 'primeng/dialog'\nimport { ConfirmDialogModule } from 'primeng/confirmdialog'\nimport { DividerModule } from 'primeng/divider'\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        TeamsPageRoutingModule,\n        FileUploadModule,\n        ToolbarModule,\n        RippleModule,\n        TableModule,\n        InputTextModule,\n        DialogModule,\n        ConfirmDialogModule,\n        DividerModule\n    ],\n  declarations: [ TeamsPage ]\n})\nexport class TeamsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamsPageRoutingModule.html":{"url":"modules/TeamsPageRoutingModule.html","title":"module - TeamsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/teams/teams-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { TeamsPage } from './teams.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamsPage\n  },\n  {\n    path: ':id',\n    loadChildren: () => \"import('./team-read/team-read.module').then(m => m.TeamReadPageModule)\"\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class TeamsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/User.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a user object\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                created_at\n                            \n                            \n                                    Public\n                                del\n                            \n                            \n                                    Public\n                                edit\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                updated_at\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                factory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, email: string, password: string, created_at: string, updated_at: string, edit: boolean, del: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/User.entity.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The UUIDv4 of the user\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The name of the user\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The email of the user\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The password of the user\n\n                                                        \n                                                \n                                                \n                                                        created_at\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        updated_at\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        edit\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        del\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        del\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        edit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:28\n                        \n                    \n\n            \n                \n                    The email of the user\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:26\n                        \n                    \n\n            \n                \n                    The UUIDv4 of the user\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:27\n                        \n                    \n\n            \n                \n                    The name of the user\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:29\n                        \n                    \n\n            \n                \n                    The password of the user\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/User.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        factory\n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(user: IUser | any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/User.entity.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITimestamp } from './ITimestamp.interface'\nimport { ICrud } from './ICrud.interface'\n\n/** Used as a type when making a request to the API */\nexport interface IUser extends ITimestamp, ICrud{\n  id: string\n  name: string\n  email: string\n  password: string\n}\n\n/** Represents a user object  */\nexport class User implements IUser{\n\n  /**\n   * @param id The UUIDv4 of the user\n   * @param name The name of the user\n   * @param email The email of the user\n   * @param password The password of the user\n   * @param created_at\n   * @param updated_at\n   * @param edit\n   * @param del\n   */\n  constructor(\n    public id: string,\n    public name: string,\n    public email: string,\n    public password: string,\n    public created_at: string,\n    public updated_at: string,\n    public edit: boolean,\n    public del: boolean\n  ) {}\n\n\n  static factory(user: IUser|any) {\n    return new User(\n      user?.id ?? '',\n      user?.name ?? '',\n      user?.email ?? '',\n      user?.password ?? '',\n      user?.created_at ?? (new Date()).toISOString(),\n      user?.updated_at ?? (new Date()).toISOString(),\n      user?.edit ?? false,\n      user?.del ?? false\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserReadPage.html":{"url":"components/UserReadPage.html","title":"component - UserReadPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserReadPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users/user-read/user-read-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-read\n            \n\n            \n                styleUrls\n                ./user-read-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-read-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Private\n                                user$\n                            \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                userId$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UserService, message: MessageService, confirm: ConfirmationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users/user-read/user-read-page.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirm\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/users/user-read/user-read-page.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/users/user-read/user-read-page.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/user-read/user-read-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/user-read/user-read-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/user-read/user-read-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userId$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/user-read/user-read-page.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { User } from '../../../classes/User.entity'\nimport { ActivatedRoute } from '@angular/router'\nimport { ConfirmationService, MessageService } from 'primeng/api'\nimport { UserService } from '../user.service'\nimport { Subscription } from 'rxjs'\n\n@Component({\n  selector: 'app-user-read',\n  templateUrl: './user-read-page.component.html',\n  styleUrls: [ './user-read-page.component.scss' ],\n})\nexport class UserReadPage implements OnInit {\n  // section vars\n  private userId: string\n  public user: User\n  private userId$: Subscription\n  private user$: Subscription\n\n  // section init\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly userService: UserService,\n    private readonly message: MessageService,\n    private readonly confirm: ConfirmationService,\n  ) {\n    this.userId$ = this.route.params.subscribe(params => this.userId = params.id)\n  }\n\n  ngOnInit() {\n    this.user$ = this.userService.read(this.userId).subscribe(user => this.user = user)\n  }\n\n  // section destruct\n  ngOnDestroy() {\n    this.userId$?.unsubscribe()\n    this.user$?.unsubscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    Details\n  \n\n\n\n  \n    \n      \n        {{ user?.name }}\n      \n    \n    \n      \n        \n          Name: {{ user.name }}\n        \n        \n          Email: {{ user.email }}\n        \n        \n          Created: {{ user.created_at | date: 'yyyy-MM-dd hh:mm' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-read-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Details                      {{ user?.name }}                                      Name: {{ user.name }}                          Email: {{ user.email }}                          Created: {{ user.created_at | date: \\'yyyy-MM-dd hh:mm\\' }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserReadPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserReadPageModule.html":{"url":"modules/UserReadPageModule.html","title":"module - UserReadPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserReadPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserReadPageModule\n\n\n\ncluster_UserReadPageModule_declarations\n\n\n\ncluster_UserReadPageModule_imports\n\n\n\n\nUserReadPage\n\nUserReadPage\n\n\n\nUserReadPageModule\n\nUserReadPageModule\n\nUserReadPageModule -->\n\nUserReadPage->UserReadPageModule\n\n\n\n\n\nReadPageRoutingModule\n\nReadPageRoutingModule\n\nUserReadPageModule -->\n\nReadPageRoutingModule->UserReadPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users/user-read/user-read.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserReadPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReadPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { ReadPageRoutingModule } from './read-routing.module'\n\nimport { UserReadPage } from './user-read-page.component'\nimport { CardModule } from 'primeng/card'\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        ReadPageRoutingModule,\n        CardModule\n    ],\n  declarations: [ UserReadPage ]\n})\nexport class UserReadPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/users/user.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CrudService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBody\n                            \n                            \n                                add\n                            \n                            \n                                browse\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                    Protected\n                                getAddBody\n                            \n                            \n                                    Protected\n                                getAddUri\n                            \n                            \n                                    Protected\n                                getBrowseUri\n                            \n                            \n                                    Protected\n                                getDeleteUri\n                            \n                            \n                                    Protected\n                                getEditBody\n                            \n                            \n                                    Protected\n                                getEditUri\n                            \n                            \n                                    Protected\n                                getReadUri\n                            \n                            \n                                read\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    factory\n                                \n                                \n                                    uri\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBody\n                        \n                    \n                \n            \n            \n                \ngetBody(__entity: User)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __entity\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browse\n                        \n                    \n                \n            \n            \n                \nbrowse()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edit\n                        \n                    \n                \n            \n            \n                \nedit(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPost\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getAddUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAddUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getBrowseUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBrowseUri()\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getDeleteUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeleteUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditBody(entity: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPut\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getEditUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEditUri(tClass: TClass)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tClass\n                                    \n                                            TClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        getReadUri\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReadUri(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         CrudService\n\n                \n            \n            \n                \n                        Defined in         CrudService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        factory\n                    \n                \n\n                \n                    \n                        getfactory()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/users/user.service.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        uri\n                    \n                \n\n                \n                    \n                        geturi()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/users/user.service.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { CrudService } from '../../classes/CrudService.generic'\nimport { IUser, User } from '../../classes/User.entity'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService extends CrudService{\n  get factory() {\n    return User.factory\n  }\n\n  getBody(__entity: User): any {\n    return {} // Unused\n  }\n\n  get uri(): string {\n    return 'users'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersPage.html":{"url":"components/UsersPage.html","title":"component - UsersPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/users/users.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                authService\n                            \n                            \n                                items\n                            \n                            \n                                    Private\n                                items$\n                            \n                            \n                                selectedItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                deleteSelectedItems\n                            \n                            \n                                init\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(itemService: UserService, messageService: MessageService, confirmationService: ConfirmationService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/users/users.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItem\n                        \n                    \n                \n            \n            \n                \ndeleteItem(item: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/users/users.page.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSelectedItems\n                        \n                    \n                \n            \n            \n                \ndeleteSelectedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/users/users.page.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/users/users.page.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/users/users.page.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/users/users.page.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.page.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/users/users.page.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { User } from '../../classes/User.entity'\nimport { Subscription } from 'rxjs'\nimport { ConfirmationService, MessageService } from 'primeng/api'\nimport { AuthService } from '../../shared/services/auth.service'\nimport { UserService } from './user.service'\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: [ './users.page.scss' ],\n})\nexport class UsersPage implements OnInit, OnDestroy {\n  // section vars\n  selectedItems: any[]\n  items: User[]\n  private items$: Subscription\n\n  // section init\n  constructor(\n    private readonly itemService: UserService,\n    private readonly messageService: MessageService,\n    private readonly confirmationService: ConfirmationService,\n    public readonly authService: AuthService,\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    if(this.items$) this.items$.unsubscribe()\n    this.items$ = this.itemService.browse().subscribe(res => {\n      this.items = res\n    })\n  }\n\n  // section logic\n  deleteSelectedItems() {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete the selected items?',\n      accept: () => {\n        this.selectedItems.forEach(item =>\n          this.itemService.delete(item).subscribe(() => {\n            this.items = this.items.filter(i => !this.selectedItems.includes(i))\n            this.selectedItems = []\n            this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Item deleted' })\n          }))\n      }\n    })\n  }\n\n  deleteItem(item: User) {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete this item?',\n      accept: () => {\n        this.itemService.delete(item).subscribe(() => {\n          this.items = this.items.filter(i => i !== item)\n          this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Item deleted' })\n        })\n      }\n    })\n  }\n\n  // section destruct\n  ngOnDestroy() {\n    if(this.items$) this.items$.unsubscribe()\n  }\n}\n\n    \n\n    \n        \n  \n    Users\n  \n\n\n\n  \n    \n      \n        \n      \n\n      \n        \n      \n    \n\n    \n      \n        \n          Manage Users\n          \n            \n            \n            \n          \n        \n      \n\n      \n        \n          \n            \n          \n          Name \n          Email \n          Registered \n           Operations \n        \n      \n\n      \n        \n          \n            \n          \n          \n            {{item.name}}\n          \n          \n            {{ item.email }}\n          \n          \n            {{ item.created_at | date: 'yyyy-MM-dd HH:mm' }}\n          \n          \n            \n          \n        \n      \n\n      \n        \n          In total there are {{items ? items.length : 0 }} users.\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./users.page.scss\n                \n                @import \"src/theme/crud_table\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Users                                                                                Manage Users                                                                                                                              Name           Email           Registered            Operations                                                                                   {{item.name}}                                {{ item.email }}                                {{ item.created_at | date: \\'yyyy-MM-dd HH:mm\\' }}                                                                                In total there are {{items ? items.length : 0 }} users.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PasswordInputComponent', 'selector': 'app-password-input'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'ProjectReadPage', 'selector': 'app-project-read'},{'name': 'ProjectsPage', 'selector': 'app-projects'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'TeamReadPage', 'selector': 'app-team-read'},{'name': 'TeamsPage', 'selector': 'app-teams'},{'name': 'UserReadPage', 'selector': 'app-user-read'},{'name': 'UsersPage', 'selector': 'app-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersPageModule.html":{"url":"modules/UsersPageModule.html","title":"module - UsersPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersPageModule\n\n\n\ncluster_UsersPageModule_declarations\n\n\n\ncluster_UsersPageModule_imports\n\n\n\n\nUsersPage\n\nUsersPage\n\n\n\nUsersPageModule\n\nUsersPageModule\n\nUsersPageModule -->\n\nUsersPage->UsersPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUsersPageModule -->\n\nSharedModule->UsersPageModule\n\n\n\n\n\nUsersPageRoutingModule\n\nUsersPageRoutingModule\n\nUsersPageModule -->\n\nUsersPageRoutingModule->UsersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UsersPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\n\nimport { IonicModule } from '@ionic/angular'\n\nimport { UsersPageRoutingModule } from './users-routing.module'\n\nimport { UsersPage } from './users.page'\nimport { ToolbarModule } from 'primeng/toolbar'\nimport { ButtonModule } from 'primeng/button'\nimport { RippleModule } from 'primeng/ripple'\nimport { SharedModule } from 'primeng/api'\nimport { TableModule } from 'primeng/table'\nimport { InputTextModule } from 'primeng/inputtext'\nimport { DialogModule } from 'primeng/dialog'\nimport { DividerModule } from 'primeng/divider'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UsersPageRoutingModule,\n    ToolbarModule,\n    ButtonModule,\n    RippleModule,\n    SharedModule,\n    TableModule,\n    InputTextModule,\n    DialogModule,\n    DividerModule\n  ],\n  declarations: [ UsersPage ]\n})\nexport class UsersPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersPageRoutingModule.html":{"url":"modules/UsersPageRoutingModule.html","title":"module - UsersPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/users/users-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { UsersPage } from './users.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  },\n  {\n    path: ':id',\n    loadChildren: () => \"import('./user-read/user-read.module').then(m => m.UserReadPageModule)\"\n  }\n]\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n})\nexport class UsersPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/classes/CrudService.generic.ts\n            \n            injectable\n            CrudService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/classes/ICrud.interface.ts\n            \n            interface\n            ICrud\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/classes/IResponse.generic.ts\n            \n            interface\n            IResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/classes/ITimestamp.interface.ts\n            \n            interface\n            ITimestamp\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/classes/JsonWebToken.entity.ts\n            \n            class\n            JsonWebTokenEntity\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/classes/JsonWebToken.entity.ts\n            \n            interface\n            IToken\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/classes/Project.entity.ts\n            \n            class\n            Project\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/classes/Project.entity.ts\n            \n            interface\n            IProject\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/classes/Task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/classes/Task.entity.ts\n            \n            interface\n            ITask\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/classes/Team.entity.ts\n            \n            class\n            Team\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/classes/Team.entity.ts\n            \n            interface\n            ITeam\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/classes/User.entity.ts\n            \n            class\n            User\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/classes/User.entity.ts\n            \n            interface\n            IUser\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/http/guards/guest.guard.ts\n            \n            guard\n            GuestGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/http/interceptors/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/pages/auth/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/pages/auth/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/auth/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/projects/project-read/project-read.page.ts\n            \n            component\n            ProjectReadPage\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/pages/projects/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/projects/projects.page.ts\n            \n            component\n            ProjectsPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/tasks/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/teams/team-read/team-read-page.component.ts\n            \n            component\n            TeamReadPage\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/pages/teams/team.service.ts\n            \n            injectable\n            TeamService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/pages/teams/teams.page.ts\n            \n            component\n            TeamsPage\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/pages/users/user-read/user-read-page.component.ts\n            \n            component\n            UserReadPage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/users/users.page.ts\n            \n            component\n            UsersPage\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/password-input/password-input.component.ts\n            \n            component\n            PasswordInputComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/shared/services/rest.service.ts\n            \n            injectable\n            RestService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/shared/validators/password-confirmed.validator.ts\n            \n            variable\n            PasswordConfirmedValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/validators/password.validator.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.local.ts\n            \n            variable\n            environmentLocal\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.shared.ts\n            \n            variable\n            sharedEnv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^13.0.0\n        \n            @angular/cdk : ^13.0.3\n        \n            @angular/common : ~12.1.1\n        \n            @angular/core : ~12.1.1\n        \n            @angular/forms : ~12.1.1\n        \n            @angular/platform-browser : ~12.1.1\n        \n            @angular/platform-browser-dynamic : ~12.1.1\n        \n            @angular/router : ~12.1.1\n        \n            @angular/service-worker : ~12.1.1\n        \n            @capacitor/android : 3.3.2\n        \n            @capacitor/app : 1.0.6\n        \n            @capacitor/core : 3.3.0\n        \n            @capacitor/haptics : 1.1.3\n        \n            @capacitor/keyboard : 1.1.3\n        \n            @capacitor/status-bar : 1.0.6\n        \n            @ionic/angular : ^5.5.2\n        \n            @ionic/storage-angular : ^3.0.6\n        \n            @ngx-translate/core : ^13.0.0\n        \n            @ngx-translate/http-loader : ^6.0.0\n        \n            @popperjs/core : ^2.10.2\n        \n            bootstrap : ^5.1.3\n        \n            jwt-decode : ^3.1.2\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^12.2.2\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.2.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            passwordValidator   (src/.../password.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                    Initializes a new translation file loader through http\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Angular HTTP Client singleton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/shared/validators/password.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProjectReadPageModule\n\n\n\ncluster_ProjectReadPageModule_declarations\n\n\n\ncluster_ProjectReadPageModule_imports\n\n\n\ncluster_ProjectsPageModule\n\n\n\ncluster_ProjectsPageModule_declarations\n\n\n\ncluster_ProjectsPageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TeamReadPageModule\n\n\n\ncluster_TeamReadPageModule_declarations\n\n\n\ncluster_TeamReadPageModule_imports\n\n\n\ncluster_TeamsPageModule\n\n\n\ncluster_TeamsPageModule_declarations\n\n\n\ncluster_TeamsPageModule_imports\n\n\n\ncluster_UserReadPageModule\n\n\n\ncluster_UserReadPageModule_declarations\n\n\n\ncluster_UserReadPageModule_imports\n\n\n\ncluster_UsersPageModule\n\n\n\ncluster_UsersPageModule_declarations\n\n\n\ncluster_UsersPageModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\nPasswordInputComponent \n\nPasswordInputComponent \n\nPasswordInputComponent  -->\n\nSharedModule->PasswordInputComponent \n\n\n\n\n\nUsersPageModule\n\nUsersPageModule\n\nUsersPageModule -->\n\nSharedModule->UsersPageModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nAppModule -->\n\nProjectService->AppModule\n\n\n\n\n\nStorageService\n\nStorageService\n\nAppModule -->\n\nStorageService->AppModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nAppModule -->\n\nTaskService->AppModule\n\n\n\n\n\nTeamService\n\nTeamService\n\nAppModule -->\n\nTeamService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nProjectReadPage\n\nProjectReadPage\n\n\n\nProjectReadPageModule\n\nProjectReadPageModule\n\nProjectReadPageModule -->\n\nProjectReadPage->ProjectReadPageModule\n\n\n\n\n\nProjectReadPageRoutingModule\n\nProjectReadPageRoutingModule\n\nProjectReadPageModule -->\n\nProjectReadPageRoutingModule->ProjectReadPageModule\n\n\n\n\n\nProjectsPage\n\nProjectsPage\n\n\n\nProjectsPageModule\n\nProjectsPageModule\n\nProjectsPageModule -->\n\nProjectsPage->ProjectsPageModule\n\n\n\n\n\nProjectsPageRoutingModule\n\nProjectsPageRoutingModule\n\nProjectsPageModule -->\n\nProjectsPageRoutingModule->ProjectsPageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nPasswordInputComponent\n\nPasswordInputComponent\n\nSharedModule -->\n\nPasswordInputComponent->SharedModule\n\n\n\n\n\nTeamReadPage\n\nTeamReadPage\n\n\n\nTeamReadPageModule\n\nTeamReadPageModule\n\nTeamReadPageModule -->\n\nTeamReadPage->TeamReadPageModule\n\n\n\n\n\nTeamReadRoutingModule\n\nTeamReadRoutingModule\n\nTeamReadPageModule -->\n\nTeamReadRoutingModule->TeamReadPageModule\n\n\n\n\n\nTeamsPage\n\nTeamsPage\n\n\n\nTeamsPageModule\n\nTeamsPageModule\n\nTeamsPageModule -->\n\nTeamsPage->TeamsPageModule\n\n\n\n\n\nTeamsPageRoutingModule\n\nTeamsPageRoutingModule\n\nTeamsPageModule -->\n\nTeamsPageRoutingModule->TeamsPageModule\n\n\n\n\n\nUserReadPage\n\nUserReadPage\n\n\n\nUserReadPageModule\n\nUserReadPageModule\n\nUserReadPageModule -->\n\nUserReadPage->UserReadPageModule\n\n\n\n\n\nReadPageRoutingModule\n\nReadPageRoutingModule\n\nUserReadPageModule -->\n\nReadPageRoutingModule->UserReadPageModule\n\n\n\n\n\nUsersPage\n\nUsersPage\n\nUsersPageModule -->\n\nUsersPage->UsersPageModule\n\n\n\n\n\nUsersPageRoutingModule\n\nUsersPageRoutingModule\n\nUsersPageModule -->\n\nUsersPageRoutingModule->UsersPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        25 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        48 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectReadPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectReadPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamReadPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamReadRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserReadPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environmentLocal   (src/.../environment.local.ts)\n                        \n                        \n                            PasswordConfirmedValidator   (src/.../password-confirmed.validator.ts)\n                        \n                        \n                            sharedEnv   (src/.../environment.shared.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  ...sharedEnv\n}\n                    \n                \n\n            \n                \n                    Environmental configuration in production\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  ...sharedEnv\n}\n                    \n                \n\n            \n                \n                    Environmental configuration in production\n\n                \n            \n\n        \n    \n\n    src/environments/environment.local.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environmentLocal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n}\n                    \n                \n\n            \n                \n                    This file SHOULD NEVER BE IMPORTED outside of other environment files!\n\n                \n            \n\n        \n    \n\n    src/app/shared/validators/password-confirmed.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PasswordConfirmedValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : (control: AbstractControl): ValidationErrors | null => {\n  const password = control.get('password')\n  const confirmPassword = control.get('password_confirmation')\n  return password\n      && confirmPassword\n      && password.touched\n      && confirmPassword.touched\n      && password.value !== confirmPassword.value\n    ? { password_confirmation: false } : null\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.shared.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sharedEnv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  apiUrl: 'http://localhost:8000/api',\n  ...environmentLocal\n}\n                    \n                \n\n            \n                \n                    Environment settings which are identical in both production and development\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
